// <auto-generated />
using System;
using Ferretto.Common.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ferretto.Common.EF.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Ferretto.Common.Models.AbcClass", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AbcClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Aisle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId");

                    b.Property<int?>("Columns");

                    b.Property<int?>("Floors");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Aisles");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Areas");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Bay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BayTypeId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int?>("LoadingUnitsBufferSize");

                    b.HasKey("Id");

                    b.HasIndex("BayTypeId");

                    b.ToTable("Bays");
                });

            modelBuilder.Entity("Ferretto.Common.Models.BayType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("BayTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Cell", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AisleId");

                    b.Property<int?>("CellNumber");

                    b.Property<int>("CellStatusId");

                    b.Property<int?>("CellTypeId");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int?>("Column")
                        .IsRequired();

                    b.Property<int?>("Floor")
                        .IsRequired();

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<string>("Side")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int?>("XCoordinate");

                    b.Property<int?>("YCoordinate");

                    b.Property<int?>("ZCoordinate");

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.HasIndex("CellStatusId");

                    b.HasIndex("CellTypeId");

                    b.HasIndex("ClassId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellConfiguration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CellConfigurations");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellConfigurationCellPositionLoadingUnitType", b =>
                {
                    b.Property<int>("CellPositionId");

                    b.Property<int>("CellConfigurationId");

                    b.Property<int>("LoadingUnitTypeId");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("CellPositionId", "CellConfigurationId", "LoadingUnitTypeId");

                    b.HasIndex("CellConfigurationId");

                    b.HasIndex("LoadingUnitTypeId");

                    b.ToTable("CellConfigurationCellPositionLoadingUnitTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellConfigurationCellType", b =>
                {
                    b.Property<int>("CellConfigurationId");

                    b.Property<int>("CellTypeId");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.HasKey("CellConfigurationId", "CellTypeId");

                    b.HasIndex("CellTypeId");

                    b.ToTable("CellConfigurationCellTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellHeightClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("MaxHeight");

                    b.Property<int>("MinHeight");

                    b.HasKey("Id");

                    b.ToTable("CellHeightClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellPosition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int?>("XOffset");

                    b.Property<int?>("YOffset");

                    b.Property<int?>("ZOffset");

                    b.HasKey("Id");

                    b.ToTable("CellPositions");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellsGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AisleId");

                    b.Property<int>("FirstCellId");

                    b.Property<int>("GroupHeight");

                    b.Property<int>("LastCellId");

                    b.Property<int?>("Priority");

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.HasIndex("FirstCellId");

                    b.HasIndex("LastCellId");

                    b.ToTable("CellsGroups");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellSizeClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Length");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("CellSizeClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CellStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellTotal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AisleId");

                    b.Property<int>("CellStatusId");

                    b.Property<int>("CellTypeId");

                    b.Property<int>("CellsNumber");

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.HasIndex("CellStatusId");

                    b.HasIndex("CellTypeId");

                    b.ToTable("CellTotals");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CellHeightClassId");

                    b.Property<int>("CellSizeClassId");

                    b.Property<int>("CellWeightClassId");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CellHeightClassId");

                    b.HasIndex("CellSizeClassId");

                    b.HasIndex("CellWeightClassId");

                    b.ToTable("CellTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellTypeAisle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AisleId");

                    b.Property<int>("CellTypeId");

                    b.Property<int>("CellTypeTotal")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<decimal>("Ratio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(3, 2)")
                        .HasDefaultValue(1m);

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.HasIndex("CellTypeId");

                    b.ToTable("CellTypesAisles");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellWeightClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("MaxWeight");

                    b.Property<int>("MinWeight");

                    b.HasKey("Id");

                    b.ToTable("CellWeightClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Compartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<int?>("CompartmentStatusId");

                    b.Property<int>("CompartmentTypeId");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("FifoTime");

                    b.Property<DateTime?>("FirstStoreDate");

                    b.Property<int?>("Height");

                    b.Property<DateTime?>("InventoryDate");

                    b.Property<int?>("ItemId");

                    b.Property<int>("ItemPairing");

                    b.Property<int?>("LaserPointerCoordinate1");

                    b.Property<int?>("LaserPointerCoordinate2");

                    b.Property<DateTime?>("LastHandlingDate");

                    b.Property<DateTime?>("LastPickDate");

                    b.Property<DateTime?>("LastStoreDate");

                    b.Property<int>("LoadingUnitId");

                    b.Property<string>("Lot");

                    b.Property<int?>("MaterialStatusId");

                    b.Property<int?>("MaxCapacity");

                    b.Property<int?>("PackageTypeId");

                    b.Property<string>("RegistrationNumber");

                    b.Property<int>("ReservedForPick")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("ReservedToStore")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Sub1");

                    b.Property<string>("Sub2");

                    b.Property<int?>("Width");

                    b.Property<int?>("XPosition");

                    b.Property<int?>("YPosition");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasFilter("[Code] IS NOT NULL");

                    b.HasIndex("CompartmentStatusId");

                    b.HasIndex("CompartmentTypeId");

                    b.HasIndex("ItemId");

                    b.HasIndex("LoadingUnitId");

                    b.HasIndex("MaterialStatusId");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("Compartments");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CompartmentStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("CompartmentStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CompartmentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int?>("Height");

                    b.Property<int?>("Width");

                    b.HasKey("Id");

                    b.ToTable("CompartmentTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.DefaultCompartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompartmentTypeId");

                    b.Property<int>("DefaultLoadingUnitId");

                    b.Property<string>("Image");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("XPosition");

                    b.Property<int>("YPosition");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentTypeId");

                    b.HasIndex("DefaultLoadingUnitId");

                    b.ToTable("DefaultCompartments");
                });

            modelBuilder.Entity("Ferretto.Common.Models.DefaultLoadingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CellPairing");

                    b.Property<int>("DefaultHandlingParametersCorrection");

                    b.Property<string>("Image");

                    b.Property<int>("LoadingUnitTypeId");

                    b.HasKey("Id");

                    b.HasIndex("LoadingUnitTypeId");

                    b.ToTable("DefaultLoadingUnits");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AverageWeight");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Description");

                    b.Property<int?>("FifoTimePick");

                    b.Property<int?>("FifoTimeStore");

                    b.Property<int?>("Height");

                    b.Property<string>("Image");

                    b.Property<DateTime?>("InventoryDate");

                    b.Property<int?>("InventoryTolerance");

                    b.Property<int?>("ItemManagementTypeId");

                    b.Property<DateTime?>("LastModificationDate");

                    b.Property<DateTime?>("LastPickDate");

                    b.Property<DateTime?>("LastStoreDate");

                    b.Property<int?>("Length");

                    b.Property<string>("MeasureUnitId");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int?>("PickTolerance");

                    b.Property<int?>("ReorderPoint");

                    b.Property<int?>("ReorderQuantity");

                    b.Property<int?>("StoreTolerance");

                    b.Property<int?>("Width");

                    b.HasKey("Id");

                    b.HasIndex("ClassId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ItemManagementTypeId");

                    b.HasIndex("MeasureUnitId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemArea", b =>
                {
                    b.Property<int>("ItemId");

                    b.Property<int>("AreaId");

                    b.HasKey("ItemId", "AreaId");

                    b.HasIndex("AreaId");

                    b.ToTable("ItemsAreas");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AreaId");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CustomerOrderCode");

                    b.Property<string>("CustomerOrderDescription");

                    b.Property<string>("Description");

                    b.Property<DateTime?>("ExecutionEndDate");

                    b.Property<DateTime?>("FirstExecutionDate");

                    b.Property<int>("ItemListStatusId");

                    b.Property<int>("ItemListTypeId");

                    b.Property<string>("Job");

                    b.Property<DateTime?>("LastModificationDate");

                    b.Property<int>("Priority")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(1);

                    b.Property<bool>("ShipmentUnitAssociated");

                    b.Property<string>("ShipmentUnitCode");

                    b.Property<string>("ShipmentUnitDescription");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ItemListStatusId");

                    b.HasIndex("ItemListTypeId");

                    b.ToTable("ItemLists");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemListRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime?>("CompletionDate");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("EvadedQuantity");

                    b.Property<int>("ItemId");

                    b.Property<int>("ItemListId");

                    b.Property<int>("ItemListRowStatusId");

                    b.Property<DateTime?>("LastExecutionDate");

                    b.Property<DateTime?>("LastModificationDate");

                    b.Property<string>("Lot");

                    b.Property<int>("MaterialStatusId");

                    b.Property<int>("PackageTypeId");

                    b.Property<string>("RegistrationNumber");

                    b.Property<int>("RequiredQuantity");

                    b.Property<int>("RowPriority");

                    b.Property<string>("Sub1");

                    b.Property<string>("Sub2");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ItemListRowStatusId");

                    b.HasIndex("MaterialStatusId");

                    b.HasIndex("PackageTypeId");

                    b.ToTable("ItemListRows");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemListRowStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ItemListRowStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemListStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ItemListStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemListType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ItemListTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemManagementType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("ItemManagementTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CellId");

                    b.Property<int>("CellPairing");

                    b.Property<int>("CellPositionId");

                    b.Property<string>("ClassId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("HandlingParametersCorrection");

                    b.Property<int>("Height");

                    b.Property<int>("InCycleCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<DateTime?>("InventoryDate");

                    b.Property<DateTime?>("LastHandlingDate");

                    b.Property<DateTime?>("LastPickDate");

                    b.Property<DateTime?>("LastStoreDate");

                    b.Property<string>("LoadingUnitStatusId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("LoadingUnitTypeId");

                    b.Property<string>("Note")
                        .HasColumnType("text");

                    b.Property<int>("OtherCycleCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<int>("OutCycleCount")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(0);

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("CellId");

                    b.HasIndex("CellPositionId");

                    b.HasIndex("ClassId");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("LoadingUnitStatusId");

                    b.HasIndex("LoadingUnitTypeId");

                    b.ToTable("LoadingUnits");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitHeightClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("MaxHeight");

                    b.Property<int>("MinHeight");

                    b.HasKey("Id");

                    b.ToTable("LoadingUnitHeightClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitRange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActualValue");

                    b.Property<int>("AreaId");

                    b.Property<int>("MaxValue");

                    b.Property<int>("MinValue");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("LoadingUnitRanges");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitSizeClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BayForksUnthread");

                    b.Property<int?>("BayOffset");

                    b.Property<int?>("CellForksUnthread");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("Length");

                    b.Property<int?>("Lift");

                    b.Property<int>("Width");

                    b.HasKey("Id");

                    b.ToTable("LoadingUnitSizeClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("LoadingUnitStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("LoadingUnitHeightClassId");

                    b.Property<int>("LoadingUnitSizeClassId");

                    b.Property<int>("LoadingUnitWeightClassId");

                    b.HasKey("Id");

                    b.HasIndex("LoadingUnitHeightClassId");

                    b.HasIndex("LoadingUnitSizeClassId");

                    b.HasIndex("LoadingUnitWeightClassId");

                    b.ToTable("LoadingUnitTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitTypeAisle", b =>
                {
                    b.Property<int>("AisleId");

                    b.Property<int>("LoadingUnitTypeId");

                    b.HasKey("AisleId", "LoadingUnitTypeId");

                    b.HasIndex("LoadingUnitTypeId");

                    b.ToTable("LoadingUnitTypesAisles");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitWeightClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<int>("MaxWeight");

                    b.Property<int>("MinWeight");

                    b.HasKey("Id");

                    b.ToTable("LoadingUnitWeightClasses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Machine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ActualWeight");

                    b.Property<int>("AisleId");

                    b.Property<long?>("AutomaticTime");

                    b.Property<DateTime?>("BuildDate");

                    b.Property<int?>("Cradles");

                    b.Property<string>("CustomerAddress");

                    b.Property<string>("CustomerCity");

                    b.Property<string>("CustomerCode");

                    b.Property<string>("CustomerCountry");

                    b.Property<string>("CustomerName");

                    b.Property<long?>("ErrorTime");

                    b.Property<string>("Image");

                    b.Property<long?>("InputLoadingUnitsCount");

                    b.Property<DateTime?>("InstallationDate");

                    b.Property<DateTime?>("LastPoweOn");

                    b.Property<DateTime?>("LastServiceDate");

                    b.Property<double?>("Latitude");

                    b.Property<int?>("LoadingUnitsPerCradle");

                    b.Property<double?>("Longitude");

                    b.Property<string>("MachineTypeId")
                        .IsRequired()
                        .HasColumnType("char(1)");

                    b.Property<long?>("ManualTime");

                    b.Property<long?>("MissionTime");

                    b.Property<long?>("MovedLoadingUnitsCount");

                    b.Property<DateTime?>("NextServiceDate");

                    b.Property<string>("Nickname")
                        .IsRequired();

                    b.Property<long?>("OutputLoadingUnitsCount");

                    b.Property<long?>("PowerOnTime");

                    b.Property<string>("RegistrationNumber");

                    b.Property<DateTime?>("TestDate");

                    b.Property<long?>("TotalMaxWeight");

                    b.HasKey("Id");

                    b.HasIndex("AisleId");

                    b.HasIndex("MachineTypeId");

                    b.ToTable("Machines");
                });

            modelBuilder.Entity("Ferretto.Common.Models.MachineType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MachineTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.MaterialStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MaterialStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.MeasureUnit", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MeasureUnits");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompartmentId");

                    b.Property<int?>("DestinationBayId");

                    b.Property<int?>("DestinationCellId");

                    b.Property<int?>("ItemId");

                    b.Property<int?>("ItemListId");

                    b.Property<int?>("ItemListRowId");

                    b.Property<int?>("LoadingUnitId");

                    b.Property<string>("Lot");

                    b.Property<int?>("MaterialStatusId");

                    b.Property<string>("MissionStatusId")
                        .HasColumnType("char(1)");

                    b.Property<string>("MissionTypeId")
                        .HasColumnType("char(2)");

                    b.Property<int?>("PackageTypeId");

                    b.Property<int>("Priority");

                    b.Property<string>("RegistrationNumber");

                    b.Property<int>("RequiredQuantity");

                    b.Property<int?>("SourceBayId");

                    b.Property<int?>("SourceCellId");

                    b.Property<string>("Sub1");

                    b.Property<string>("Sub2");

                    b.HasKey("Id");

                    b.HasIndex("CompartmentId");

                    b.HasIndex("DestinationBayId");

                    b.HasIndex("DestinationCellId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ItemListId");

                    b.HasIndex("ItemListRowId");

                    b.HasIndex("LoadingUnitId");

                    b.HasIndex("MaterialStatusId");

                    b.HasIndex("MissionStatusId");

                    b.HasIndex("MissionTypeId");

                    b.HasIndex("PackageTypeId");

                    b.HasIndex("SourceBayId");

                    b.HasIndex("SourceCellId");

                    b.ToTable("Missions");
                });

            modelBuilder.Entity("Ferretto.Common.Models.MissionStatus", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(1)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MissionStatuses");
                });

            modelBuilder.Entity("Ferretto.Common.Models.MissionType", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(2)");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("MissionTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.PackageType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("PackageTypes");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Aisle", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Area", "Area")
                        .WithMany("Aisles")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Bay", b =>
                {
                    b.HasOne("Ferretto.Common.Models.BayType", "BayType")
                        .WithMany("Bays")
                        .HasForeignKey("BayTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Cell", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("Cells")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.CellStatus", "CellStatus")
                        .WithMany("Cells")
                        .HasForeignKey("CellStatusId");

                    b.HasOne("Ferretto.Common.Models.CellType", "CellType")
                        .WithMany("Cells")
                        .HasForeignKey("CellTypeId");

                    b.HasOne("Ferretto.Common.Models.AbcClass", "AbcClass")
                        .WithMany("Cells")
                        .HasForeignKey("ClassId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellConfigurationCellPositionLoadingUnitType", b =>
                {
                    b.HasOne("Ferretto.Common.Models.CellConfiguration", "CellConfiguration")
                        .WithMany("CellConfigurationCellPositionLoadingUnitTypes")
                        .HasForeignKey("CellConfigurationId");

                    b.HasOne("Ferretto.Common.Models.CellPosition", "CellPosition")
                        .WithMany("CellConfigurationCellPositionLoadingUnitTypes")
                        .HasForeignKey("CellPositionId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitType", "LoadingUnitType")
                        .WithMany("CellConfigurationCellPositionLoadingUnitTypes")
                        .HasForeignKey("LoadingUnitTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellConfigurationCellType", b =>
                {
                    b.HasOne("Ferretto.Common.Models.CellConfiguration", "CellConfiguration")
                        .WithMany("CellConfigurationCellTypes")
                        .HasForeignKey("CellConfigurationId");

                    b.HasOne("Ferretto.Common.Models.CellType", "CellType")
                        .WithMany("CellConfigurationCellTypes")
                        .HasForeignKey("CellTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellsGroup", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("CellsGroups")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.Cell", "FirstCell")
                        .WithMany("FirstCellsGroups")
                        .HasForeignKey("FirstCellId");

                    b.HasOne("Ferretto.Common.Models.Cell", "LastCell")
                        .WithMany("LastCellsGroups")
                        .HasForeignKey("LastCellId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellTotal", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("CellTotals")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.CellStatus", "CellStatus")
                        .WithMany("CellTotals")
                        .HasForeignKey("CellStatusId");

                    b.HasOne("Ferretto.Common.Models.CellType", "CellType")
                        .WithMany("CellTotals")
                        .HasForeignKey("CellTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellType", b =>
                {
                    b.HasOne("Ferretto.Common.Models.CellHeightClass", "CellHeightClass")
                        .WithMany("CellTypes")
                        .HasForeignKey("CellHeightClassId");

                    b.HasOne("Ferretto.Common.Models.CellSizeClass", "CellSizeClass")
                        .WithMany("CellTypes")
                        .HasForeignKey("CellSizeClassId");

                    b.HasOne("Ferretto.Common.Models.CellWeightClass", "CellWeightClass")
                        .WithMany("CellTypes")
                        .HasForeignKey("CellWeightClassId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.CellTypeAisle", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("AisleCellsTypes")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.CellType", "CellType")
                        .WithMany("CellTypeAisles")
                        .HasForeignKey("CellTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Compartment", b =>
                {
                    b.HasOne("Ferretto.Common.Models.CompartmentStatus", "CompartmentStatus")
                        .WithMany("Compartments")
                        .HasForeignKey("CompartmentStatusId");

                    b.HasOne("Ferretto.Common.Models.CompartmentType", "CompartmentType")
                        .WithMany("Compartments")
                        .HasForeignKey("CompartmentTypeId");

                    b.HasOne("Ferretto.Common.Models.Item", "Item")
                        .WithMany("Compartments")
                        .HasForeignKey("ItemId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnit", "LoadingUnit")
                        .WithMany("Compartments")
                        .HasForeignKey("LoadingUnitId");

                    b.HasOne("Ferretto.Common.Models.MaterialStatus", "MaterialStatus")
                        .WithMany("Compartments")
                        .HasForeignKey("MaterialStatusId");

                    b.HasOne("Ferretto.Common.Models.PackageType", "PackageType")
                        .WithMany("Compartments")
                        .HasForeignKey("PackageTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.DefaultCompartment", b =>
                {
                    b.HasOne("Ferretto.Common.Models.CompartmentType", "CompartmentType")
                        .WithMany("DefaultCompartments")
                        .HasForeignKey("CompartmentTypeId");

                    b.HasOne("Ferretto.Common.Models.DefaultLoadingUnit", "DefaultLoadingUnit")
                        .WithMany("DefaultCompartments")
                        .HasForeignKey("DefaultLoadingUnitId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.DefaultLoadingUnit", b =>
                {
                    b.HasOne("Ferretto.Common.Models.LoadingUnitType", "LoadingUnitType")
                        .WithMany("DefaultLoadingUnits")
                        .HasForeignKey("LoadingUnitTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Item", b =>
                {
                    b.HasOne("Ferretto.Common.Models.AbcClass", "AbcClass")
                        .WithMany("Items")
                        .HasForeignKey("ClassId");

                    b.HasOne("Ferretto.Common.Models.ItemManagementType", "ItemManagementType")
                        .WithMany("Items")
                        .HasForeignKey("ItemManagementTypeId");

                    b.HasOne("Ferretto.Common.Models.MeasureUnit", "MeasureUnit")
                        .WithMany("Items")
                        .HasForeignKey("MeasureUnitId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemArea", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Area", "Area")
                        .WithMany("AreaItems")
                        .HasForeignKey("AreaId");

                    b.HasOne("Ferretto.Common.Models.Item", "Item")
                        .WithMany("ItemAreas")
                        .HasForeignKey("ItemId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemList", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Area", "Area")
                        .WithMany("ItemLists")
                        .HasForeignKey("AreaId");

                    b.HasOne("Ferretto.Common.Models.ItemListStatus", "ItemListStatus")
                        .WithMany("ItemLists")
                        .HasForeignKey("ItemListStatusId");

                    b.HasOne("Ferretto.Common.Models.ItemListType", "ItemListType")
                        .WithMany("ItemLists")
                        .HasForeignKey("ItemListTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.ItemListRow", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Item", "Item")
                        .WithMany("ItemListRows")
                        .HasForeignKey("ItemId");

                    b.HasOne("Ferretto.Common.Models.ItemList", "ItemList")
                        .WithMany("ItemListRows")
                        .HasForeignKey("ItemListId");

                    b.HasOne("Ferretto.Common.Models.ItemListRowStatus", "ItemListRowStatus")
                        .WithMany("ItemListRows")
                        .HasForeignKey("ItemListRowStatusId");

                    b.HasOne("Ferretto.Common.Models.MaterialStatus", "MaterialStatus")
                        .WithMany("ItemListRows")
                        .HasForeignKey("MaterialStatusId");

                    b.HasOne("Ferretto.Common.Models.PackageType", "PackageType")
                        .WithMany("ItemListRows")
                        .HasForeignKey("PackageTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnit", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Cell", "Cell")
                        .WithMany("LoadingUnits")
                        .HasForeignKey("CellId");

                    b.HasOne("Ferretto.Common.Models.CellPosition", "CellPosition")
                        .WithMany("LoadingUnits")
                        .HasForeignKey("CellPositionId");

                    b.HasOne("Ferretto.Common.Models.AbcClass", "AbcClass")
                        .WithMany("LoadingUnits")
                        .HasForeignKey("ClassId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitStatus", "LoadingUnitStatus")
                        .WithMany("LoadingUnits")
                        .HasForeignKey("LoadingUnitStatusId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitType", "LoadingUnitType")
                        .WithMany("LoadingUnits")
                        .HasForeignKey("LoadingUnitTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitRange", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Area", "Area")
                        .WithMany("LoadingUnitRanges")
                        .HasForeignKey("AreaId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitType", b =>
                {
                    b.HasOne("Ferretto.Common.Models.LoadingUnitHeightClass", "LoadingUnitHeightClass")
                        .WithMany("LoadingUnitTypes")
                        .HasForeignKey("LoadingUnitHeightClassId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitSizeClass", "LoadingUnitSizeClass")
                        .WithMany("LoadingUnitTypes")
                        .HasForeignKey("LoadingUnitSizeClassId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitWeightClass", "LoadingUnitWeightClass")
                        .WithMany("LoadingUnitTypes")
                        .HasForeignKey("LoadingUnitWeightClassId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.LoadingUnitTypeAisle", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("AisleLoadingUnitTypes")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnitType", "LoadingUnit")
                        .WithMany("LoadingUnitTypeAisles")
                        .HasForeignKey("LoadingUnitTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Machine", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Aisle", "Aisle")
                        .WithMany("Machines")
                        .HasForeignKey("AisleId");

                    b.HasOne("Ferretto.Common.Models.MachineType", "MachineType")
                        .WithMany("Machines")
                        .HasForeignKey("MachineTypeId");
                });

            modelBuilder.Entity("Ferretto.Common.Models.Mission", b =>
                {
                    b.HasOne("Ferretto.Common.Models.Compartment", "Compartment")
                        .WithMany("Missions")
                        .HasForeignKey("CompartmentId");

                    b.HasOne("Ferretto.Common.Models.Bay", "DestinationBay")
                        .WithMany("DestinationMissions")
                        .HasForeignKey("DestinationBayId");

                    b.HasOne("Ferretto.Common.Models.Cell", "DestinationCell")
                        .WithMany("DestinationMissions")
                        .HasForeignKey("DestinationCellId");

                    b.HasOne("Ferretto.Common.Models.Item", "Item")
                        .WithMany("Missions")
                        .HasForeignKey("ItemId");

                    b.HasOne("Ferretto.Common.Models.ItemList", "ItemList")
                        .WithMany("Missions")
                        .HasForeignKey("ItemListId");

                    b.HasOne("Ferretto.Common.Models.ItemListRow", "ItemListRow")
                        .WithMany("Missions")
                        .HasForeignKey("ItemListRowId");

                    b.HasOne("Ferretto.Common.Models.LoadingUnit", "LoadingUnit")
                        .WithMany("Missions")
                        .HasForeignKey("LoadingUnitId");

                    b.HasOne("Ferretto.Common.Models.MaterialStatus", "MaterialStatus")
                        .WithMany("Missions")
                        .HasForeignKey("MaterialStatusId");

                    b.HasOne("Ferretto.Common.Models.MissionStatus", "MissionStatus")
                        .WithMany("Missions")
                        .HasForeignKey("MissionStatusId");

                    b.HasOne("Ferretto.Common.Models.MissionType", "MissionType")
                        .WithMany("Missions")
                        .HasForeignKey("MissionTypeId");

                    b.HasOne("Ferretto.Common.Models.PackageType", "PackageType")
                        .WithMany("Missions")
                        .HasForeignKey("PackageTypeId");

                    b.HasOne("Ferretto.Common.Models.Bay", "SourceBay")
                        .WithMany("SourceMissions")
                        .HasForeignKey("SourceBayId");

                    b.HasOne("Ferretto.Common.Models.Cell", "SourceCell")
                        .WithMany("SourceMissions")
                        .HasForeignKey("SourceCellId");
                });
#pragma warning restore 612, 618
        }
    }
}
