<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    xmlns:system="clr-namespace:System;assembly=mscorlib"
                    xmlns:conv="clr-namespace:Ferretto.Common.Controls.WPF.Converters">

    <!--  colors - compartment  -->
    <Color x:Key="MediumBlue">#FF0288F7</Color>

    <system:Double x:Key="TrayRulerSize">25</system:Double>
    <FontFamily x:Key="TrayFont">Tahoma</FontFamily>

    <SolidColorBrush x:Key="TrayBackground"
                     Color="{DynamicResource PureWhite}" />
    <SolidColorBrush x:Key="CanvasItemBorder"
                     Color="{DynamicResource LightGrey}" />
    <SolidColorBrush x:Key="SelectedCanvasItemBorder"
                     Color="{StaticResource MediumBlue}" />
    <SolidColorBrush x:Key="BackgroundGridBrush"
                     Color="{DynamicResource WhiteGrey}" />
    <SolidColorBrush x:Key="EditCompartment"
                     Color="{DynamicResource Green}" />

    <!--  colors - filter compartment  -->
    <Color x:Key="DarkRed">#D50000</Color>
    <Color x:Key="LightRed">#F44336</Color>
    <Color x:Key="Orange">#FF9800</Color>
    <Color x:Key="LightGreen">#D4E157</Color>
    <Color x:Key="DarkGreen">#76FF03</Color>
    <Color x:Key="DefaultCompartmentColor">#e6e6e6</Color>

    <SolidColorBrush x:Key="Full"
                     Color="{StaticResource DarkRed}" />
    <SolidColorBrush x:Key="AlmostFull"
                     Color="{StaticResource LightRed}" />
    <SolidColorBrush x:Key="Half"
                     Color="{StaticResource Orange}" />
    <SolidColorBrush x:Key="AlmostEmpty"
                     Color="{StaticResource LightGreen}" />
    <SolidColorBrush x:Key="Empty"
                     Color="{StaticResource DarkGreen}" />

    <Style x:Key="CanvasItemStyle"      
           TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="False" />
        <Setter Property="UseLayoutRounding" Value="False"/>
        <Setter Property="RenderOptions.EdgeMode" Value="Aliased"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Canvas.Top" Value="{Binding Top, Mode=TwoWay}" />
        <Setter Property="Canvas.Left" Value="{Binding Left, Mode=TwoWay}" />
        <Setter Property="Width" Value="{Binding Width, Mode=OneWay}" />
        <Setter Property="Height" Value="{Binding Height, Mode=OneWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Grid>
                        <Border x:Name="BorderOfRectangle"                            
                            BorderBrush="{StaticResource CanvasItemBorder}"
                            BorderThickness="1">
                            <Border x:Name="BorderSelectedRectangle"                                 
                                 BorderBrush="{StaticResource CanvasItemBorder}"
                                 BorderThickness="0">
                                <Rectangle x:Name="Rectangle"
                                       Fill="{Binding ColorFill, Mode=OneWay}" />
                            </Border>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding IsReadOnly}"
                                     Value="True">
                            <Setter TargetName="BorderOfRectangle" Property="BorderBrush" Value="{StaticResource CanvasItemBorder}" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsReadOnly}"
                                     Value="False">
                            <Setter TargetName="BorderOfRectangle" Property="BorderBrush" Value="{StaticResource CanvasItemBorder}" />
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelectable}" Value="True" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderBrush" Value="{StaticResource SelectedCanvasItemBorder}" />
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderThickness" Value="1" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsSelectable}" Value="False" />
                                <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderBrush" Value="{StaticResource SelectedCanvasItemBorder}" />
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderThickness" Value="3" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding IsReadOnly}" Value="False" />
                                <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderThickness" Value="3" />
                        </MultiDataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="BorderSelectedRectangle" Property="BorderThickness" Value="3" />
                        </Trigger>

                        <DataTrigger Binding="{Binding IsSelectable}"
                                     Value="False">
                            <Setter Property="IsEnabled" Value="False" />
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsSelectable}"
                                     Value="True">
                            <Setter Property="IsEnabled" Value="True" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CanvasListBox" TargetType="{x:Type ListBox}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Canvas x:Name="TrayCanvas"  DataContext="{Binding ElementName=CanvasListBoxControl}"                                                    
                            VerticalAlignment="Top"
                            HorizontalAlignment="Left"                            
                            RenderOptions.EdgeMode="Aliased"
                            SnapsToDevicePixels="False"
                            UseLayoutRounding="False"                          
                            Height="{Binding TrayHeight, UpdateSourceTrigger=PropertyChanged }"
                            Width="{Binding TrayWidth, UpdateSourceTrigger=PropertyChanged }">
                        <Canvas.Style>
                            <Style TargetType="Canvas">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=TrayCanvas, Path=DataContext.ShowBackground}" Value="False">
                                        <Setter Property="Background" Value="{StaticResource TrayBackground}" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Canvas.Style>
                    </Canvas>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <ItemsPresenter  />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
