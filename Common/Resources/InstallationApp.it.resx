<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="UpperBound" xml:space="preserve">
    <value>Limite Superiore:</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="Sta" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Resolution" xml:space="preserve">
    <value>Risoluzione:</value>
  </data>
  <data name="ActualPosition" xml:space="preserve">
    <value>Posizione Attuale:</value>
  </data>
  <data name="Auto" xml:space="preserve">
    <value>Auto</value>
  </data>
  <data name="Backward" xml:space="preserve">
    <value>Indietro</value>
  </data>
  <data name="BeltBurnishing" xml:space="preserve">
    <value>Rodaggio Cinghia</value>
  </data>
  <data name="Down" xml:space="preserve">
    <value>Giù</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Errore</value>
  </data>
  <data name="Forward" xml:space="preserve">
    <value>Avanti</value>
  </data>
  <data name="GateSetUp" xml:space="preserve">
    <value>Set Up Barriera</value>
  </data>
  <data name="Installer" xml:space="preserve">
    <value>Installatore</value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Disconnetti</value>
  </data>
  <data name="LowSpeedMovementsTest" xml:space="preserve">
    <value>Movimenti Bassa Velocità</value>
  </data>
  <data name="LSMTGateEngineButton" xml:space="preserve">
    <value>Motore Barriera</value>
  </data>
  <data name="LSMTGateEngineTitle" xml:space="preserve">
    <value>Movimenti Motore Barriera</value>
  </data>
  <data name="LSMTHorizontalEngineButton" xml:space="preserve">
    <value>Motore Orizzontale</value>
  </data>
  <data name="LSMTHorizontalEngineTitle" xml:space="preserve">
    <value>Movimenti Motore Orizzontale</value>
  </data>
  <data name="LSMTVerticalEngineButton" xml:space="preserve">
    <value>Motore Verticale</value>
  </data>
  <data name="LSMTVerticalEngineTitle" xml:space="preserve">
    <value>Movimenti Motore Verticale</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manu</value>
  </data>
  <data name="NextButton" xml:space="preserve">
    <value>Prossimo &gt;</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="OffsetCalibration" xml:space="preserve">
    <value>Calibrazione Offset</value>
  </data>
  <data name="On" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="Up" xml:space="preserve">
    <value>Su</value>
  </data>
  <data name="VerifyCircuitIntegrity" xml:space="preserve">
    <value>Verifica Integrità Circuito</value>
  </data>
  <data name="VerifyPanelPosition" xml:space="preserve">
    <value>Verifica Posizione Pannello</value>
  </data>
  <data name="VerifyWeightController" xml:space="preserve">
    <value>Verifica Controllo Peso</value>
  </data>
  <data name="VerticalAxisCalibration" xml:space="preserve">
    <value>Calibrazione Asse Verticale</value>
  </data>
  <data name="AxisCalibratedSuccessfully" xml:space="preserve">
    <value>Calibrazione asse completata</value>
  </data>
  <data name="AxisNotCalibratedYet" xml:space="preserve">
    <value>Calibrazione asse non effettuata</value>
  </data>
  <data name="LowerBound" xml:space="preserve">
    <value>Limite Inferiore:</value>
  </data>
  <data name="Offset" xml:space="preserve">
    <value>Offset:</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Risultato:</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Inizia</value>
  </data>
  <data name="ResolutionCalibration" xml:space="preserve">
    <value>Calibrazione Risoluzione</value>
  </data>
  <data name="SensorsState" xml:space="preserve">
    <value>Stato Sensori</value>
  </data>
  <data name="Bays" xml:space="preserve">
    <value>Baie</value>
  </data>
  <data name="Cradle" xml:space="preserve">
    <value>Culla</value>
  </data>
  <data name="Gate" xml:space="preserve">
    <value>Barriera</value>
  </data>
  <data name="VariousInputs" xml:space="preserve">
    <value>Input Vari</value>
  </data>
  <data name="VerticalAxis" xml:space="preserve">
    <value>Asse Verticale</value>
  </data>
  <data name="AntiIntrusionGate" xml:space="preserve">
    <value>Barriera Anti-Intrusione</value>
  </data>
  <data name="CradleEngineSelected" xml:space="preserve">
    <value>Motore Culla Selezionato</value>
  </data>
  <data name="ElevatorEngineSelected" xml:space="preserve">
    <value>Motore Elevatore Selezionato</value>
  </data>
  <data name="EmergencyEndRun" xml:space="preserve">
    <value>Fine Corsa d'Emergenza</value>
  </data>
  <data name="GateSensorA" xml:space="preserve">
    <value>Sensore Barriera A</value>
  </data>
  <data name="GateSensorB" xml:space="preserve">
    <value>Sensore Barriera B</value>
  </data>
  <data name="LuPresenceOnMachineCradleSide" xml:space="preserve">
    <value>Presenza UDC in Culla Lato Macchina</value>
  </data>
  <data name="LuPresenceOnOperatorCradleSide" xml:space="preserve">
    <value>Presenza UDC in Culla Lato Operatore</value>
  </data>
  <data name="LuPresentInBay" xml:space="preserve">
    <value>Presenza UDC in Baia</value>
  </data>
  <data name="MicroCarterLeftSide" xml:space="preserve">
    <value>Micro Carter Lato Sinistro</value>
  </data>
  <data name="MicroCarterRightSide" xml:space="preserve">
    <value>Micro Carter Lato Destro</value>
  </data>
  <data name="MushroomHeadButton" xml:space="preserve">
    <value>Bottone a Fungo</value>
  </data>
  <data name="PawlEncoder" xml:space="preserve">
    <value>Encoder Nottolino</value>
  </data>
  <data name="ResetSecurityFunction" xml:space="preserve">
    <value>Reset Funzioni di Sicurezza</value>
  </data>
  <data name="SecurityFunctionActive" xml:space="preserve">
    <value>Funzione di Sicurezza Attiva</value>
  </data>
  <data name="ShapeControl" xml:space="preserve">
    <value>Controllo Sagoma</value>
  </data>
  <data name="VerticalAxisBrake" xml:space="preserve">
    <value>Freno Asse Verticale</value>
  </data>
  <data name="ZeroPawlSensor" xml:space="preserve">
    <value>Sensore Zero Nottolino</value>
  </data>
  <data name="ZeroVerticalSensor" xml:space="preserve">
    <value>Sensore Zero Verticale</value>
  </data>
  <data name="GateControl" xml:space="preserve">
    <value>Controllo Barriere</value>
    <comment>Title - Button text</comment>
  </data>
</root>