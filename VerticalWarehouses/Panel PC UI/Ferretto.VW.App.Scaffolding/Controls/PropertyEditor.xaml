<UserControl x:Class="Ferretto.VW.App.Scaffolding.Controls.PropertyEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:behaviors="clr-namespace:Ferretto.VW.App.Controls.Behaviors;assembly=Ferretto.VW.App.Controls"
             xmlns:behaviorsLocal="clr-namespace:Ferretto.VW.App.Scaffolding.Behaviors"
             xmlns:cctrls="clr-namespace:Ferretto.VW.App.Controls.Controls;assembly=Ferretto.VW.App.Controls"
             xmlns:controls="clr-namespace:Ferretto.VW.App.Scaffolding.Controls"
             xmlns:converters="clr-namespace:Ferretto.VW.App.Scaffolding.Converters"
             xmlns:ctrlConverters="clr-namespace:Ferretto.VW.App.Controls.Converters;assembly=Ferretto.VW.App.Controls"
             xmlns:ctrls="clr-namespace:Ferretto.VW.App.Controls;assembly=Ferretto.VW.App.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:design="clr-namespace:Ferretto.VW.App.Scaffolding.Design"
             xmlns:g11n="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:resx="clr-namespace:Ferretto.VW.App.Scaffolding.Resources"
             xmlns:selectors="clr-namespace:Ferretto.VW.App.Scaffolding.Selectors"
             xmlns:validation="clr-namespace:Ferretto.VW.App.Scaffolding.ValidationRules"
             Name="editor"
             d:DesignHeight="450"
             d:DesignWidth="800"
             mc:Ignorable="d">
    <UserControl.Resources>

        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Ferretto.VW.App.Scaffolding;Component/Styles/ComboBox.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <converters:DisplayNameConverter x:Key="DisplayNameConverter" />
            <converters:ScaffoldTypeConverter x:Key="ScaffoldTypeConverter" />
            <converters:IsReadOnlyConverter x:Key="IsReadOnlyConverter" />
            <converters:IsEditableConverter x:Key="IsEditableConverter" />
            <converters:ValidationRuleConverter x:Key="ValidationRuleConverter" />
            <converters:DefaultValueConverter x:Key="DefaultValueConverter" />
            <converters:TwoWayConverter x:Key="TwoWayConverter" />

            <converters:KeyboardTypeConverter x:Key="KeyboardTypeConverter" />
            <converters:TypeToKeyboardLayoutCodeConverter x:Key="TypeToKeyboardLayoutCodeConverter" />

            <converters:EnumDatasourceConverter x:Key="EnumDatasourceConverter" />
            <converters:EnumValueToStringConverter x:Key="EnumValueToStringConverter" />

            <selectors:PropertyInfoDataTemplateSelector x:Key="PropertyInfoDataTemplateSelector" />

            <!--  styles  -->
            <Style x:Key="TextBoxStyle"
                   BasedOn="{StaticResource VWAPP_PpcTextBox_TextBoxStyle}"
                   TargetType="{x:Type TextBox}">
                <Setter Property="Validation.ErrorTemplate">
                    <Setter.Value>
                        <ControlTemplate>
                            <DockPanel LastChildFill="False">

                                <TextBlock Margin="5"
                                           DockPanel.Dock="Right"
                                           FontSize="{DynamicResource FontSize_Normal}"
                                           Foreground="{DynamicResource FerrettoRed}"
                                           Text="{Binding ElementName=MyAdorner, Path=AdornedElement.(Validation.Errors)/ErrorContent}"
                                           Visibility="Collapsed" />

                                <Border Padding="5"
                                        Background="{DynamicResource FerrettoRed}"
                                        CornerRadius="0,2,2,0"
                                        DockPanel.Dock="Right">

                                    <iconPacks:PackIconModern Foreground="{DynamicResource FerrettoPureWhite}"
                                                              Kind="WarningCircle" />
                                </Border>

                                <Border BorderBrush="{DynamicResource FerrettoRed}"
                                        BorderThickness="{DynamicResource PpcBorderThickness}">
                                    <AdornedElementPlaceholder Name="MyAdorner" />
                                </Border>
                            </DockPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="Validation.HasError" Value="true">
                        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)/ErrorContent}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--  content templates:  -->
            <!--  IP address  -->
            <DataTemplate x:Key="IPAddressDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>
                <controls:IPAddressBox x:Name="field"
                                       IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}">
                    <controls:IPAddressBox.Resources>
                        <validation:BindingProxy x:Key="valueBridge"
                                                 Data="{Binding Path=Text, ElementName=field}" />
                        <validation:BindingProxy x:Key="entityBridge"
                                                 Data="{Binding Path=DataContext, ElementName=field}" />
                    </controls:IPAddressBox.Resources>
                    <controls:IPAddressBox.IPAddress>
                        <Binding Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=controls:PropertyEditor}"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:CompositeValidationRule Validated="CompositeValidationRule_Validated"
                                                                    ValidatesOnTargetUpdated="True">
                                    <validation:CompositeValidationRule.CompositeValidator>
                                        <validation:CompositeValidator Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}"
                                                                       Value="{Binding Data, Source={StaticResource valueBridge}}" />
                                    </validation:CompositeValidationRule.CompositeValidator>
                                </validation:CompositeValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </controls:IPAddressBox.IPAddress>
                </controls:IPAddressBox>
            </DataTemplate>

            <!--  Enum  -->
            <DataTemplate x:Key="EnumDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>
                <ComboBox x:Name="field"
                          ItemsSource="{Binding Converter={StaticResource EnumDatasourceConverter}}"
                          Style="{StaticResource ScaffoldingComboBoxStyle}">
                    <ComboBox.Resources>
                        <validation:BindingProxy x:Key="valueBridge"
                                                 Data="{Binding Path=Text, ElementName=field}" />
                        <validation:BindingProxy x:Key="entityBridge"
                                                 Data="{Binding Path=DataContext, ElementName=field}" />
                    </ComboBox.Resources>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Converter={StaticResource EnumValueToStringConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <ComboBox.SelectedValue>
                        <Binding Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=controls:PropertyEditor}"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:CompositeValidationRule Validated="CompositeValidationRule_Validated"
                                                                    ValidatesOnTargetUpdated="True">
                                    <validation:CompositeValidationRule.CompositeValidator>
                                        <validation:CompositeValidator Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}"
                                                                       Value="{Binding Data, Source={StaticResource valueBridge}}" />
                                    </validation:CompositeValidationRule.CompositeValidator>
                                </validation:CompositeValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedValue>
                </ComboBox>
            </DataTemplate>

            <!--  boolean  -->
            <DataTemplate x:Key="BooleanDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>

                <cctrls:PpcCheckBox x:Name="field"
                                    DataContext="{Binding}"
                                    IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}">
                    <cctrls:PpcCheckBox.IsChecked>
                        <Binding Converter="{StaticResource TwoWayConverter}"
                                 ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                                 Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=UserControl}"
                                 UpdateSourceTrigger="PropertyChanged" />
                    </cctrls:PpcCheckBox.IsChecked>
                </cctrls:PpcCheckBox>
            </DataTemplate>

            <!--  number  -->
            <DataTemplate x:Key="NumericIntDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>

                <ctrls:PpcSpinEdit x:Name="field"
                                   DataContext="{Binding}"
                                   IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}"
                                   Mask="#######0">
                    <ctrls:PpcSpinEdit.Resources>
                        <validation:BindingProxy x:Key="valueBridge"
                                                 Data="{Binding Path=EditValue, ElementName=field}" />
                        <validation:BindingProxy x:Key="entityBridge"
                                                 Data="{Binding Path=DataContext, ElementName=field}" />
                    </ctrls:PpcSpinEdit.Resources>
                    <ctrls:PpcSpinEdit.EditValue>
                        <Binding Converter="{StaticResource TwoWayConverter}"
                                 ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                                 Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=UserControl}"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:CompositeValidationRule Validated="CompositeValidationRule_Validated"
                                                                    ValidatesOnTargetUpdated="True">
                                    <validation:CompositeValidationRule.CompositeValidator>
                                        <validation:CompositeValidator Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}"
                                                                       Value="{Binding Data, Source={StaticResource valueBridge}}" />
                                    </validation:CompositeValidationRule.CompositeValidator>
                                </validation:CompositeValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </ctrls:PpcSpinEdit.EditValue>
                </ctrls:PpcSpinEdit>
            </DataTemplate>

            <DataTemplate x:Key="NumericDoubleDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>

                <ctrls:PpcSpinEdit x:Name="field"
                                   DataContext="{Binding}"
                                   Increment="0.5"
                                   IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}"
                                   Mask="######0.0####">
                    <ctrls:PpcSpinEdit.Resources>
                        <validation:BindingProxy x:Key="valueBridge"
                                                 Data="{Binding Path=EditValue, ElementName=field}" />
                        <validation:BindingProxy x:Key="entityBridge"
                                                 Data="{Binding Path=DataContext, ElementName=field}" />
                    </ctrls:PpcSpinEdit.Resources>
                    <ctrls:PpcSpinEdit.EditValue>
                        <Binding Converter="{StaticResource TwoWayConverter}"
                                 ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                                 Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=UserControl}"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:CompositeValidationRule Validated="CompositeValidationRule_Validated"
                                                                    ValidatesOnTargetUpdated="True">
                                    <validation:CompositeValidationRule.CompositeValidator>
                                        <validation:CompositeValidator Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}"
                                                                       Value="{Binding Data, Source={StaticResource valueBridge}}" />
                                    </validation:CompositeValidationRule.CompositeValidator>
                                </validation:CompositeValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </ctrls:PpcSpinEdit.EditValue>
                </ctrls:PpcSpinEdit>
            </DataTemplate>

            <!--  string  -->
            <DataTemplate x:Key="StringDataTemplate">
                <DataTemplate.Resources>
                    <converters:TwoWayConverter x:Key="TwoWayConverter" />
                </DataTemplate.Resources>

                <TextBox x:Name="field"
                         DataContext="{Binding}"
                         IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}"
                         Style="{StaticResource TextBoxStyle}">
                    <TextBox.Resources>
                        <validation:BindingProxy x:Key="valueBridge"
                                                 Data="{Binding Path=Text, ElementName=field}" />
                        <validation:BindingProxy x:Key="entityBridge"
                                                 Data="{Binding Path=DataContext, ElementName=field}" />
                    </TextBox.Resources>
                    <TextBox.Text>
                        <Binding Converter="{StaticResource TwoWayConverter}"
                                 ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                                 Mode="TwoWay"
                                 Path="Value"
                                 RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                 AncestorType=UserControl}"
                                 UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:CompositeValidationRule Validated="CompositeValidationRule_Validated"
                                                                    ValidatesOnTargetUpdated="True">
                                    <validation:CompositeValidationRule.CompositeValidator>
                                        <validation:CompositeValidator Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}"
                                                                       Value="{Binding Data, Source={StaticResource valueBridge}}" />
                                    </validation:CompositeValidationRule.CompositeValidator>
                                </validation:CompositeValidationRule>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                    <!--  keyboard interactivity  -->
                    <interactivity:Interaction.Behaviors>
                        <behaviors:KeyboardPopupBehavior InactiveTimeout="00:01:00"
                                                         KeyboardLabel="{Binding Converter={StaticResource DisplayNameConverter}}"
                                                         KeyboardLayoutCode="{Binding Converter={StaticResource TypeToKeyboardLayoutCodeConverter}}" />
                        <!--<behaviorsLocal:TextBoxKeyboardBehavior Keyboard="{Binding Converter={StaticResource KeyboardTypeConverter}}"
                            KeyboardCaption="{Binding Converter={StaticResource DisplayNameConverter}}" />-->
                    </interactivity:Interaction.Behaviors>
                </TextBox>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>

    <!--  layout  -->
    <Grid d:DataContext="{d:DesignInstance Type=design:StringEntityViewModel,
                                           IsDesignTimeCreatable=True}"
          Background="{DynamicResource VWAPP_BACKGROUND}"
          DataContext="{Binding Entity, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
        <Border Width="600"
                Padding="15"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Background="{DynamicResource VWAPP_BACKGROUND}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!--  header  -->
                <TextBlock FontSize="{DynamicResource FontSize_Normal}"
                           Foreground="{DynamicResource Text_Foreground}"
                           Text="{Binding Converter={StaticResource DisplayNameConverter}}" />

                <!--  footer  -->
                <StackPanel Grid.Row="3"
                            Margin="0,15,0,0"
                            Orientation="Horizontal">

                    <cctrls:PpcButton Margin="0,0,15,0"
                                      Click="Confirm_Click"
                                      Content="{x:Static resx:UI.Save}">
                        <cctrls:PpcButton.IsEnabled>
                            <MultiBinding Converter="{StaticResource MBTUI}">
                                <Binding Path="IsValid"
                                         RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                         AncestorType=UserControl}" />
                                <Binding Path="IsDirty"
                                         RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                         AncestorType=UserControl}" />
                            </MultiBinding>
                        </cctrls:PpcButton.IsEnabled>
                    </cctrls:PpcButton>
                    <cctrls:PpcButton Click="Cancel_Click"
                                      Content="{x:Static resx:UI.Cancel}" />
                </StackPanel>

                <!--  validators  -->
                <Border Grid.Row="2"
                        Padding="10,5"
                        Background="{DynamicResource FerrettoRed}">
                    <Border.Visibility>
                        <MultiBinding Converter="{StaticResource MBTUI}">
                            <Binding Converter="{StaticResource TTUI}"
                                     ConverterParameter="Invert"
                                     Path="IsValid"
                                     RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                     AncestorType=controls:PropertyEditor}" />
                            <!--<Binding Path="IsDirty" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=controls:PropertyEditor}" />-->
                        </MultiBinding>
                    </Border.Visibility>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <iconPacks:PackIconModern Width="32"
                                                  Height="32"
                                                  Margin="0,0,15,0"
                                                  HorizontalAlignment="Center"
                                                  VerticalAlignment="Center"
                                                  Foreground="{DynamicResource FerrettoPureWhite}"
                                                  Kind="WarningCircle" />
                        <TextBlock Grid.Column="1"
                                   VerticalAlignment="Center"
                                   d:DataContext="{d:DesignInstance Type=design:ValidationMessageViewModel,
                                                                    IsDesignTimeCreatable=True}"
                                   DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:PropertyEditor}}"
                                   FontSize="{DynamicResource FontSize_Small}"
                                   Foreground="#fff"
                                   Text="{Binding ValidationMessage}"
                                   TextTrimming="CharacterEllipsis"
                                   TextWrapping="NoWrap" />
                    </Grid>
                </Border>

                <!--  body  -->
                <ContentControl Grid.Row="1"
                                Margin="0,10"
                                HorizontalContentAlignment="Stretch"
                                Content="{Binding}"
                                ContentTemplateSelector="{StaticResource PropertyInfoDataTemplateSelector}" />
            </Grid>
        </Border>
    </Grid>
</UserControl>
