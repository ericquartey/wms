<UserControl x:Class="Ferretto.VW.App.Scaffolding.Controls.PropertyEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:Ferretto.VW.App.Scaffolding.Controls"
             xmlns:ctrls="clr-namespace:Ferretto.VW.App.Controls.Controls;assembly=Ferretto.VW.App.Controls"
             xmlns:converters="clr-namespace:Ferretto.VW.App.Scaffolding.Converters"
             xmlns:filters="clr-namespace:Ferretto.VW.App.Scaffolding.Behaviors"
             xmlns:interactivity="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:g11n="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:selectors="clr-namespace:Ferretto.VW.App.Scaffolding.Selectors"
             xmlns:validation="clr-namespace:Ferretto.VW.App.Scaffolding.ValidationRules"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:resx="clr-namespace:Ferretto.VW.App.Scaffolding.Resources"
             mc:Ignorable="d"
             xmlns:design="clr-namespace:Ferretto.VW.App.Scaffolding.Design"
             Name="editor"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:DisplayNameConverter x:Key="DisplayNameConverter" />
        <converters:MultiBooleanConverter x:Key="MultiBooleanConverter" />
        <converters:ScaffoldTypeConverter x:Key="ScaffoldTypeConverter" />
        <converters:IsReadOnlyConverter x:Key="IsReadOnlyConverter" />
        <converters:IsEditableConverter x:Key="IsEditableConverter" />
        <converters:TruthyToVisibilityConverter x:Key="TruthyToVisibilityConverter" />
        <converters:ValidationRuleConverter x:Key="ValidationRuleConverter" />
        <converters:DefaultValueConverter x:Key="DefaultValueConverter" />
        <converters:TwoWayConverter x:Key="TwoWayConverter" />

        <selectors:PropertyInfoDataTemplateSelector x:Key="PropertyInfoDataTemplateSelector" />

        <!-- styles -->
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate>
                        <DockPanel LastChildFill="True">

                            <TextBlock DockPanel.Dock="Right"
                                Foreground="Red"
                                Margin="5" 
                                FontSize="12pt"
                                Text="{Binding ElementName=MyAdorner, 
                           Path=AdornedElement.(Validation.Errors)/ErrorContent}">
                            </TextBlock>

                            <Border BorderBrush="Red" BorderThickness="1">
                                <AdornedElementPlaceholder Name="MyAdorner" />
                            </Border>

                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="true">
                    <Setter Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, 
                        Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- content templates: -->
        <!-- IP address -->
        <DataTemplate x:Key="IPAddressDataTemplate">
            <DataTemplate.Resources>
                <converters:TwoWayConverter x:Key="TwoWayConverter" />
            </DataTemplate.Resources>
            <controls:IPAddressBox IsEnabled="{Binding Path=., Converter={StaticResource IsEditableConverter}}"
                                   IPAddress="{Binding Path=Value, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}, Mode=TwoWay}" />
        </DataTemplate>

        <!-- string (default*) -->
        <DataTemplate x:Key="StringDataTemplate">
            <DataTemplate.Resources>
                <converters:TwoWayConverter x:Key="TwoWayConverter" />
            </DataTemplate.Resources>


            <ctrls:PpcTextBox DataContext="{Binding}" HorizontalAlignment="Stretch"
                              IsEnabled="{Binding Path=.,Converter={StaticResource IsEditableConverter}}" x:Name="field">
                <!--<ctrls:PpcTextBoxNew.Resources>
                    <validation:CompositeValidator x:Key="CompositeValidator"
                                       Value="{Binding Path=InputText, ElementName=field}"
                                       Rules="{Binding Path=DataContext, ElementName=field, Converter={StaticResource ValidationRuleConverter}}" />
                </ctrls:PpcTextBoxNew.Resources>-->
                <ctrls:PpcTextBox.InputText>
                    <Binding Path="Value" UpdateSourceTrigger="PropertyChanged"
                             Converter="{StaticResource TwoWayConverter}" ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                             RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=UserControl}" Mode="TwoWay">
                        <!--<Binding.ValidationRules>
                            <validation:CompositeValidationRule ValidatesOnTargetUpdated="True" Validated="CompositeValidationRule_Validated"
                                                                CompositeValidator="{StaticResource CompositeValidator}">
                            </validation:CompositeValidationRule>
                        </Binding.ValidationRules>-->
                    </Binding>
                </ctrls:PpcTextBox.InputText>
            </ctrls:PpcTextBox>
        </DataTemplate>

        <!-- string (default) -->
        <DataTemplate x:Key="OldStringDataTemplate">
            <DataTemplate.Resources>
                <converters:TwoWayConverter x:Key="TwoWayConverter" />
            </DataTemplate.Resources>

            <TextBox DataContext="{Binding}" IsEnabled="{Binding Path=.,Converter={StaticResource IsEditableConverter}}" x:Name="field">
                <TextBox.Resources>
                    <validation:BindingProxy x:Key="valueBridge" Data="{Binding Path=Text, ElementName=field}" />
                    <validation:BindingProxy x:Key="entityBridge" Data="{Binding Path=DataContext, ElementName=field}" />
                </TextBox.Resources>
                <TextBox.Text>
                    <Binding Path="Value" UpdateSourceTrigger="PropertyChanged"
                             Converter="{StaticResource TwoWayConverter}" ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}"
                             RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType=UserControl}" Mode="TwoWay">
                        <Binding.ValidationRules>
                            <validation:CompositeValidationRule ValidatesOnTargetUpdated="True" Validated="CompositeValidationRule_Validated">
                                <validation:CompositeValidationRule.CompositeValidator>
                                    <validation:CompositeValidator Value="{Binding Data, Source={StaticResource valueBridge}}"
                                                                   Rules="{Binding Data, Source={StaticResource entityBridge}, Converter={StaticResource ValidationRuleConverter}}" />
                                </validation:CompositeValidationRule.CompositeValidator>
                            </validation:CompositeValidationRule>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </DataTemplate>

    </UserControl.Resources>


    <!-- layout -->
    <Grid Background="#99000000"
          d:DataContext="{d:DesignInstance Type=design:StringEntityViewModel, IsDesignTimeCreatable=True}"
          DataContext="{Binding Entity, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}">
        <Border MinWidth="500" Padding="10" Background="{x:Null}" VerticalAlignment="Center" HorizontalAlignment="Center">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- header -->
                <TextBlock Style="{StaticResource VWAPP_GeneralTextBlockStyle}"
                    Text="{Binding Converter={StaticResource DisplayNameConverter}}"></TextBlock>

                <!-- footer -->
                <StackPanel Orientation="Horizontal" Grid.Row="3" Margin="0,10,0,0">

                    <ctrls:PpcButton Content="{x:Static resx:UI.Save}" Click="Confirm_Click">
                        <ctrls:PpcButton.IsEnabled>
                            <MultiBinding Converter="{StaticResource MultiBooleanConverter}">
                                <Binding Path="IsValid" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                                <Binding Path="IsDirty" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=UserControl}" />
                            </MultiBinding>
                        </ctrls:PpcButton.IsEnabled>
                    </ctrls:PpcButton>
                    <ctrls:PpcButton Content="{x:Static resx:UI.Cancel}" Click="Cancel_Click"/>
                </StackPanel>

                <!-- validators -->
                <Border Visibility="{Binding IsValid, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:PropertyEditor}, Converter={StaticResource TruthyToVisibilityConverter}, ConverterParameter=Invert}"
                        Background="Red" Padding="10,2"
                        Grid.Row="2">
                    <StackPanel Orientation="Horizontal">
                        <iconPacks:PackIconModern Width="32"
                                          Height="32"
                                          Margin="0,0,15,0"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          Foreground="#fff"
                                          Kind="WarningCircle" />
                        <TextBlock
                            VerticalAlignment="Center"
                            DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:PropertyEditor}}"
                        d:DataContext="{d:DesignInstance Type=design:ValidationMessageViewModel, IsDesignTimeCreatable=True}"
                        Style="{StaticResource VWAPP_GeneralTextBlockStyle}"
                        Text="{Binding ValidationMessage}"
                                          Foreground="#fff" />
                    </StackPanel>
                </Border>

                <!-- body -->
                <ContentControl Grid.Row="1" Content="{Binding}"
                                HorizontalContentAlignment="Stretch"
                                ContentTemplateSelector="{StaticResource PropertyInfoDataTemplateSelector}" Margin="0,10">
                </ContentControl>

            </Grid>
        </Border>
    </Grid>
</UserControl>
