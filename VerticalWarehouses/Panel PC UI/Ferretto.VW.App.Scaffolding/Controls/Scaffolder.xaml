<UserControl x:Class="Ferretto.VW.App.Scaffolding.Controls.Scaffolder"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:Ferretto.VW.App.Scaffolding.Controls"
             xmlns:ctrls="clr-namespace:Ferretto.VW.App.Controls.Controls;assembly=Ferretto.VW.App.Controls"
             xmlns:converters="clr-namespace:Ferretto.VW.App.Scaffolding.Converters"
             xmlns:selectors="clr-namespace:Ferretto.VW.App.Scaffolding.Selectors"
             xmlns:validation="clr-namespace:Ferretto.VW.App.Scaffolding.ValidationRules"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:behaviors="clr-namespace:Ferretto.VW.App.Scaffolding.Behaviors"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:g11n="clr-namespace:System.Globalization;assembly=mscorlib"
             xmlns:resx="clr-namespace:Ferretto.VW.App.Scaffolding.Resources"
             mc:Ignorable="d" 
             xmlns:design="clr-namespace:Ferretto.VW.App.Scaffolding.Design"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <converters:DisplayNameConverter x:Key="DisplayNameConverter" />
        <converters:ScaffoldTypeConverter x:Key="ScaffoldTypeConverter" />
        <converters:IsReadOnlyConverter x:Key="IsReadOnlyConverter" />
        <converters:IsEditableConverter x:Key="IsEnabledConverter" />
        <converters:TruthyToVisibilityConverter x:Key="TruthyToVisibilityConverter" />
        <converters:ValidationRuleConverter x:Key="ValidationRuleConverter" />
        <converters:DefaultValueConverter x:Key="DefaultValueConverter" />

        <Style TargetType="Border" x:Key="CellBorderStyle">
            <Setter Property="BorderThickness" Value="1,0,0,0" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>

        <Style TargetType="Border" x:Key="FirstCellBorderStyle" BasedOn="{StaticResource CellBorderStyle}">
            <Setter Property="BorderThickness" Value="0" />
        </Style>

        <Style TargetType="TextBlock" x:Key="CellTextBlockStyle">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}}" />
        </Style>

        <Style TargetType="{x:Type GridViewColumnHeader}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{DynamicResource FerrettoPureWhite}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
            <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Padding" Value="10,5" />
            <Setter Property="Height" Value="32" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent">
                            <TextBlock x:Name="ContentHeader"
                                       VerticalAlignment="Center"
                                       Foreground="{TemplateBinding Foreground}"
                                       Text="{TemplateBinding Content}" Padding="{TemplateBinding Padding}" Width="{TemplateBinding Width}" TextAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="Background" Value="{x:Null}"/>
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Margin" Value="0"/>
                        <Setter Property="Height" Value="54"/>
                        <Setter Property="Foreground" Value="{DynamicResource FerrettoLightGray}" />
                        <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
                        <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
                        <Setter Property="VerticalContentAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border SnapsToDevicePixels="true"
                                            BorderBrush="{DynamicResource FerrettoMediumGray}"
                                            BorderThickness="0,0,0,1"
                                            Background="{TemplateBinding Background}"
                                            CornerRadius="0">
                                        <GridViewRowPresenter />
                                    </Border>
                                </ControlTemplate>

                            </Setter.Value>
                        </Setter>

                        <!-- this one's specific for this context! -->
                        <Setter Property="IsEnabled" Value="{Binding Converter={StaticResource IsReadOnlyConverter}}" />

                        <Style.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="True" />
                                    <!--<Condition Property="Selector.IsSelectionActive" Value="true" />-->
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource FerrettoPureWhite}" />
                                <Setter Property="Background" Value="{DynamicResource FerrettoMediumGray}" />
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsEnabled" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter Property="Foreground" Value="{DynamicResource FerrettoMediumGray}" />
                            </MultiTrigger>
                        </Style.Triggers>

                    </Style>
                </Setter.Value>
            </Setter>
            <EventSetter Event="MouseLeftButtonUp"
                         Handler="ListViewItem_Click" />
            <EventSetter Event="TouchUp"
                         Handler="ListViewItem_Click" />
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="BreadcrumbTextBlock">
            <Setter Property="Foreground" Value="{DynamicResource FerrettoMediumGray}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_High}" />
        </Style>

        <Style x:Key="SearchTextBoxStyle" TargetType="{x:Type TextBox}"
               BasedOn="{StaticResource VWAPP_PpcTextBox_TextBoxStyle}">
            <Setter Property="Foreground" Value="{DynamicResource FerrettoDarkGray}" />
            <Setter Property="Background" Value="{DynamicResource FerrettoWhiteGray}" />
        </Style>

        <Style x:Key="IconButtonBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Padding" Value="15" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
        </Style>
        <Style x:Key="IconButtonBorderInvertStyle" TargetType="{x:Type Border}"
               BasedOn="{StaticResource IconButtonBorderStyle}">
            <Setter Property="Background" Value="{DynamicResource FerrettoWhiteGray}" />
        </Style>

        <Style x:Key="IconButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="Background" Value="{x:Null}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_Very_High}" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="{DynamicResource FerrettoLightGray}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Style="{StaticResource IconButtonBorderStyle}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="IconButtonInvertStyle" TargetType="{x:Type Button}"
               BasedOn="{StaticResource IconButtonStyle}">
            <Setter Property="Foreground" Value="{DynamicResource FerrettoMediumGray}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Style="{StaticResource IconButtonBorderInvertStyle}">
                            <ContentPresenter />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </UserControl.Resources>

    <!--
===================================
                UI
===================================
    -->
    <Grid>
        <Grid.Visibility>
            <Binding Path="Model"
                     RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}"
                     Converter="{StaticResource TruthyToVisibilityConverter}"></Binding>
        </Grid.Visibility>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="{Binding Path=Structures.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}, Converter={StaticResource TruthyToVisibilityConverter}}" />
            <RowDefinition Height="{Binding Path=Entities.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}, Converter={StaticResource TruthyToVisibilityConverter}}" />
        </Grid.RowDefinitions>

        <StackPanel DataContext="{Binding Path=Breadcrumb, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" 
                    Grid.Row="0" Grid.ColumnSpan="2" Orientation="Horizontal"
                    Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}">

            <Button Margin="0,0,0,8" Click="Back_Click"
                    Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}"
                    Style="{StaticResource IconButtonStyle}">
                <Button.Content>
                    <icons:FontAwesome Kind="ReplySolid" />
                </Button.Content>
            </Button>


            <TextBlock Text="{x:Static resx:UI.Root}" VerticalAlignment="Center"
                       Margin="10,0,5,0"
                       Style="{StaticResource BreadcrumbTextBlock}"
                       Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}" />
            <!-- breadcrumb -->
            <ItemsControl ItemsSource="{Binding}"
                          Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <!--<Button Margin="0,0,0,8">
                            <Button.Content>
                                <Border Padding="5" BorderThickness="1">
                                    <TextBlock Text="{Binding Category}" />
                                </Border>
                            </Button.Content>
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" MethodName="SelectCategory" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </Button>-->
                        <TextBlock Style="{StaticResource BreadcrumbTextBlock}">
                            <Run>/</Run>
                            <Run Text="{Binding Category, Mode=OneWay}"></Run>
                        </TextBlock>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>

        <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="1"
                      Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}"
                    d:DataContext="{d:DesignInstance Type=design:VertimagStructuresViewModel, IsDesignTimeCreatable=True}"
                    DataContext="{Binding Path=Structures, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}}">

            <ItemsControl ItemsSource="{Binding}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>

                        <ctrls:PpcButton Margin="0,0,10,10"
                                             Height="100"
                                             Content="{Binding Category}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:CallMethodAction TargetObject="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" MethodName="SelectCategory" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </ctrls:PpcButton>

                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </ScrollViewer>

        <Grid Grid.Row="2"
              d:DataContext="{d:DesignInstance Type=design:VertimagEntitiesViewModel, IsDesignTimeCreatable=True}"
              DataContext="{Binding Path=Entities, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}}"
              Visibility="{Binding Path=Count, Converter={StaticResource TruthyToVisibilityConverter}}"
                    >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>
            <!-- search box -->
            <Grid Margin="0,0,0,15">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <TextBlock Text="{x:Static resx:UI.Search}" VerticalAlignment="Center"
                       Foreground="{DynamicResource FerrettoWhiteGray}"
                       FontSize="{DynamicResource FontSize_High}" Margin="0,0,10,0" />

                <TextBox d:DataContext="{d:DesignInstance Type=design:SearchTextViewModel, IsDesignTimeCreatable=True}"
                         Style="{StaticResource SearchTextBoxStyle}"
                         Grid.Column="1"
                         Text="{Binding Path=SearchText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                    >
                    <i:Interaction.Behaviors>
                        <behaviors:TextBoxAutoSelectBehavior />
                        <behaviors:TextBoxKeyboardBehavior KeyboardCaption="{x:Static resx:UI.Search}" />
                    </i:Interaction.Behaviors>
                </TextBox>

                <Button d:DataContext="{d:DesignInstance Type=design:SearchTextViewModel, IsDesignTimeCreatable=True}"
                        Visibility="{Binding Path=SearchText, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=controls:Scaffolder}, Converter={StaticResource TruthyToVisibilityConverter}}"
                        Grid.Column="2" Click="Back_Click"
                        Style="{StaticResource IconButtonInvertStyle}">
                    <icons:FontAwesome Kind="BackspaceSolid" />
                </Button>
            </Grid>
            <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalAlignment="Stretch" Grid.Row="1">

                <Border BorderThickness="1" BorderBrush="{DynamicResource FerrettoMediumGray}">
                    <!-- entities -->
                    <ListView ItemsSource="{Binding}" 
                              SelectionChanged="ListView_Selected"
                              HorizontalContentAlignment="Stretch">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Nome" Width="249">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource FirstCellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Path=Caption}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Id" Width="64">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Path=Id}"
                                                           HorizontalAlignment="Center"/>
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value" Width="146">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <DataTemplate.Resources>
                                                <converters:TwoWayConverter x:Key="TwoWayConverter" />
                                            </DataTemplate.Resources>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}">
                                                    <TextBlock.Text>
                                                        <MultiBinding Converter="{StaticResource TwoWayConverter}" ConverterCulture="{x:Static g11n:CultureInfo.CurrentCulture}">
                                                            <Binding Path="Property" />
                                                            <Binding Path="Instance" />
                                                        </MultiBinding>
                                                    </TextBlock.Text>
                                                </TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Default" Width="92">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Converter={StaticResource DefaultValueConverter}}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Min" Width="92">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Converter={StaticResource DefaultValueConverter}, ConverterParameter=Min}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Max" Width="92">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Converter={StaticResource DefaultValueConverter}, ConverterParameter=Max}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="U.m." Width="60">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource CellBorderStyle}">
                                                <TextBlock Style="{StaticResource CellTextBlockStyle}"
                                                           Text="{Binding Converter={StaticResource DefaultValueConverter}, ConverterParameter=Unit}" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <!--<GridViewColumn Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="{icons:FontAwesome Kind=EditRegular}" Click="Edit_Click" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>-->
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Border>
            </ScrollViewer>
        </Grid>


        <controls:PropertyEditor x:Name="editor" Grid.RowSpan="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 Entity="{Binding Path=EditingEntity, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}"
                                 Visibility="{Binding Path=Entity, RelativeSource={RelativeSource Mode=Self}, Converter={StaticResource TruthyToVisibilityConverter}}"
                                 Commit="Editor_Commit">
        </controls:PropertyEditor>

    </Grid>
</UserControl>
