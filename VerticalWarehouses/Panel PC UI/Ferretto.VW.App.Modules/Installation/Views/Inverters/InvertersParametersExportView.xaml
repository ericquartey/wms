<ctrls:View x:Class="Ferretto.VW.App.Modules.Installation.Views.InvertersParametersExportView"
            xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
            xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
            xmlns:controls="clr-namespace:Ferretto.VW.App.Controls.Controls;assembly=Ferretto.VW.App.Controls"
            xmlns:converters="clr-namespace:Ferretto.VW.App.Modules.Installation.Converters"
            xmlns:ctrls="clr-namespace:Ferretto.VW.App.Controls;assembly=Ferretto.VW.App.Controls"
            xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
            xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
            xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
            xmlns:prism="http://prismlibrary.com/"
            xmlns:res="clr-namespace:Ferretto.VW.App.Resources;assembly=Ferretto.VW.App.Resources"
            d:DesignHeight="450"
            d:DesignWidth="1024"
            prism:ViewModelLocator.AutoWireViewModel="True"
            mc:Ignorable="d">

  <ctrls:View.Resources>
    <converters:DriveToVertimagFilenameConverter x:Key="DriveToVertimagFilenameConverter" />

    <Style x:Key="CellBorderStyle"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="1,0,0,0" />
      <Setter Property="Padding" Value="10,5" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="VerticalAlignment" Value="Stretch" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="FirstCellBorderStyle"
           BasedOn="{StaticResource CellBorderStyle}"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="CellTextBlockStyle"
           TargetType="TextBlock">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
      <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>

    <Style x:Key="GridViewColumnHeaderStyle"
           TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="Background" Value="{x:Null}" />
      <Setter Property="Foreground" Value="{DynamicResource InfoTextForeground}" />
      <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="BorderThickness" Value="0,0,0,1" />
      <Setter Property="Padding" Value="10,5" />
      <Setter Property="Margin" Value="-2,0" />
      <Setter Property="Height" Value="32" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Border Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <TextBlock x:Name="ContentHeader"
                         Width="{TemplateBinding Width}"
                         Padding="{TemplateBinding Padding}"
                         HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                         Foreground="{TemplateBinding Foreground}"
                         Text="{TemplateBinding Content}"
                         TextAlignment="Center" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ListBoxItemBorder"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="0,0,0,1" />
      <Setter Property="CornerRadius" Value="0" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style TargetType="{x:Type ListView}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="ScrollViewer.PanningMode" Value="Both" />
      <Setter Property="Background" Value="{x:Null}" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="54" />
            <Setter Property="Foreground" Value="{DynamicResource ScaffolderTextEnabled}" />
            <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                  <Border Name="border"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{DynamicResource FerrettoMediumGray}"
                          Style="{StaticResource ListBoxItemBorder}">
                    <Grid>
                      <GridViewRowPresenter />
                      <ProgressBar Margin="0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Foreground="{DynamicResource PpcButtonForeground}"
                                   IsHitTestVisible="False"
                                   IsIndeterminate="True"
                                   Opacity="0.2">
                        <ProgressBar.Visibility>
                          <MultiBinding Converter="{StaticResource MBTUI}">
                            <Binding Path="DataContext.IsBusy"
                                     RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                     AncestorType=UserControl}" />
                            <Binding Path="IsSelected"
                                     RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                     AncestorType=ListViewItem}" />
                          </MultiBinding>
                        </ProgressBar.Visibility>
                      </ProgressBar>
                    </Grid>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>

            <Style.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="True" />
                  <!--<Condition Property="Selector.IsSelectionActive" Value="true" />-->
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource ScaffolderIsSelectedForeground}" />
                <Setter Property="Background" Value="{DynamicResource ScaffolderIsSelectedBackground}" />
              </MultiTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                  <Condition Binding="{Binding Path=DataContext.IsBusy, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushDisabled}" />
                <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundDisabled}" />
              </MultiDataTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FerrettoMediumGray}" />
              </MultiTrigger>
            </Style.Triggers>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListView}">
            <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0"
                    SnapsToDevicePixels="true">
              <ScrollViewer Padding="{TemplateBinding Padding}"
                            Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsGrouping" Value="true" />
                  <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

  </ctrls:View.Resources>

  <Grid Margin="15,15,15,0">
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <TextBlock Grid.ColumnSpan="2"
               HorizontalAlignment="Left"
               VerticalAlignment="Top"
               Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
               Text="{res:Loc InstallationApp.Export}" />


    <ListView Grid.Row="1"
              Grid.Column="0"
              ItemsSource="{Binding AvailableDrives}"
              SelectedValue="{Binding SelectedDrive, Mode=TwoWay}">
      <ListView.View>
        <GridView>
          <GridViewColumn Width="990"
                          Header="File">
            <GridViewColumn.HeaderContainerStyle>
              <Style BasedOn="{StaticResource GridViewColumnHeaderStyle}"
                     TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="HorizontalContentAlignment" Value="Left" />
              </Style>
            </GridViewColumn.HeaderContainerStyle>
            <GridViewColumn.CellTemplate>
              <DataTemplate>
                <Border Style="{StaticResource FirstCellBorderStyle}">
                  <Grid>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto" />
                      <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border Width="24"
                            Height="24"
                            Margin="0,0,10,0"
                            Background="{DynamicResource FerrettoRed}"
                            CornerRadius="12">
                      <icons:PackIconFontAwesome HorizontalAlignment="Center"
                                                 VerticalAlignment="Center"
                                                 Foreground="{DynamicResource FerrettoPureWhite}"
                                                 Kind="ExclamationSolid" />
                      <Border.Visibility>
                        <MultiBinding Converter="{StaticResource MBTUI}">
                          <Binding Path="IsSelected"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=ListViewItem}" />
                          <Binding Path="DataContext.OverwriteTargetFile"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=UserControl}" />
                          <Binding Path="DataContext.HasFilenameConflict"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=UserControl}" />
                        </MultiBinding>
                      </Border.Visibility>
                    </Border>
                    <TextBlock Grid.Column="1"
                               Style="{StaticResource CellTextBlockStyle}">
                      <TextBlock.Text>
                        <MultiBinding Converter="{StaticResource DriveToVertimagFilenameConverter}">
                          <Binding Path="." />
                          <Binding Path="DataContext.Data"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=UserControl}" />
                          <Binding Path="DataContext.OverwriteTargetFile"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=UserControl}" />
                          <Binding Path="IsSelected"
                                   RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                   AncestorType=ListViewItem}" />
                        </MultiBinding>
                      </TextBlock.Text>
                    </TextBlock>
                  </Grid>
                </Border>
              </DataTemplate>
            </GridViewColumn.CellTemplate>
          </GridViewColumn>
        </GridView>
      </ListView.View>
    </ListView>

    <CheckBox Grid.Row="2"
              Margin="0,15,0,0"
              HorizontalAlignment="Left"
              Content="{res:Loc InstallationApp.OverwriteFile}"
              IsChecked="{Binding OverwriteTargetFile, Mode=TwoWay}"
              Style="{StaticResource PpcCheckBoxStyle}"
              Visibility="{Binding HasFilenameConflict, Converter={StaticResource TTUI}}" />

    <StackPanel Grid.Row="2"
                HorizontalAlignment="Right"
                Orientation="Horizontal">
      <controls:PpcButton Margin="15,15,0,0"
                          Command="{Binding ExportCommand}"
                          Content="{res:Loc InstallationApp.SaveInverterConfiguration}"
                          IsBusy="{Binding IsBusy}" />

      <controls:PpcButton Margin="15,15,0,0"
                          Command="{Binding ExportVertimagCommand}"
                          Content="{res:Loc InstallationApp.SaveRestoreConfigSaveButton}"
                          IsBusy="{Binding IsBusy}" />
    </StackPanel>

  </Grid>
</ctrls:View>
