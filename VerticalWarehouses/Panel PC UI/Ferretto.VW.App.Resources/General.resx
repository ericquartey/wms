<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
    <comment>Command - Add an element to current page</comment>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Back</value>
    <comment>Command - Navigation to previous page</comment>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
    <comment>Button</comment>
  </data>
  <data name="Next" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
    <comment>Command - Save modified data on the current page</comment>
  </data>
  <data name="SwitchOff" xml:space="preserve">
    <value>Switch Off</value>
    <comment>Button </comment>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="Debug" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="FilePath" xml:space="preserve">
    <value>File Path</value>
  </data>
  <data name="ConfirmMachineRun" xml:space="preserve">
    <value>Are you sure you want to power up the machine?</value>
  </data>
  <data name="MachineRun" xml:space="preserve">
    <value>Run</value>
  </data>
  <data name="ConfirmMachineModeSwitchAutomatic" xml:space="preserve">
    <value>Are you sure you want to automatic mode the machine and restore all pending movements?</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="ShuttingDown" xml:space="preserve">
    <value>Shutting down ...</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="ChangeTheme" xml:space="preserve">
    <value>Theme change</value>
  </data>
  <data name="BayNumber" xml:space="preserve">
    <value>Bay</value>
    <comment>Information</comment>
  </data>
  <data name="DaysAgo" xml:space="preserve">
    <value>{0:0} days ago</value>
    <comment>Information</comment>
  </data>
  <data name="ErrorCommunicatingWithServices" xml:space="preserve">
    <value>Error communicating with services.</value>
    <comment>Information</comment>
  </data>
  <data name="HoursAgo" xml:space="preserve">
    <value>{0:0} hours ago</value>
    <comment>Information</comment>
  </data>
  <data name="ManualMode" xml:space="preserve">
    <value>Manual</value>
    <comment>Information</comment>
  </data>
  <data name="MinutesAgo" xml:space="preserve">
    <value>{0:0} minutes ago</value>
    <comment>Information</comment>
  </data>
  <data name="Now" xml:space="preserve">
    <value>Just now</value>
    <comment>Information</comment>
  </data>
  <data name="SerialNumber" xml:space="preserve">
    <value>Serial Number:</value>
    <comment>Information</comment>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version {0}</value>
    <comment>Information</comment>
  </data>
  <data name="WarehouseSide_Back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="WarehouseSide_Front" xml:space="preserve">
    <value>Front</value>
  </data>
  <data name="Bay" xml:space="preserve">
    <value>Bay</value>
  </data>
  <data name="BayOneName" xml:space="preserve">
    <value>One</value>
  </data>
  <data name="BayThreeName" xml:space="preserve">
    <value>Three</value>
  </data>
  <data name="BayTwoName" xml:space="preserve">
    <value>Two</value>
  </data>
  <data name="SwitchToAutomatic" xml:space="preserve">
    <value>Switch to Automatic</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="Stop" xml:space="preserve">
    <value>Stop</value>
  </data>
  <data name="TargetNullValue" xml:space="preserve">
    <value>-</value>
  </data>
  <data name="Devices" xml:space="preserve">
    <value>Devices</value>
  </data>
  <data name="DiagnosticDetailTitle" xml:space="preserve">
    <value>DEBUG</value>
  </data>
  <data name="FiniteMachineState" xml:space="preserve">
    <value>Finite state machine</value>
  </data>
  <data name="Inverter" xml:space="preserve">
    <value>Inverter</value>
  </data>
  <data name="IODrive" xml:space="preserve">
    <value>IO Drive</value>
  </data>
  <data name="StatusDebug" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="NoRows" xml:space="preserve">
    <value>No row in the list</value>
  </data>
  <data name="WmsDisabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="WmsEnabled" xml:space="preserve">
    <value>Enabled WMS</value>
  </data>
  <data name="DateFormatComplete" xml:space="preserve">
    <value>{0:yyyy.MM.dd HH:mm}</value>
  </data>
  <data name="AreaMachineUnknow" xml:space="preserve">
    <value>The area of the machine is unknown</value>
  </data>
  <data name="ConverterCanConvertOnlyToVisibilityType" xml:space="preserve">
    <value>Converter can only convert to value of type Visibility.</value>
  </data>
  <data name="IdLoadingUnitNotExists" xml:space="preserve">
    <value>Id loading unit does not exists.</value>
  </data>
  <data name="LoadingUnitViewModelPropertyIdentifier" xml:space="preserve">
    <value>The '{0}' property of the '{1}' view model shall contain a valid loading unit identifier.</value>
  </data>
  <data name="MarkupNameOfSyntax" xml:space="preserve">
    <value>Syntax for NameOf is Type={x:Type className&gt;}.&lt;</value>
  </data>
  <data name="ParameterCannotBeNullOrEmpty" xml:space="preserve">
    <value>Parameter cannot be null or empty.</value>
  </data>
  <data name="DateFormatDayNumber" xml:space="preserve">
    <value>{0: yyyy.MM.dd}</value>
  </data>
  <data name="SwitchToManual" xml:space="preserve">
    <value>Switch to Manual</value>
  </data>
  <data name="BackShutterTest" xml:space="preserve">
    <value>Test in progress... Unable to exit the page</value>
  </data>
  <data name="SocketLinkEnabled" xml:space="preserve">
    <value>Enable Socket Link</value>
  </data>
  <data name="SocketLinkPolling" xml:space="preserve">
    <value>Polling interval</value>
    <comment>Polling interval in seconds (0 = off)</comment>
  </data>
  <data name="SocketLinkPort" xml:space="preserve">
    <value>Port</value>
  </data>
  <data name="Connectivity" xml:space="preserve">
    <value>Connectivity</value>
  </data>
  <data name="Present" xml:space="preserve">
    <value>Present</value>
  </data>
  <data name="NotPresent" xml:space="preserve">
    <value>Not present</value>
  </data>
  <data name="TokenStatus" xml:space="preserve">
    <value>Token status</value>
  </data>
  <data name="ForbiddenOperation" xml:space="preserve">
    <value>Forbidden operation</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="LotManagedProduct" xml:space="preserve">
    <value>Please select the lot of this product</value>
  </data>
  <data name="BadRequestTitle" xml:space="preserve">
    <value>WMS error: Bad Request.</value>
  </data>
  <data name="TimeoutMs" xml:space="preserve">
    <value>Timeout (ms)</value>
  </data>
  <data name="SocketLinkTimeout" xml:space="preserve">
    <value></value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="SocketLinkEndOfLine" xml:space="preserve">
    <value>End of line LF</value>
  </data>
  <data name="Confirm_Duplicate[1]" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="FindZeroElevator" xml:space="preserve">
    <value>Find zero elevator</value>
  </data>
</root>