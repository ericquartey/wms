//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ferretto.VW.App.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class HelpDescriptions {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal HelpDescriptions() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ferretto.VW.App.Resources.HelpDescriptions", typeof(HelpDescriptions).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can set the following parameters that control the operations on the current bay .
        /// </summary>
        public static string BayOperationsDescription {
            get {
                return ResourceManager.GetString("BayOperationsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WARNING: some features need a WMS customization.
        /// </summary>
        public static string BayOperationsDescriptionWarning {
            get {
                return ResourceManager.GetString("BayOperationsDescriptionWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the current position of the axis..
        /// </summary>
        public static string BeltBurnishingActualPosition {
            get {
                return ResourceManager.GetString("BeltBurnishingActualPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the number of cycles currently completed..
        /// </summary>
        public static string BeltBurnishingCompletedCycles {
            get {
                return ResourceManager.GetString("BeltBurnishingCompletedCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the value of the lower quota required by the test. Set the value only if the field is editable..
        /// </summary>
        public static string BeltBurnishingDownLimit {
            get {
                return ResourceManager.GetString("BeltBurnishingDownLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows to carry out a series of cycles of moving the vertical axis between two points indicated in the input data. The cycle, when started, continues either until the required cycles are reached or the end key is pressed..
        /// </summary>
        public static string BeltBurnishingFunctionDescription {
            get {
                return ResourceManager.GetString("BeltBurnishingFunctionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of cycles required..
        /// </summary>
        public static string BeltBurnishingRequiredCycles {
            get {
                return ResourceManager.GetString("BeltBurnishingRequiredCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the test. The test continues until the required number of cycles is reached or until the stop button is pressed..
        /// </summary>
        public static string BeltBurnishingStartCycle {
            get {
                return ResourceManager.GetString("BeltBurnishingStartCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the test. The cycle stops at the end of the current movement. Pressing the cycle start button resumes test execution until completion..
        /// </summary>
        public static string BeltBurnishingStopCycle {
            get {
                return ResourceManager.GetString("BeltBurnishingStopCycle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the value of the upper quota required by the test. Set the value only if the field is editable..
        /// </summary>
        public static string BeltBurnishingUpLimit {
            get {
                return ResourceManager.GetString("BeltBurnishingUpLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The carousel calibration function allows you to calibrate the correct value by performing a series of consecutive automatic movements, then updating the default value proposed by the system. The procedure works in successive steps until correct completion..
        /// </summary>
        public static string CarouselCalibrationFunctionDescription {
            get {
                return ResourceManager.GetString("CarouselCalibrationFunctionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The external bay calibration function allows you to calibrate the correct value by performing a series of consecutive automatic movements, then updating the default value proposed by the system. The procedure works in successive steps until correct completion..
        /// </summary>
        public static string ExternalBayCalibrationFunctionDescription {
            get {
                return ResourceManager.GetString("ExternalBayCalibrationFunctionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Corrects the current height of the bay-current position by the value indicated in the appropriate field..
        /// </summary>
        public static string HelpBCTRAdjust {
            get {
                return ResourceManager.GetString("HelpBCTRAdjust", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cumulative value of the correction that will be applied to the height of the selected bay-position..
        /// </summary>
        public static string HelpBCTRCorrectionValue {
            get {
                return ResourceManager.GetString("HelpBCTRCorrectionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to check and possibly correct the height of the various possible positions on the various bays. The procedure is suitable for the type of bay indicated in the document that describes the machine configuration. In the case of several positions on the same bay, the procedure allows multiple checks..
        /// </summary>
        public static string HelpBCTRDescription {
            get {
                return ResourceManager.GetString("HelpBCTRDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place the vertical axis at the selected bay-location..
        /// </summary>
        public static string HelpBCTRMoveToPosition {
            get {
                return ResourceManager.GetString("HelpBCTRMoveToPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If enabled, the button allows you to choose the next position in the currently selected bay. The procedure must be repeated for the new position..
        /// </summary>
        public static string HelpBCTRNextPosition {
            get {
                return ResourceManager.GetString("HelpBCTRNextPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the elevation of the selected position within the bay under control..
        /// </summary>
        public static string HelpBCTRPositionHeight {
            get {
                return ResourceManager.GetString("HelpBCTRPositionHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the bay whose odds you want to check..
        /// </summary>
        public static string HelpBCTRSelectedBay {
            get {
                return ResourceManager.GetString("HelpBCTRSelectedBay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the position inside the selected bay whose heights you want to check. It is set automatically..
        /// </summary>
        public static string HelpBCTRSelectedPosition {
            get {
                return ResourceManager.GetString("HelpBCTRSelectedPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decreases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpBCTRStepMeno {
            get {
                return ResourceManager.GetString("HelpBCTRStepMeno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpBCTRStepPiu {
            get {
                return ResourceManager.GetString("HelpBCTRStepPiu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step value applied to the current coordinate of the axis each time the movement buttons are pressed..
        /// </summary>
        public static string HelpBCTRStepValue {
            get {
                return ResourceManager.GetString("HelpBCTRStepValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step value applied to the current coordinate of the axis each time the movement buttons are pressed..
        /// </summary>
        public static string HelpCCVApplyCorrection {
            get {
                return ResourceManager.GetString("HelpCCVApplyCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current value of the axis coordinate..
        /// </summary>
        public static string HelpCCVAttualPosition {
            get {
                return ResourceManager.GetString("HelpCCVAttualPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the dimension of the currently selected cell..
        /// </summary>
        public static string HelpCCVCellPosition {
            get {
                return ResourceManager.GetString("HelpCCVCellPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total value of the correction to be applied..
        /// </summary>
        public static string HelpCCVCorrectionValue {
            get {
                return ResourceManager.GetString("HelpCCVCorrectionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to check and possibly correct the dimension of the selected cell. The correction is applied to the selected cell only..
        /// </summary>
        public static string HelpCCVDescription {
            get {
                return ResourceManager.GetString("HelpCCVDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the cell whose dimension you want to check..
        /// </summary>
        public static string HelpCCVSelectedCell {
            get {
                return ResourceManager.GetString("HelpCCVSelectedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place the vertical axis at the selected cell..
        /// </summary>
        public static string HelpCCVSetPosition {
            get {
                return ResourceManager.GetString("HelpCCVSetPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decreases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpCCVStepMeno {
            get {
                return ResourceManager.GetString("HelpCCVStepMeno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpCCVStepPiu {
            get {
                return ResourceManager.GetString("HelpCCVStepPiu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of the change in height during the adjustment phase..
        /// </summary>
        public static string HelpCCVStepValue {
            get {
                return ResourceManager.GetString("HelpCCVStepValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button allows access to the storage space compaction procedure..
        /// </summary>
        public static string HelpCellsStatisticsButtonOther {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsButtonOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of cells present on the front of the machine..
        /// </summary>
        public static string HelpCellsStatisticsCellsAnt {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsCellsAnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of cells present on the rear side of the machine..
        /// </summary>
        public static string HelpCellsStatisticsCellsPost {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsCellsPost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of cells present in the machine..
        /// </summary>
        public static string HelpCellsStatisticsCellsTot {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsCellsTot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure shows the statistical data relating to the cells present inside the machine. In addition to the global data relating to the front and rear side, the data relating to the number of cells in the various states provided for both the front and rear sides are displayed..
        /// </summary>
        public static string HelpCellsStatisticsDescription {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the percentage of cells that have the status indicated in the first column of the grid referring to the front side..
        /// </summary>
        public static string HelpCellsStatisticsGridPercTotAnt {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsGridPercTotAnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the percentage of cells that have the status indicated in the first column of the grid referring to the back side..
        /// </summary>
        public static string HelpCellsStatisticsGridPercTotPost {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsGridPercTotPost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the status of the cell to which the row data refers..
        /// </summary>
        public static string HelpCellsStatisticsGridStatus {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsGridStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the total of the cells that have the status indicated in the first column of the grid referring to the front side..
        /// </summary>
        public static string HelpCellsStatisticsGridTotAnt {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsGridTotAnt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the total of the cells that have the status indicated in the first column of the grid referring to the front side..
        /// </summary>
        public static string HelpCellsStatisticsGridTotPost {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsGridTotPost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the percentage of occupied cells referred to the total of cells present..
        /// </summary>
        public static string HelpCellsStatisticsTotalOccupiedCells {
            get {
                return ResourceManager.GetString("HelpCellsStatisticsTotalOccupiedCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm that the current operation has been completed..
        /// </summary>
        public static string HelpCommonConfirm {
            get {
                return ResourceManager.GetString("HelpCommonConfirm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button allows you to enter the page that shows further details relating to the operation in progress..
        /// </summary>
        public static string HelpCommonDetail {
            get {
                return ResourceManager.GetString("HelpCommonDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the pointer to the next item. Double-pressing moves to the end of the list..
        /// </summary>
        public static string HelpCommonDown {
            get {
                return ResourceManager.GetString("HelpCommonDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Column description of the table..
        /// </summary>
        public static string HelpCommonGridColumnHeader {
            get {
                return ResourceManager.GetString("HelpCommonGridColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the code of the item involved in the operation in progress..
        /// </summary>
        public static string HelpCommonItem {
            get {
                return ResourceManager.GetString("HelpCommonItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The description of the item that is the subject of the current operation is displayed..
        /// </summary>
        public static string HelpCommonItemDescription {
            get {
                return ResourceManager.GetString("HelpCommonItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The code of the list associated with the procedure in progress is indicated..
        /// </summary>
        public static string HelpCommonList {
            get {
                return ResourceManager.GetString("HelpCommonList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the description of the list associated with the operation in progress..
        /// </summary>
        public static string HelpCommonListDescription {
            get {
                return ResourceManager.GetString("HelpCommonListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the type of list selected according to the following code: P: Pick V: put I: Inventory..
        /// </summary>
        public static string HelpCommonListType {
            get {
                return ResourceManager.GetString("HelpCommonListType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Any notes associated with the operation to be performed are shown to the operator..
        /// </summary>
        public static string HelpCommonNote {
            get {
                return ResourceManager.GetString("HelpCommonNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field indicates the position in which the compartment object of the operation in progress is located, mapped according to the coding adopted..
        /// </summary>
        public static string HelpCommonPosition {
            get {
                return ResourceManager.GetString("HelpCommonPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move the pointer to the previous item. Double pressing moves to the beginning of the list..
        /// </summary>
        public static string HelpCommonUp {
            get {
                return ResourceManager.GetString("HelpCommonUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply the correction to the selected cell group..
        /// </summary>
        public static string HelpCSCApplyCorrection {
            get {
                return ResourceManager.GetString("HelpCSCApplyCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the desired value of the correction that will be applied to the selected cell group..
        /// </summary>
        public static string HelpCSCCorrection {
            get {
                return ResourceManager.GetString("HelpCSCCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to modify a block of cells between the first and last selected. The selected side is automatically indicated based on the starting cell number depending on whether it is odd or even..
        /// </summary>
        public static string HelpCSCDescription {
            get {
                return ResourceManager.GetString("HelpCSCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of the final cell of the block..
        /// </summary>
        public static string HelpCSCFinalCell {
            get {
                return ResourceManager.GetString("HelpCSCFinalCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the starting cell number of the block..
        /// </summary>
        public static string HelpCSCInitialCell {
            get {
                return ResourceManager.GetString("HelpCSCInitialCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the side you are editing on. The side is automatically determined based on the selected starting cell number if even or odd..
        /// </summary>
        public static string HelpCSCSelectedSide {
            get {
                return ResourceManager.GetString("HelpCSCSelectedSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page shows the detail of the selected list. Within all the displayed lines it is possible to execute only those which are highlighted because the article is contained in the machine on which you are working. The &quot;Run list&quot; button is active only if there is at least one executable line in the machine you are working on..
        /// </summary>
        public static string HelpDetailListsInWaitDescription {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicate the article code..
        /// </summary>
        public static string HelpDetailListsInWaitGridItem {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitGridItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the description of the item..
        /// </summary>
        public static string HelpDetailListsInWaitGridItemDescription {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitGridItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the required quantity of that item..
        /// </summary>
        public static string HelpDetailListsInWaitGridQuantity {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitGridQuantity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the row number of the displayed list..
        /// </summary>
        public static string HelpDetailListsInWaitGridRow {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitGridRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows the execution of the highlighted list lines. The button is enabled only if at least one row of the selected list can be executed on the machine you are working on..
        /// </summary>
        public static string HelpDetailListsInWaitListExecute {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitListExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column shows the machine or machines on which the article is currently present..
        /// </summary>
        public static string HelpDetailListsInWaitMachine {
            get {
                return ResourceManager.GetString("HelpDetailListsInWaitMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the number of the bay on which you want to perform the test..
        /// </summary>
        public static string HelpDLUTBay {
            get {
                return ResourceManager.GetString("HelpDLUTBay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the current position of the chain axis as a value relative to the starting height..
        /// </summary>
        public static string HelpDLUTChain {
            get {
                return ResourceManager.GetString("HelpDLUTChain", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the number of complete cycles currently performed..
        /// </summary>
        public static string HelpDLUTCycleCompleted {
            get {
                return ResourceManager.GetString("HelpDLUTCycleCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the number of test cycles required..
        /// </summary>
        public static string HelpDLUTCyclesRequired {
            get {
                return ResourceManager.GetString("HelpDLUTCyclesRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to carry out a series of boarding and disembarking tests of a drawer using the bay selected in the appropriate input fields. For the test it is possible to vary the acceleration, deceleration and speed feed rate according to what is indicated in the appropriate field. The test continues until the required number of cycles is reached or until the stop button is pressed..
        /// </summary>
        public static string HelpDLUTDescription {
            get {
                return ResourceManager.GetString("HelpDLUTDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the feed rate required for the test. The reduction also affects the acceleration and deceleration values..
        /// </summary>
        public static string HelpDLUTFeedRate {
            get {
                return ResourceManager.GetString("HelpDLUTFeedRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moves the vertical axis to the position inside the selected bay. The height takes into account the boarding offset..
        /// </summary>
        public static string HelpDLUTGotoPosition {
            get {
                return ResourceManager.GetString("HelpDLUTGotoPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the position inside the bay on which you want to perform the test..
        /// </summary>
        public static string HelpDLUTPosition {
            get {
                return ResourceManager.GetString("HelpDLUTPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the test procedure. The button is active only after the vertical axis is at the required position in the bay..
        /// </summary>
        public static string HelpDLUTStart {
            get {
                return ResourceManager.GetString("HelpDLUTStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the test cycle..
        /// </summary>
        public static string HelpDLUTStop {
            get {
                return ResourceManager.GetString("HelpDLUTStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page presents the main data relating to the inventory operation to be carried out on the various items allocated in the drawer in the bay. The procedure, once the compartment containing the requested item has been indicated, waits for the operator to insert the quantity of pieces currently in stock..
        /// </summary>
        public static string HelpDrawerActivityInventoryDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page provides the operator with further details on the inventory operation currently in progress..
        /// </summary>
        public static string HelpDrawerActivityInventoryDetailDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the production batch of the item in the inventory phase..
        /// </summary>
        public static string HelpDrawerActivityInventoryDetailLotto {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDetailLotto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the material status of the item being inventory..
        /// </summary>
        public static string HelpDrawerActivityInventoryDetailMaterialStatus {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDetailMaterialStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the type of packaging used for the item being inventory..
        /// </summary>
        public static string HelpDrawerActivityInventoryDetailPackaging {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDetailPackaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the production date of the item currently in inventory..
        /// </summary>
        public static string HelpDrawerActivityInventoryDetailProductionDate {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryDetailProductionDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the quantity of pieces currently in stock counted by the operator..
        /// </summary>
        public static string HelpDrawerActivityInventoryQtyStored {
            get {
                return ResourceManager.GetString("HelpDrawerActivityInventoryQtyStored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure provides all the detailed information relating to the withdrawal operation scheduled on the drawer present in the bay where the user operates. The drawing, if present, shows the division of the drawer and the highlighted area indicates the compartment on which to operate. If present, the image of the item being handled is also shown..
        /// </summary>
        public static string HelpDrawerActivityPickingDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Provides indication of the type of packaging of the item being picked..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailBoxType {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailBoxType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The window shows a series of additional information to those present in the picking window. Detailed information is displayed both for the item being picked and for any associated packing list. If present, the article image is also displayed..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the row of the list to which the withdrawal operation in progress refers..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailListRow {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailListRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If present, the production lot of the item being picked is indicated..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailLotto {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailLotto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If required, the state of the material subject to withdrawal is indicated..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailMaterialStatus {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailMaterialStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If applicable, it indicates the packing list where information relating to the various items being picked is collected..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailPackListCode {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailPackListCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If present, it indicates the description of the packing list that unites the materials being picked..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailPackListDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailPackListDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The production date of the item being picked is indicated..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailProductionDate {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailProductionDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quantity of the item to be removed from the highlighted compartment is displayed..
        /// </summary>
        public static string HelpDrawerActivityPickingDetailQtyRequest {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingDetailQtyRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The user can change the quantity actually withdrawn in the event that the stock is not sufficient. Under normal conditions the field is already filled with the required quantity..
        /// </summary>
        public static string HelpDrawerActivityPickingQtyPicked {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingQtyPicked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The quantity of the item to be removed from the highlighted compartment is displayed..
        /// </summary>
        public static string HelpDrawerActivityPickingQtyRequest {
            get {
                return ResourceManager.GetString("HelpDrawerActivityPickingQtyRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure makes it possible to refill the compartment that contains the item with the same characteristics as the one in payment. The procedure allows to update the maximum capacity of the compartment if the recorded value is wrong..
        /// </summary>
        public static string HelpDrawerActivityRefillingDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page shows the details of the deposit operation currently in progress. More details about the operations to be performed are provided on the basic page..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailDescription {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the row of the list involved in the operation in progress..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailListRow {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailListRow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the row of the list involved in the operation in progress..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailLotto {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailLotto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the material status of the item being paid..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailMaterialStatus {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailMaterialStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the type of packaging of the item being paid..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailPackaging {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailPackaging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports from the item&apos;s production date..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailProductionDate {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailProductionDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount to be poured into the indicated compartment..
        /// </summary>
        public static string HelpDrawerActivityRefillingDetailQtyToRefill {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingDetailQtyToRefill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to set the amount actually poured into the selected compartment..
        /// </summary>
        public static string HelpDrawerActivityRefillingQtyRefilled {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingQtyRefilled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Amount to pour into the selected compartment..
        /// </summary>
        public static string HelpDrawerActivityRefillingQtyToRefill {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingQtyToRefill", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the page for managing the update of the maximum capacity of the compartment..
        /// </summary>
        public static string HelpDrawerActivityRefillingUpdateMaxQty {
            get {
                return ResourceManager.GetString("HelpDrawerActivityRefillingUpdateMaxQty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activates the compaction procedure for the front side of the machine. The button is active if it is possible to recover the required space..
        /// </summary>
        public static string HelpDrawerCompactingCompactFront {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingCompactFront", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activates the compaction procedure for the rear side of the machine. The button is active if it is possible to recover the required space..
        /// </summary>
        public static string HelpDrawerCompactingCompactRear {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingCompactRear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activates the compaction procedure for the rear side of the machine. The button is active if it is possible to recover the required space..
        /// </summary>
        public static string HelpDrawerCompactingDescription {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the current phase of the handling cycle of the various drawers..
        /// </summary>
        public static string HelpDrawerCompactingDetailCurrentStep {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailCurrentStep", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page shows the progress of the compaction procedure. The drawer being moved and from which cell it is withdrawn and to which cell it is destined is indicated. The progress of the procedure is also shown with an indication of the fragments and the space to be recovered in addition to the space already recovered..
        /// </summary>
        public static string HelpDrawerCompactingDetailDescription {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the cell number where the drawer will be moved during handling..
        /// </summary>
        public static string HelpDrawerCompactingDetailDestinationCell {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailDestinationCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the code of the drawer currently being moved..
        /// </summary>
        public static string HelpDrawerCompactingDetailDrawer {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of fragments still to be packed..
        /// </summary>
        public static string HelpDrawerCompactingDetailFragmentRemaining {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailFragmentRemaining", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current position of the horizontal axis..
        /// </summary>
        public static string HelpDrawerCompactingDetailOrizzontalPosition {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailOrizzontalPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the total space currently reclaimed..
        /// </summary>
        public static string HelpDrawerCompactingDetailRecoveredSpace {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailRecoveredSpace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the source cell where the drawer being handled was stored..
        /// </summary>
        public static string HelpDrawerCompactingDetailSourceCell {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailSourceCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the space required to be recovered after which the procedure ends..
        /// </summary>
        public static string HelpDrawerCompactingDetailSpaceToRecover {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailSpaceToRecover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the current position of the vertical axis..
        /// </summary>
        public static string HelpDrawerCompactingDetailVerticalPosition {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingDetailVerticalPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of lost fragments present on the current side..
        /// </summary>
        public static string HelpDrawerCompactingFragment {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingFragment", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the side of the machine to which the data provided refers..
        /// </summary>
        public static string HelpDrawerCompactingSide {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the maximum space that can be recovered on the current side..
        /// </summary>
        public static string HelpDrawerCompactingSpaceRecoverable {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingSpaceRecoverable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space to recover. By default it is set to the maximum value of recoverable space..
        /// </summary>
        public static string HelpDrawerCompactingSpaceToRecover {
            get {
                return ResourceManager.GetString("HelpDrawerCompactingSpaceToRecover", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Space to recover. By default it is set to the maximum value of recoverable space..
        /// </summary>
        public static string HelpDrawerSpaceSaturationDescription {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the size of the drawers stored inside the machine..
        /// </summary>
        public static string HelpDrawerSpaceSaturationDimension {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationDimension", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of mapped compartments, present inside the drawer regardless of their status..
        /// </summary>
        public static string HelpDrawerSpaceSaturationGridCompartments {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationGridCompartments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the drawer number..
        /// </summary>
        public static string HelpDrawerSpaceSaturationGridDrawer {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationGridDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of missions the drawer has been subject to..
        /// </summary>
        public static string HelpDrawerSpaceSaturationGridMissions {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationGridMissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates, in both graphic and numerical form, the total filling degree of the machine..
        /// </summary>
        public static string HelpDrawerSpaceSaturationMachineFilling {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationMachineFilling", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the total number of drawers allocated in the machine..
        /// </summary>
        public static string HelpDrawerSpaceSaturationTotalDrawer {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationTotalDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows access to the statistical analysis procedure relating to the weight allocated in the various drawers..
        /// </summary>
        public static string HelpDrawerSpaceSaturationWeightAnalisys {
            get {
                return ResourceManager.GetString("HelpDrawerSpaceSaturationWeightAnalisys", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page indicates that the system has completed the operations planned on the last drawer arrived in the bay. It is awaiting the arrival of the next drawer which will cause the opening of the page dedicated to the planned operations..
        /// </summary>
        public static string HelpDrawerWaitDescription {
            get {
                return ResourceManager.GetString("HelpDrawerWaitDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The note reports the current situation of the system..
        /// </summary>
        public static string HelpDrawerWaitNote {
            get {
                return ResourceManager.GetString("HelpDrawerWaitNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field reports the number of operations currently scheduled towards the bay on which the operator works..
        /// </summary>
        public static string HelpDrawerWaitScheduledOperations {
            get {
                return ResourceManager.GetString("HelpDrawerWaitScheduledOperations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure provides data on the weight allocated in the various drawers and, globally, inside the machine. For each drawer, further information is provided, including the current height, the maximum weight that can be loaded for each drawer, the tare, the current total weight, as well as the percentage of the current weight compared to the maximum provided both in graphical and numerical form. A global indication valid for the whole machine is also provided..
        /// </summary>
        public static string HelpDrawerWeightSaturationDescription {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the current weight of the drawer..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridActualWeight {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridActualWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the drawer number..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridDrawer {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the weight of the empty drawer..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridGross {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridGross", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current drawer height..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridHeight {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the maximum weight allowed for the drawer..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridMaxWeight {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridMaxWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the percentage of weight used referred to the maximum possible..
        /// </summary>
        public static string HelpDrawerWeightSaturationGridWeightPercent {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGridWeightPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the maximum gross capacity of the machine..
        /// </summary>
        public static string HelpDrawerWeightSaturationGrossCapacityMax {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGrossCapacityMax", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the gross weight loaded..
        /// </summary>
        public static string HelpDrawerWeightSaturationGrossLoaded {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationGrossLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum net flow allowed by the machine..
        /// </summary>
        public static string HelpDrawerWeightSaturationNetCapacity {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationNetCapacity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the net weight currently loaded..
        /// </summary>
        public static string HelpDrawerWeightSaturationNetLoaded {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationNetLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the maximum number of drawers allocated in the machine..
        /// </summary>
        public static string HelpDrawerWeightSaturationTotalDrawers {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationTotalDrawers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the current percentage of loaded weight referred to the maximum allowed weight..
        /// </summary>
        public static string HelpDrawerWeightSaturationWeightPercent {
            get {
                return ResourceManager.GetString("HelpDrawerWeightSaturationWeightPercent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to access the error statistics display page relating to the machine you are working on. The statistics covers the entire period from the moment of installation to the moment of consultation..
        /// </summary>
        public static string HelpErrorsStatisticsDescription {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The complete description of the error selected in the table is displayed..
        /// </summary>
        public static string HelpErrorsStatisticsErrorDescription {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsErrorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column of the table shows the list of error codes generated by the machine on which you are working..
        /// </summary>
        public static string HelpErrorsStatisticsGridError {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsGridError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to HelpErrorsStatisticsGridPercTotal.
        /// </summary>
        public static string HelpErrorsStatisticsGridPercTotal {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsGridPercTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The percentage incidence of each individual error is indicated in relation to the total errors counted..
        /// </summary>
        public static string HelpErrorsStatisticsGridTotal {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsGridTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system calculates the reliability coefficient of the machine as the ratio between the number of errors counted and the total of the moved drawers..
        /// </summary>
        public static string HelpErrorsStatisticsReliability {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsReliability", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the total number of drawers handled since the beginning of the installation. A drawer is considered to be moved when moved from a source to a destination..
        /// </summary>
        public static string HelpErrorsStatisticsTotalDrawersMoved {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsTotalDrawersMoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows a statistical data calculated by the system that refers to the average of the drawers moved without errors..
        /// </summary>
        public static string HelpErrorsStatisticsTotalDrawersNoError {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsTotalDrawersNoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The total number of errors that the machine has counted since installation is displayed..
        /// </summary>
        public static string HelpErrorsStatisticsTotaleErrors {
            get {
                return ResourceManager.GetString("HelpErrorsStatisticsTotaleErrors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This operation allows you to update all the positions of the cells on the back side, the saving may take a few seconds.
        /// </summary>
        public static string HelpFBDDescription {
            get {
                return ResourceManager.GetString("HelpFBDDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of cycles currently completed..
        /// </summary>
        public static string HelpGCCompleted {
            get {
                return ResourceManager.GetString("HelpGCCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the delay time between two consecutive cycles..
        /// </summary>
        public static string HelpGCDelay {
            get {
                return ResourceManager.GetString("HelpGCDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It allows to carry out a series of repetitive tests for the closing damper of the selected bay. It is possible to set a waiting time between two consecutive movements. The procedure ends when the set number of cycles is reached or at the exit..
        /// </summary>
        public static string HelpGCDescription {
            get {
                return ResourceManager.GetString("HelpGCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the number of cycles required..
        /// </summary>
        public static string HelpGCRequiredCycles {
            get {
                return ResourceManager.GetString("HelpGCRequiredCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status of sensor A of the barrier..
        /// </summary>
        public static string HelpGCSensorA {
            get {
                return ResourceManager.GetString("HelpGCSensorA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status of sensor B of the barrier..
        /// </summary>
        public static string HelpGCSensorB {
            get {
                return ResourceManager.GetString("HelpGCSensorB", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the start of the required tests. The button is active if the number of required cycles is greater than zero..
        /// </summary>
        public static string HelpGCStartButton {
            get {
                return ResourceManager.GetString("HelpGCStartButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the loop when the current move is complete. The next press of the start button resumes the test from the cycle following the one stopped..
        /// </summary>
        public static string HelpGCStopButton {
            get {
                return ResourceManager.GetString("HelpGCStopButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows access to the management page of the storage space compaction procedures..
        /// </summary>
        public static string HelpGeneralInfoButtonCompacting {
            get {
                return ResourceManager.GetString("HelpGeneralInfoButtonCompacting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to View the page dedicated to immediate call by drawer..
        /// </summary>
        public static string HelpGeneralInfoButtonDrawerCall {
            get {
                return ResourceManager.GetString("HelpGeneralInfoButtonDrawerCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Opens the page dedicated to the maintenance operations foreseen for the machine on which you are working..
        /// </summary>
        public static string HelpGeneralInfoButtonMaintenance {
            get {
                return ResourceManager.GetString("HelpGeneralInfoButtonMaintenance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to access the section dedicated to the statistical information relating to the machine you are working on..
        /// </summary>
        public static string HelpGeneralInfoButtonStastistics {
            get {
                return ResourceManager.GetString("HelpGeneralInfoButtonStastistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page presents a series of general information relating to the machine on which you are working. Among other information, the date of the next maintenance is also displayed. In case there are more maintenances due, the most recent date is displayed..
        /// </summary>
        public static string HelpGeneralInfoDescription {
            get {
                return ResourceManager.GetString("HelpGeneralInfoDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the machine installation date..
        /// </summary>
        public static string HelpGeneralInfoInstallationDate {
            get {
                return ResourceManager.GetString("HelpGeneralInfoInstallationDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the date of the last maintenance..
        /// </summary>
        public static string HelpGeneralInfoLastMaintenanceDate {
            get {
                return ResourceManager.GetString("HelpGeneralInfoLastMaintenanceDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the current maintenance status of the machine..
        /// </summary>
        public static string HelpGeneralInfoMachineStatus {
            get {
                return ResourceManager.GetString("HelpGeneralInfoMachineStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the model of the machine you are working on..
        /// </summary>
        public static string HelpGeneralInfoModel {
            get {
                return ResourceManager.GetString("HelpGeneralInfoModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the estimated date of the next maintenance..
        /// </summary>
        public static string HelpGeneralInfoNextMaintenanceDate {
            get {
                return ResourceManager.GetString("HelpGeneralInfoNextMaintenanceDate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the serial number of the machine you are working on..
        /// </summary>
        public static string HelpGeneralInfoSerial {
            get {
                return ResourceManager.GetString("HelpGeneralInfoSerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the release of the SW currently installed on the machine..
        /// </summary>
        public static string HelpGeneralInfoSwRelease {
            get {
                return ResourceManager.GetString("HelpGeneralInfoSwRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of drawers inserted in the machine..
        /// </summary>
        public static string HelpGeneralInfoTotalDrawers {
            get {
                return ResourceManager.GetString("HelpGeneralInfoTotalDrawers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field reports the current status of the WMS, if present, which controls the machine you are working on..
        /// </summary>
        public static string HelpGeneralInfoWmsStatus {
            get {
                return ResourceManager.GetString("HelpGeneralInfoWmsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the correction to be applied to the barrier. The plus sign requires to raise the barrier, the minus sign to lower it by the indicated value..
        /// </summary>
        public static string HelpGHCBarrierCorrection {
            get {
                return ResourceManager.GetString("HelpGHCBarrierCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Returns the current position of the chain axis..
        /// </summary>
        public static string HelpGHCCurrentPosition {
            get {
                return ResourceManager.GetString("HelpGHCCurrentPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to adjust the drawer height detection barrier. The height reached signal must also be used in the pre-positioning phase of the test template..
        /// </summary>
        public static string HelpGHCDescription {
            get {
                return ResourceManager.GetString("HelpGHCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the final test result..
        /// </summary>
        public static string HelpGHCFinalResult {
            get {
                return ResourceManager.GetString("HelpGHCFinalResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the activation of the beam used as a height verification element..
        /// </summary>
        public static string HelpGHCHeightReached {
            get {
                return ResourceManager.GetString("HelpGHCHeightReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button starts the check procedure..
        /// </summary>
        public static string HelpGHCStart {
            get {
                return ResourceManager.GetString("HelpGHCStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button stops the check procedure..
        /// </summary>
        public static string HelpGHCStop {
            get {
                return ResourceManager.GetString("HelpGHCStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the system error resulting from the set calibration speed and the system scan time. Reduce the speed to decrease the error..
        /// </summary>
        public static string HelpGHCSystemError {
            get {
                return ResourceManager.GetString("HelpGHCSystemError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sets the maximum tolerance allowed in the measurement. The test fails if the result exceeds the required value..
        /// </summary>
        public static string HelpGHCTollerance {
            get {
                return ResourceManager.GetString("HelpGHCTollerance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set the speed to be used during the calibration phase..
        /// </summary>
        public static string HelpGHCVelocity {
            get {
                return ResourceManager.GetString("HelpGHCVelocity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to call the selected drawer in the bay on which the operator is working..
        /// </summary>
        public static string HelpImmediateDrawerCallDescription {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button allows you to recall the drawer currently selected in the grid. The button is active if the drawer can be called up by the current user..
        /// </summary>
        public static string HelpImmediateDrawerCallDrawerCall {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallDrawerCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the cell in which it is stored in the drawer..
        /// </summary>
        public static string HelpImmediateDrawerCallGridCell {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of the drawer to which the grid data refers..
        /// </summary>
        public static string HelpImmediateDrawerCallGridDrawer {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current height of the selected drawer..
        /// </summary>
        public static string HelpImmediateDrawerCallGridHeight {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridHeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the side of the machine where the drawer is stored..
        /// </summary>
        public static string HelpImmediateDrawerCallGridSide {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the current status of the drawer. The red color indicates that the drawer cannot be recalled by the currently connected user..
        /// </summary>
        public static string HelpImmediateDrawerCallGridStatus {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current weight of the selected drawer..
        /// </summary>
        public static string HelpImmediateDrawerCallGridWeight {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallGridWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the number of the drawer to be recalled..
        /// </summary>
        public static string HelpImmediateDrawerCallRequestedDrawer {
            get {
                return ResourceManager.GetString("HelpImmediateDrawerCallRequestedDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the current status of the installation. The parts already completed are highlighted in green while those to be completed or to be done are in gray. Some procedures are possible only after having correctly completed the preparatory ones..
        /// </summary>
        public static string HelpInstallationStateDescription {
            get {
                return ResourceManager.GetString("HelpInstallationStateDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The green indicator indicates a successful procedure..
        /// </summary>
        public static string HelpInstallationStateDone {
            get {
                return ResourceManager.GetString("HelpInstallationStateDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The gray indicator indicates a procedure still to be done.
        /// </summary>
        public static string HelpInstallationStateToDo {
            get {
                return ResourceManager.GetString("HelpInstallationStateToDo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to List of buttons to access the installation functions..
        /// </summary>
        public static string HelpIPGButton {
            get {
                return ResourceManager.GetString("HelpIPGButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main menu allows access to all the functions foreseen for the machine commissioning phase..
        /// </summary>
        public static string HelpIPGDescription {
            get {
                return ResourceManager.GetString("HelpIPGDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to scroll down the list of buttons for accessing the various functions..
        /// </summary>
        public static string HelpIPGDown {
            get {
                return ResourceManager.GetString("HelpIPGDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates, when visible, the presence of an error. Pressing the button opens the window dedicated to restoring the situation..
        /// </summary>
        public static string HelpIPGError {
            get {
                return ResourceManager.GetString("HelpIPGError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Main menu..
        /// </summary>
        public static string HelpIPGHeder {
            get {
                return ResourceManager.GetString("HelpIPGHeder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If pressed, opens the contextual menu for the currently selected function..
        /// </summary>
        public static string HelpIPGHelp {
            get {
                return ResourceManager.GetString("HelpIPGHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the name of the user currently logged in. If pressed, it allows you to log out of the system..
        /// </summary>
        public static string HelpIPGInstaller {
            get {
                return ResourceManager.GetString("HelpIPGInstaller", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Off status of this button indicates the disabling of the machine movements..
        /// </summary>
        public static string HelpIPGOff {
            get {
                return ResourceManager.GetString("HelpIPGOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The On state of this button indicates that the machine is enabled to move..
        /// </summary>
        public static string HelpIPGOn {
            get {
                return ResourceManager.GetString("HelpIPGOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to scroll up the list of buttons for accessing the various functions..
        /// </summary>
        public static string HelpIPGUp {
            get {
                return ResourceManager.GetString("HelpIPGUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to search for an article using both the code and description columns. The text entered in the search field is automatically used to find what is required using the contents of the two columns. The result is displayed in the grid..
        /// </summary>
        public static string HelpItemSearchDescription {
            get {
                return ResourceManager.GetString("HelpItemSearchDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Average unit weight expressed in the unit of measurement indicated..
        /// </summary>
        public static string HelpItemSearchDetailAverageWeight {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailAverageWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Categoria di appartenenza dell&apos;articolo..
        /// </summary>
        public static string HelpItemSearchDetailCategory {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailCategory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Handling class of the selected item..
        /// </summary>
        public static string HelpItemSearchDetailClasse {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailClasse", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page displays the main data of the selected article. More detailed information can be viewed at the management WMS level..
        /// </summary>
        public static string HelpItemSearchDetailDescription {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the Fifo period of the article, expressed in the unit of measurement indicated..
        /// </summary>
        public static string HelpItemSearchDetailFifoPeriod {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailFifoPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates how to manage the article..
        /// </summary>
        public static string HelpItemSearchDetailMangementType {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailMangementType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unit of measure selected for the item..
        /// </summary>
        public static string HelpItemSearchDetailMeasurementUnit {
            get {
                return ResourceManager.GetString("HelpItemSearchDetailMeasurementUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It shows the list of article codes that match the search criteria..
        /// </summary>
        public static string HelpItemSearchGridItem {
            get {
                return ResourceManager.GetString("HelpItemSearchGridItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It shows the description of the article codes that match the search criteria..
        /// </summary>
        public static string HelpItemSearchGridItemDescription {
            get {
                return ResourceManager.GetString("HelpItemSearchGridItemDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the list of machines that contain the item indicated in the row. An article can be present in one or more machines..
        /// </summary>
        public static string HelpItemSearchGridMachine {
            get {
                return ResourceManager.GetString("HelpItemSearchGridMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to request the selected item in the required quantity. The button is enabled only if the item is available on the machine where you are working..
        /// </summary>
        public static string HelpItemSearchItemCall {
            get {
                return ResourceManager.GetString("HelpItemSearchItemCall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the available quantity of the selected item inside the machine you are working on..
        /// </summary>
        public static string HelpItemSearchQtyAvailable {
            get {
                return ResourceManager.GetString("HelpItemSearchQtyAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field is enabled only if the quantity available for the selected item is greater than zero. It is possible to insert a value not exceeding the available quantity..
        /// </summary>
        public static string HelpItemSearchQtyRequired {
            get {
                return ResourceManager.GetString("HelpItemSearchQtyRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Enter the sequence of characters to search for in the code and item description fields in the field..
        /// </summary>
        public static string HelpItemSearchTextToFind {
            get {
                return ResourceManager.GetString("HelpItemSearchTextToFind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to insert the empty drawers inside the machine at the end of the commissioning procedure. The drawers are inserted inside the free blocks choosing them according to the lowest priority..
        /// </summary>
        public static string HelpLDRDescription {
            get {
                return ResourceManager.GetString("HelpLDRDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of the drawer being inserted. It can be generated by the appropriate button or inserted in the appropriate field..
        /// </summary>
        public static string HelpLDRDrawerToInsert {
            get {
                return ResourceManager.GetString("HelpLDRDrawerToInsert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drawers already inserted in the car..
        /// </summary>
        public static string HelpLDRInsertedDrawers {
            get {
                return ResourceManager.GetString("HelpLDRInsertedDrawers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the maximum capacity allowed for the drawer currently being inserted..
        /// </summary>
        public static string HelpLDRMaxLoad {
            get {
                return ResourceManager.GetString("HelpLDRMaxLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button sets the next drawer to be inserted. the number is the one following the last one entered..
        /// </summary>
        public static string HelpLDRNextDrawer {
            get {
                return ResourceManager.GetString("HelpLDRNextDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts the procedure for inserting the selected drawer..
        /// </summary>
        public static string HelpLDRStart {
            get {
                return ResourceManager.GetString("HelpLDRStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of drawers to be inserted..
        /// </summary>
        public static string HelpLDRTotalDrawers {
            get {
                return ResourceManager.GetString("HelpLDRTotalDrawers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of the cell currently being tested..
        /// </summary>
        public static string HelpLFDCellInTest {
            get {
                return ResourceManager.GetString("HelpLFDCellInTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to use the drawer selected in the appropriate input field to test the lower and upper cells of the machine as well as the cells below and above the cell blocks indicated as disabled. The purpose of the procedure is to verify that there is no mechanical interference in these areas..
        /// </summary>
        public static string HelpLFDDescription {
            get {
                return ResourceManager.GetString("HelpLFDDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number of the drawer being inserted..
        /// </summary>
        public static string HelpLFDDrawerNumber {
            get {
                return ResourceManager.GetString("HelpLFDDrawerNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the drawer insertion procedure. The procedure ends when the planned cycles are completed..
        /// </summary>
        public static string HelpLFDInsertDrawer {
            get {
                return ResourceManager.GetString("HelpLFDInsertDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Maximum capacity of the drawer during loading..
        /// </summary>
        public static string HelpLFDMaxLoad {
            get {
                return ResourceManager.GetString("HelpLFDMaxLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recall the drawer used for the test in the bay..
        /// </summary>
        public static string HelpLFDRecallDrawer {
            get {
                return ResourceManager.GetString("HelpLFDRecallDrawer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of cells currently tested..
        /// </summary>
        public static string HelpLFDTestedCells {
            get {
                return ResourceManager.GetString("HelpLFDTestedCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the total number of cells to be tested..
        /// </summary>
        public static string HelpLFDTotalCells {
            get {
                return ResourceManager.GetString("HelpLFDTotalCells", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to view all the lists pending execution by the WMS system. The machines involved are indicated for each list. It is possible to execute only the portion of lists that have some article to be taken present in the machine from which the procedure is being used..
        /// </summary>
        public static string HelpListsInWaitDescription {
            get {
                return ResourceManager.GetString("HelpListsInWaitDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column of the grid presents the description of the lists awaiting execution..
        /// </summary>
        public static string HelpListsInWaitGridDescription {
            get {
                return ResourceManager.GetString("HelpListsInWaitGridDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The grid column presents the codes of the lists awaiting execution..
        /// </summary>
        public static string HelpListsInWaitGridList {
            get {
                return ResourceManager.GetString("HelpListsInWaitGridList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column shows, for each list, the list of machines involved for its execution..
        /// </summary>
        public static string HelpListsInWaitGridMachine {
            get {
                return ResourceManager.GetString("HelpListsInWaitGridMachine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It indicates the type of list according to the following code: P: pick V: put I: Inventory.
        /// </summary>
        public static string HelpListsInWaitGridType {
            get {
                return ResourceManager.GetString("HelpListsInWaitGridType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button allows you to access the detail page of the list where you can see the list of articles present..
        /// </summary>
        public static string HelpListsInWaitListsDetail {
            get {
                return ResourceManager.GetString("HelpListsInWaitListsDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button, if active, allows you to execute the list currently selected for the portion present in the machine you are working on..
        /// </summary>
        public static string HelpListsInWaitListsExecute {
            get {
                return ResourceManager.GetString("HelpListsInWaitListsExecute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current position or status for those parts that only have discrete positions..
        /// </summary>
        public static string HelpLSMTActualPosition {
            get {
                return ResourceManager.GetString("HelpLSMTActualPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the mode currently enabled for manual commands. Extended stroke mode is automatically set after commissioning is complete..
        /// </summary>
        public static string HelpLSMTComandMode {
            get {
                return ResourceManager.GetString("HelpLSMTComandMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It allows to carry out the movement of the various axes at low speed. A small movement space in both directions is set. The text of the buttons changes according to the required movement. Once the machine has been tested, it will be possible to control all the various axes at low speed without interlocks and for unlimited strokes..
        /// </summary>
        public static string HelpLSMTDescription {
            get {
                return ResourceManager.GetString("HelpLSMTDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button for moving backward, downward or closed according to the selected part.
        /// </summary>
        public static string HelpLSMTMoveDown {
            get {
                return ResourceManager.GetString("HelpLSMTMoveDown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Button for forward movement, upward movement or opening according to the selected part.
        /// </summary>
        public static string HelpLSMTMoveUp {
            get {
                return ResourceManager.GetString("HelpLSMTMoveUp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Low speed manual controls..
        /// </summary>
        public static string HelpLSMTTitle {
            get {
                return ResourceManager.GetString("HelpLSMTTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the total number of drawers that have affected bay n. 2. The count increases when a drawer is brought into the bay and then returned to the warehouse..
        /// </summary>
        public static string HelpMachineStatisticsBay1 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsBay1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the total number of drawers that have affected bay n. 2. The count increases when a drawer is brought into the bay and then returned to the warehouse..
        /// </summary>
        public static string HelpMachineStatisticsBay2 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsBay2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the total number of drawers that have affected bay n. 3. The count increases when a drawer is brought into the bay and then returned to the warehouse..
        /// </summary>
        public static string HelpMachineStatisticsBay3 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsBay3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure provides statistical data of the main parts of the machine. The data provided refer to what the machine has done during its life cycle from the moment of installation..
        /// </summary>
        public static string HelpMachineStatisticsDescription {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The field shows the total number of cycles carried out by the chain on the machine lift since installation. A cycle is an embarkation or disembarkation operation..
        /// </summary>
        public static string HelpMachineStatisticsHorizontalCycles {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsHorizontalCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the total number of cycles performed by the shutter that equips bay n. 1. A cycle is a total or intermediate opening or closing operation..
        /// </summary>
        public static string HelpMachineStatisticsShutter {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsShutter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the total number of cycles performed by the shutter that equips bay n. 1. A cycle is a total or intermediate opening or closing operation..
        /// </summary>
        public static string HelpMachineStatisticsShutter1 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsShutter1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the total number of cycles performed by the shutter that equips bay n. 2. A cycle is a total or intermediate opening or closing operation..
        /// </summary>
        public static string HelpMachineStatisticsShutter2 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsShutter2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the total number of cycles performed by the shutter that equips bay n. 3. A cycle is a total or intermediate opening or closing operation..
        /// </summary>
        public static string HelpMachineStatisticsShutter3 {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsShutter3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the total number of cycles performed by the vertical axis. A cycle is equivalent to a shift between two points..
        /// </summary>
        public static string HelpMachineStatisticsVerticalCycles {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsVerticalCycles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the totalisation of the Km. Traveled by the vertical axis from the moment of installation..
        /// </summary>
        public static string HelpMachineStatisticsVerticalKm {
            get {
                return ResourceManager.GetString("HelpMachineStatisticsVerticalKm", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of cycles that can be carried out between two maintenance operations..
        /// </summary>
        public static string HelpMaintenanceDetailCyclesBetweenTwoMaint {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailCyclesBetweenTwoMaint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the number of cycles performed since the last maintenance..
        /// </summary>
        public static string HelpMaintenanceDetailCyclesFromLastMaint {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailCyclesFromLastMaint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of cycles completed since the machine was installed..
        /// </summary>
        public static string HelpMaintenanceDetailCyclesTotal {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailCyclesTotal", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page allows you to view the data on which the maintenance of the selected kit is based. All the information used by the system to determine scheduled maintenance operations is displayed..
        /// </summary>
        public static string HelpMaintenanceDetailDescription {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It reports the status of the kit with the convention that the orange color indicates the approach of maintenance and the red that the maintenance is expired..
        /// </summary>
        public static string HelpMaintenanceDetailElementStatus {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailElementStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the description of the component used in the selected kit..
        /// </summary>
        public static string HelpMaintenanceDetailGridDescription {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailGridDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Shows the part number used by the selected maintenance kit..
        /// </summary>
        public static string HelpMaintenanceDetailGridElement {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailGridElement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of pieces of the element required in the selected kit..
        /// </summary>
        public static string HelpMaintenanceDetailGridQuantity {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailGridQuantity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the number of hours required to carry out the required maintenance operation..
        /// </summary>
        public static string HelpMaintenanceDetailHoursRequired {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailHoursRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates whether the use of a platform for work at height is necessary for the maintenance operation to be carried out..
        /// </summary>
        public static string HelpMaintenanceDetailPlatformRequired {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailPlatformRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It allows you to send an email to the assistance office asking to be contacted to arrange a maintenance intervention..
        /// </summary>
        public static string HelpMaintenanceDetailSendRequestContact {
            get {
                return ResourceManager.GetString("HelpMaintenanceDetailSendRequestContact", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column shows the description of the various kits..
        /// </summary>
        public static string HelpMaintenanceMainPageGridDescription {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageGridDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column shows the kit code for the selected component..
        /// </summary>
        public static string HelpMaintenanceMainPageGridKit {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageGridKit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The column indicates that a request for intervention has already been made to the maintenance staff for a specific kit..
        /// </summary>
        public static string HelpMaintenanceMainPageGridRequest {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageGridRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current status of the kit. the orange color indicates the approach of maintenance, the red period expired and therefore maintenance required..
        /// </summary>
        public static string HelpMaintenanceMainPageGridState {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageGridState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the machine installation date..
        /// </summary>
        public static string HelpMaintenanceMainPageInstallation {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageInstallation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the date on which the last maintenance was performed..
        /// </summary>
        public static string HelpMaintenanceMainPageLastMaintenance {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageLastMaintenance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current status of the kit. the orange color indicates the approach of maintenance, the red period expired and therefore maintenance required..
        /// </summary>
        public static string HelpMaintenanceMainPageMachineStatus {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageMachineStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Show the machine model..
        /// </summary>
        public static string HelpMaintenanceMainPageModel {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the estimated date for the next maintenance..
        /// </summary>
        public static string HelpMaintenanceMainPageNextMaintenance {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageNextMaintenance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the serial number of the machine..
        /// </summary>
        public static string HelpMaintenanceMainPageSerial {
            get {
                return ResourceManager.GetString("HelpMaintenanceMainPageSerial", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the automatic condition. The machine manages the commands coming from the control system..
        /// </summary>
        public static string HelpOpMainAuto {
            get {
                return ResourceManager.GetString("HelpOpMainAuto", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button opens the page for managing the operations scheduled on the drawer in the bay..
        /// </summary>
        public static string HelpOpMainDrawerOp {
            get {
                return ResourceManager.GetString("HelpOpMainDrawerOp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An error occurred while the machine was running. Pressing this button opens the page for managing the recovery procedures..
        /// </summary>
        public static string HelpOpMainError {
            get {
                return ResourceManager.GetString("HelpOpMainError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button opens the help page contextual to the procedure you are using..
        /// </summary>
        public static string HelpOpMainHelp {
            get {
                return ResourceManager.GetString("HelpOpMainHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button opens the page that allows you to search for an article code..
        /// </summary>
        public static string HelpOpMainItem {
            get {
                return ResourceManager.GetString("HelpOpMainItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button opens the display page of the lists pending execution scheduled by the WMS..
        /// </summary>
        public static string HelpOpMainLists {
            get {
                return ResourceManager.GetString("HelpOpMainLists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the manual condition. The automatic cycle is suspended..
        /// </summary>
        public static string HelpOpMainManu {
            get {
                return ResourceManager.GetString("HelpOpMainManu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The power to the motors is disabled. Movements are not possible in any mode..
        /// </summary>
        public static string HelpOpMainOff {
            get {
                return ResourceManager.GetString("HelpOpMainOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The power to the motors is enabled. The machine is able to make movements..
        /// </summary>
        public static string HelpOpMainOn {
            get {
                return ResourceManager.GetString("HelpOpMainOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows access to additional functions..
        /// </summary>
        public static string HelpOpMainOther {
            get {
                return ResourceManager.GetString("HelpOpMainOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The main menu allows you to check the machine status using the appropriate buttons at the top of the screen. On the left side, using the navigation buttons, it is possible to access the various functions..
        /// </summary>
        public static string HelpOpMainPageDescription {
            get {
                return ResourceManager.GetString("HelpOpMainPageDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First page..
        /// </summary>
        public static string HelpOpMainPageHeadr {
            get {
                return ResourceManager.GetString("HelpOpMainPageHeadr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system signals that some parts of the machine are approaching the time for scheduled maintenance..
        /// </summary>
        public static string HelpOpMainServiceAdvice {
            get {
                return ResourceManager.GetString("HelpOpMainServiceAdvice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The system signals that some parts of the machine have reached the end of the scheduled period between two maintenance operations. Maintenance required!.
        /// </summary>
        public static string HelpOpMainServiceAllert {
            get {
                return ResourceManager.GetString("HelpOpMainServiceAllert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the name of the currently logged in operator. Pressing the button allows you to log off..
        /// </summary>
        public static string HelpOpMainUser {
            get {
                return ResourceManager.GetString("HelpOpMainUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to bypass the Sensitive carpet control unit alarm and Sensitive edge control unit alarm.
        /// </summary>
        public static string HelpSensitiveAlarmDescription {
            get {
                return ResourceManager.GetString("HelpSensitiveAlarmDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to save or recover configuration files on the external device..
        /// </summary>
        public static string HelpSRCDescription {
            get {
                return ResourceManager.GetString("HelpSRCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel the file upload procedure..
        /// </summary>
        public static string HelpSRCLoadAbortButton {
            get {
                return ResourceManager.GetString("HelpSRCLoadAbortButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the configuration files upload procedure. Any files already present will be overwritten..
        /// </summary>
        public static string HelpSRCLoadButton {
            get {
                return ResourceManager.GetString("HelpSRCLoadButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm the file upload procedure..
        /// </summary>
        public static string HelpSRCLoadConfirmButton {
            get {
                return ResourceManager.GetString("HelpSRCLoadConfirmButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration restore procedure..
        /// </summary>
        public static string HelpSRCLoadSide {
            get {
                return ResourceManager.GetString("HelpSRCLoadSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel the file saving procedure..
        /// </summary>
        public static string HelpSRCPageHeader {
            get {
                return ResourceManager.GetString("HelpSRCPageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cancel the file saving procedure..
        /// </summary>
        public static string HelpSRCSaveAbortButton {
            get {
                return ResourceManager.GetString("HelpSRCSaveAbortButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the procedure for saving the configuration files. Any files already present will be overwritten..
        /// </summary>
        public static string HelpSRCSaveButton {
            get {
                return ResourceManager.GetString("HelpSRCSaveButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm the file saving procedure..
        /// </summary>
        public static string HelpSRCSaveConfirmButton {
            get {
                return ResourceManager.GetString("HelpSRCSaveConfirmButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the automatically created folder where the configuration files will be saved..
        /// </summary>
        public static string HelpSRCSaveFolder {
            get {
                return ResourceManager.GetString("HelpSRCSaveFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration saving procedure..
        /// </summary>
        public static string HelpSRCSaveSide {
            get {
                return ResourceManager.GetString("HelpSRCSaveSide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The gray color indicates the inactive state of the sensor..
        /// </summary>
        public static string HelpSSDescription {
            get {
                return ResourceManager.GetString("HelpSSDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The gray color indicates the inactive state of the sensor..
        /// </summary>
        public static string HelpSSStateOff {
            get {
                return ResourceManager.GetString("HelpSSStateOff", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The green color indicates the active state of the sensor..
        /// </summary>
        public static string HelpSSStateOn {
            get {
                return ResourceManager.GetString("HelpSSStateOn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sensor status display.
        /// </summary>
        public static string HelpSSTitle {
            get {
                return ResourceManager.GetString("HelpSSTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the ratio between the total time elapsed in automatic mode and the switch-on time from the moment of installation..
        /// </summary>
        public static string HelpStatisticsGeneralDataAutomaticTotalTime {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataAutomaticTotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activate the cell statistics display page..
        /// </summary>
        public static string HelpStatisticsGeneralDataButtonCellsStatistics {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataButtonCellsStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the statistical data page of the various drawers present in the machine..
        /// </summary>
        public static string HelpStatisticsGeneralDataButtonDrawersStatistics {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataButtonDrawersStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Activates the page for displaying the statistical data relating to errors generated by the machine since installation..
        /// </summary>
        public static string HelpStatisticsGeneralDataButtonErrorsStatistics {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataButtonErrorsStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows access to the display page of the statistical data of the machine..
        /// </summary>
        public static string HelpStatisticsGeneralDataButtonMachineStatistics {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataButtonMachineStatistics", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The page displays some statistical information relating to the use of the drawer area and the total weight loaded in relation to the characteristics of the machine. Information on the use of the machine is also displayed..
        /// </summary>
        public static string HelpStatisticsGeneralDataDescription {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of drawers moved since the start of installation..
        /// </summary>
        public static string HelpStatisticsGeneralDataLoadedWeight {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataLoadedWeight", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total number of drawers moved since the start of installation..
        /// </summary>
        public static string HelpStatisticsGeneralDataMovedDrawers {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataMovedDrawers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the percentage of area occupied inside the machine referred to the total space available..
        /// </summary>
        public static string HelpStatisticsGeneralDataOccupiedArea {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataOccupiedArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reports the total power on time since the machine was installed..
        /// </summary>
        public static string HelpStatisticsGeneralDataPowerOnTotalTime {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataPowerOnTotalTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The utilization coefficient indicates the ratio between the time spent in automatic moving drawers and that of ignition..
        /// </summary>
        public static string HelpStatisticsGeneralDataUseRatio {
            get {
                return ResourceManager.GetString("HelpStatisticsGeneralDataUseRatio", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to make the origin of the vertical axis at the end of which the current position indicated by the offset value is set. The procedure is preparatory for the realization of other functions that require the axis movement to height..
        /// </summary>
        public static string HelpVACDescription {
            get {
                return ResourceManager.GetString("HelpVACDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Lower movement limit..
        /// </summary>
        public static string HelpVACDownLimit {
            get {
                return ResourceManager.GetString("HelpVACDownLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the final outcome of the procedure..
        /// </summary>
        public static string HelpVACFinalResult {
            get {
                return ResourceManager.GetString("HelpVACFinalResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current offset value. At the end of the axis origin, the current quota is set to this value..
        /// </summary>
        public static string HelpVACOffset {
            get {
                return ResourceManager.GetString("HelpVACOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current resolution of the axis..
        /// </summary>
        public static string HelpVACResolution {
            get {
                return ResourceManager.GetString("HelpVACResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starts the vertical axis origin procedure..
        /// </summary>
        public static string HelpVacStart {
            get {
                return ResourceManager.GetString("HelpVacStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stops the vertical axis origin procedure..
        /// </summary>
        public static string HelpVACStop {
            get {
                return ResourceManager.GetString("HelpVACStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Upper movement limit..
        /// </summary>
        public static string HelpVACUpLimit {
            get {
                return ResourceManager.GetString("HelpVACUpLimit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current value of the vertical axis offset..
        /// </summary>
        public static string HelpVOCActualOffset {
            get {
                return ResourceManager.GetString("HelpVOCActualOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current position of the vertical axis..
        /// </summary>
        public static string HelpVOCActualPosition {
            get {
                return ResourceManager.GetString("HelpVOCActualPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New offset value..
        /// </summary>
        public static string HelpVOCAdjustedOffset {
            get {
                return ResourceManager.GetString("HelpVOCAdjustedOffset", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updates the vertical axis offset to the indicated value..
        /// </summary>
        public static string HelpVOCApplyCorrection {
            get {
                return ResourceManager.GetString("HelpVOCApplyCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Current elevation of the selected cell.
        /// </summary>
        public static string HelpVOCCellPosition {
            get {
                return ResourceManager.GetString("HelpVOCCellPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to correct the offset of the vertical axis in order to align the height of the various cells with the reference system of the vertical axis..
        /// </summary>
        public static string HelpVOCDescription {
            get {
                return ResourceManager.GetString("HelpVOCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Moves the vertical axis in to the dimension of the selected cell..
        /// </summary>
        public static string HelpVOCGoToCell {
            get {
                return ResourceManager.GetString("HelpVOCGoToCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cell selected for checking..
        /// </summary>
        public static string HelpVOCSelectedCell {
            get {
                return ResourceManager.GetString("HelpVOCSelectedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decreases the current height of the vertical axis by the set step value..
        /// </summary>
        public static string HelpVOCStepMeno {
            get {
                return ResourceManager.GetString("HelpVOCStepMeno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increases the current height of the vertical axis by the set step value..
        /// </summary>
        public static string HelpVOCStepPiu {
            get {
                return ResourceManager.GetString("HelpVOCStepPiu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value of the change in height to be applied each time the axis movement keys are pressed..
        /// </summary>
        public static string HelpVOCStepValue {
            get {
                return ResourceManager.GetString("HelpVOCStepValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the currently selected panel that is being checked..
        /// </summary>
        public static string HelpVPPMActualPanel {
            get {
                return ResourceManager.GetString("HelpVPPMActualPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the current position of the axis. It is changed by the action of the step buttons..
        /// </summary>
        public static string HelpVPPMActualPosition {
            get {
                return ResourceManager.GetString("HelpVPPMActualPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply the correction to the group of cells in the currently selected panel..
        /// </summary>
        public static string HelpVPPMApplyCorrection {
            get {
                return ResourceManager.GetString("HelpVPPMApplyCorrection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Total value of the correction that will be applied to the dimension of the selected cell..
        /// </summary>
        public static string HelpVPPMCorrectionValue {
            get {
                return ResourceManager.GetString("HelpVPPMCorrectionValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to check the correct positioning of the various shelf door panels. Any correction is applied to all the cells belonging to the panel being tested..
        /// </summary>
        public static string HelpVPPMDescription {
            get {
                return ResourceManager.GetString("HelpVPPMDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Place the axis at the selected cell..
        /// </summary>
        public static string HelpVPPMGoToCell {
            get {
                return ResourceManager.GetString("HelpVPPMGoToCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Allows you to go to the next panel to check..
        /// </summary>
        public static string HelpVPPMNextPanel {
            get {
                return ResourceManager.GetString("HelpVPPMNextPanel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected cell from which the panel to control is derived. Odd or even numbers select the front or back side..
        /// </summary>
        public static string HelpVPPMSelectedCell {
            get {
                return ResourceManager.GetString("HelpVPPMSelectedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Dimension of the selected cell..
        /// </summary>
        public static string HelpVPPMSelectedCellPosition {
            get {
                return ResourceManager.GetString("HelpVPPMSelectedCellPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decreases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpVPPMStepMeno {
            get {
                return ResourceManager.GetString("HelpVPPMStepMeno", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Increases the current coordinate of the axis by the value indicated by the step..
        /// </summary>
        public static string HelpVPPMStepPiu {
            get {
                return ResourceManager.GetString("HelpVPPMStepPiu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step value to use when modifying the dimension..
        /// </summary>
        public static string HelpVPPMStepValue {
            get {
                return ResourceManager.GetString("HelpVPPMStepValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the total number of panels on the side selected by the reference cell..
        /// </summary>
        public static string HelpVPPMTotalPanels {
            get {
                return ResourceManager.GetString("HelpVPPMTotalPanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The procedure allows you to verify that the weight measurement falls within the expected tolerance. For the measurement, sample weights are used in the quantity indicated in the appropriate field..
        /// </summary>
        public static string HelpWCDescription {
            get {
                return ResourceManager.GetString("HelpWCDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Report the final outcome of the procedure. The result will be positive if the measured weight falls within the set tolerance..
        /// </summary>
        public static string HelpWCFinalResult {
            get {
                return ResourceManager.GetString("HelpWCFinalResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start the test procedure..
        /// </summary>
        public static string HelpWCStart {
            get {
                return ResourceManager.GetString("HelpWCStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop the test procedure..
        /// </summary>
        public static string HelpWCStop {
            get {
                return ResourceManager.GetString("HelpWCStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the run performed at low speed during which the samples of the delivered current are carried out..
        /// </summary>
        public static string HelpWCTestRun {
            get {
                return ResourceManager.GetString("HelpWCTestRun", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the sample weight entered for the test..
        /// </summary>
        public static string HelpWCWeightInserted {
            get {
                return ResourceManager.GetString("HelpWCWeightInserted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the weight measured by the system..
        /// </summary>
        public static string HelpWCWeightMeasured {
            get {
                return ResourceManager.GetString("HelpWCWeightMeasured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the tolerance required by the measure..
        /// </summary>
        public static string HelpWCWeightTollerance {
            get {
                return ResourceManager.GetString("HelpWCWeightTollerance", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replaces the previous resolution value with the new calculated value..
        /// </summary>
        public static string ResolutionCalibrationAcceptNewResolution {
            get {
                return ResourceManager.GetString("ResolutionCalibrationAcceptNewResolution", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ResolutionCalibrationActualResolutionHelp.
        /// </summary>
        public static string ResolutionCalibrationActualResolutionHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationActualResolutionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Make the origin of the axis and close the procedure..
        /// </summary>
        public static string ResolutionCalibrationCloseProcedure {
            get {
                return ResourceManager.GetString("ResolutionCalibrationCloseProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the field is editable, set the final quota required..
        /// </summary>
        public static string ResolutionCalibrationFinalPositionHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationFinalPositionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The button starts moving the axis to the final position previously set..
        /// </summary>
        public static string ResolutionCalibrationFinalPosizionStartHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationFinalPosizionStartHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Final value of the current position read by the meter..
        /// </summary>
        public static string ResolutionCalibrationFinalReadValueHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationFinalReadValueHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The vertical axis resolution calibration function allows you to calibrate the correct value by measuring in the field, then updating the default value proposed by the system. The procedure operates in successive steps until successful completion..
        /// </summary>
        public static string ResolutionCalibrationFunctionDescription {
            get {
                return ResourceManager.GetString("ResolutionCalibrationFunctionDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return the axis to its initial position..
        /// </summary>
        public static string ResolutionCalibrationGoToInitialPosizion {
            get {
                return ResourceManager.GetString("ResolutionCalibrationGoToInitialPosizion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to If the field is editable, set the required initial quota..
        /// </summary>
        public static string ResolutionCalibrationInitialPositionHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationInitialPositionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Initial value of the current position read by the meter..
        /// </summary>
        public static string ResolutionCalibrationInitialReadValueHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationInitialReadValueHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the measured travel from the start to the end position..
        /// </summary>
        public static string ResolutionCalibrationInitialStartHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationInitialStartHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Indicates the measured travel from the start to the end position..
        /// </summary>
        public static string ResolutionCalibrationMeasuredeValueHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationMeasuredeValueHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Displays the new resolution value calculated by the procedure..
        /// </summary>
        public static string ResolutionCalibrationNewResolutionHelp {
            get {
                return ResourceManager.GetString("ResolutionCalibrationNewResolutionHelp", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 1: place axis at the initial position.
        /// </summary>
        public static string VerticalResolutionCalibrationStep1 {
            get {
                return ResourceManager.GetString("VerticalResolutionCalibrationStep1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 2: place axis at the final dimension.
        /// </summary>
        public static string VerticalResolutionCalibrationStep2 {
            get {
                return ResourceManager.GetString("VerticalResolutionCalibrationStep2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 3: Update the resolution to the new value.
        /// </summary>
        public static string VerticalResolutionCalibrationStep3 {
            get {
                return ResourceManager.GetString("VerticalResolutionCalibrationStep3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Step 4: reposition axis and close the procedure.
        /// </summary>
        public static string VerticalResolutionCalibrationStep4 {
            get {
                return ResourceManager.GetString("VerticalResolutionCalibrationStep4", resourceCulture);
            }
        }
    }
}
