<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutomaticMissing" xml:space="preserve">
    <value>Automatic missing</value>
  </data>
  <data name="BayCalibrationNotPerformed" xml:space="preserve">
    <value>Bay calibration not performed.</value>
  </data>
  <data name="CalibrationCarouselFailedChainNotZeroPosition" xml:space="preserve">
    <value>Carousel calibration failed. \r\n The bay chain is not in the zero position.</value>
  </data>
  <data name="CellBusy" xml:space="preserve">
    <value>Busy</value>
  </data>
  <data name="CellFree" xml:space="preserve">
    <value>Free</value>
  </data>
  <data name="HomingNotPerformed" xml:space="preserve">
    <value>Homing not performed.</value>
  </data>
  <data name="InconsistencyShutterPresenceSensor" xml:space="preserve">
    <value>Inconsistency of shutter presence sensors in the bay.</value>
  </data>
  <data name="InconsistencyStateAndSensors" xml:space="preserve">
    <value>Load state and sensors inconsistency.</value>
  </data>
  <data name="InconsistencyZeroPawlSensor" xml:space="preserve">
    <value>Zero pawl sensor inconsistency and loading unit presence.</value>
  </data>
  <data name="LoadingUnitOnElevator" xml:space="preserve">
    <value>Loading unit presence on the elevator.</value>
  </data>
  <data name="LoadingUnitReady" xml:space="preserve">
    <value>Load unit ready for operation.</value>
  </data>
  <data name="LoadingUnitSuccessfullyRequested" xml:space="preserve">
    <value>Successfully requested loading unit {0}.</value>
  </data>
  <data name="LoadUnitOnBoardHasInvalidHeight" xml:space="preserve">
    <value>LoadUnit on  board has invalid height</value>
  </data>
  <data name="MachineNotManual" xml:space="preserve">
    <value>The machine is not in manual...</value>
  </data>
  <data name="MachineOff" xml:space="preserve">
    <value>Machine off</value>
  </data>
  <data name="MissionInError" xml:space="preserve">
    <value>Missions in error...</value>
  </data>
  <data name="MissionsWmsNotActive" xml:space="preserve">
    <value>Wms missions present but wms not active</value>
  </data>
  <data name="MovementBayChainInProgress" xml:space="preserve">
    <value>Bay chain movement in progress...</value>
  </data>
  <data name="MovementElevatorInProgress" xml:space="preserve">
    <value>Elevator movement in progress...</value>
  </data>
  <data name="MovementHorizontalInProgress" xml:space="preserve">
    <value>Horizontal movement in progress...</value>
  </data>
  <data name="MovementInProgress" xml:space="preserve">
    <value>Movement in progress... {0}</value>
  </data>
  <data name="MovementInProgressExtended" xml:space="preserve">
    <value>Movement in progress... Mission: {0}, Loading unit: {1}, Status: {2}, Movement: from {3} {4}, to {5} {6})</value>
  </data>
  <data name="MovementLoadingUnitInProgress" xml:space="preserve">
    <value>Load unit movement in progress...</value>
  </data>
  <data name="MovementShutterInProgress" xml:space="preserve">
    <value>Shutter movement in progress ...</value>
  </data>
  <data name="MovementVerticalInProgress" xml:space="preserve">
    <value>Vertical movement in progress...</value>
  </data>
  <data name="NoLoadingUnitInBay" xml:space="preserve">
    <value>No loading unit present in the bay.</value>
  </data>
  <data name="NoZeroPawlSensor" xml:space="preserve">
    <value>No zero pawl sensor or loading unit presence.</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Position {0}</value>
  </data>
  <data name="ShutterOpenOrUnknowPosition" xml:space="preserve">
    <value>Shutter open or in unknown position.</value>
  </data>
  <data name="TestInProgress" xml:space="preserve">
    <value>Test in progress...</value>
  </data>
</root>