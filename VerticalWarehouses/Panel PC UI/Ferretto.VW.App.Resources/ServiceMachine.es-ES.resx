<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutomaticMissing" xml:space="preserve">
    <value>Falta Automático</value>
  </data>
  <data name="BayCalibrationNotPerformed" xml:space="preserve">
    <value>No se ha realizado la calibración de la bahía.</value>
  </data>
  <data name="CalibrationCarouselFailedChainNotZeroPosition" xml:space="preserve">
    <value>No se puede realizar la calibración del carrusel. \r\n La cadena de la bahía no está en la posición cero.</value>
  </data>
  <data name="CellBusy" xml:space="preserve">
    <value>Ocupado</value>
  </data>
  <data name="CellFree" xml:space="preserve">
    <value>Gratis</value>
  </data>
  <data name="HomingNotPerformed" xml:space="preserve">
    <value>El regreso a casa ha fallado.</value>
  </data>
  <data name="InconsistencyShutterPresenceSensor" xml:space="preserve">
    <value>Inconsistencia de los sensores de presencia del cajón en la bahía.</value>
  </data>
  <data name="InconsistencyStateAndSensors" xml:space="preserve">
    <value>Inconsistencia del estado de la carga y de los sensores.</value>
  </data>
  <data name="InconsistencyZeroPawlSensor" xml:space="preserve">
    <value>Inconsistencia sensor de trinquete a cero y presencia del cajón.</value>
  </data>
  <data name="LoadingUnitOnElevator" xml:space="preserve">
    <value>Presencia cajón en el elevador.</value>
  </data>
  <data name="LoadingUnitReady" xml:space="preserve">
    <value>Cajón listo para funcionar.</value>
  </data>
  <data name="LoadingUnitSuccessfullyRequested" xml:space="preserve">
    <value>La solicitud de cajón {0} se ha completado con éxito.</value>
  </data>
  <data name="LoadUnitOnBoardHasInvalidHeight" xml:space="preserve">
    <value>El cajón del elevador tiene una altura incorrecta</value>
  </data>
  <data name="MachineNotManual" xml:space="preserve">
    <value>La máquina no está en manual...</value>
  </data>
  <data name="MachineOff" xml:space="preserve">
    <value>Máquina apagada</value>
  </data>
  <data name="MissionInError" xml:space="preserve">
    <value>Misiones por error...</value>
  </data>
  <data name="MissionsWmsNotActive" xml:space="preserve">
    <value>Misiones de Wms presentes pero Wms no activo</value>
  </data>
  <data name="MovementBayChainInProgress" xml:space="preserve">
    <value>Movimiento de la cadena de la bahía en curso...</value>
  </data>
  <data name="MovementElevatorInProgress" xml:space="preserve">
    <value>Movimiento del elevador en curso...</value>
  </data>
  <data name="MovementHorizontalInProgress" xml:space="preserve">
    <value>Movimiento horizontal en curso...</value>
  </data>
  <data name="MovementInProgress" xml:space="preserve">
    <value>Movimiento en curso... {0}</value>
  </data>
  <data name="MovementInProgressExtended" xml:space="preserve">
    <value>Movimiento en curso... (Misión: {0}, Cajón: {1}, Estado: {2}, Movimiento: de {3} {4}, a {5} {6})</value>
  </data>
  <data name="MovementLoadingUnitInProgress" xml:space="preserve">
    <value>Movimiento de cajones en curso...</value>
  </data>
  <data name="MovementShutterInProgress" xml:space="preserve">
    <value>Movimiento de la compuerta en curso...</value>
  </data>
  <data name="MovementVerticalInProgress" xml:space="preserve">
    <value>Movimiento vertical en curso...</value>
  </data>
  <data name="NoLoadingUnitInBay" xml:space="preserve">
    <value>No hay cajones presentes en la bahía.</value>
  </data>
  <data name="NoZeroPawlSensor" xml:space="preserve">
    <value>No hay sensor de trinquete a cero o presencia de cajón.</value>
  </data>
  <data name="Position" xml:space="preserve">
    <value>Posición {0}</value>
  </data>
  <data name="ShutterOpenOrUnknowPosition" xml:space="preserve">
    <value>Compuerta abierta o en posición desconocida.</value>
  </data>
  <data name="TestInProgress" xml:space="preserve">
    <value>Pruebas en curso...</value>
  </data>
</root>