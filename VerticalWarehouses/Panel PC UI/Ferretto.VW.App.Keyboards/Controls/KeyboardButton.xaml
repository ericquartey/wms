<UserControl x:Class="Ferretto.VW.App.Keyboards.Controls.KeyboardButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ferretto.VW.App.Keyboards.Controls"
             xmlns:converters="clr-namespace:Ferretto.VW.App.Keyboards.Converters"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             mc:Ignorable="d"
             TouchUp="UserControl_TouchUp"
             PreviewMouseDoubleClick="UserControl_PreviewMouseDoubleClick"
             DataContext="{Binding Path=., RelativeSource={RelativeSource Mode=Self}}"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <Style TargetType="icons:PackIconFontAwesome">
            <Setter Property="Width" Value="24" />
            <Setter Property="Height" Value="24" />
        </Style>

        <converters:KeyboardCommandToContentConverter x:Key="KeyboardCommandToContentConverter" />
        <converters:NegateConverter x:Key="NegateConverter" />

        <Style TargetType="Button" x:Key="DefaultKeyboardButtonStyle"
               BasedOn="{StaticResource {x:Type Button}}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Width="{TemplateBinding Width}"
                                MinWidth="{TemplateBinding MinWidth}"
                                Height="{TemplateBinding Height}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource PpcCornerRadius}"
                                Cursor="Hand"
                                FlowDirection="LeftToRight">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="MinWidth" Value="{DynamicResource PpcButtonHeight}" />
            <Setter Property="MinHeight" Value="{DynamicResource PpcButtonHeight}" />
            <Setter Property="Background" Value="{DynamicResource PpcButtonBackground}" />
            <Setter Property="Foreground" Value="{DynamicResource PpcButtonForeground}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_Very_High}" />
            <Setter Property="BorderThickness" Value="{DynamicResource PpcBorderThickness}" />
            <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundPressed}" />
                    <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundPressed}" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundPressed}" />
                    <Setter Property="Foreground" Value="{DynamicResource PpcButtonForeground}" />
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundDisabled}" />
                    <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushDisabled}" />
                    <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundDisabled}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- accented overall style -->
        <Style TargetType="Button" x:Key="AccentKeyboardButtonStyle"
               BasedOn="{StaticResource DefaultKeyboardButtonStyle}">
            <Setter Property="Background" Value="{DynamicResource FerrettoBlack}" />
        </Style>

    </UserControl.Resources>
    <Button Focusable="False" x:Name="Btn"
            Margin="{Binding Path=Padding, Converter={StaticResource NegateConverter}}"
            Padding="{Binding Path=Padding}"
            Style="{StaticResource DefaultKeyboardButtonStyle}">
        <ContentControl Content="{Binding Path=KeyCommand, Converter={StaticResource KeyboardCommandToContentConverter}}" />
    </Button>
</UserControl>
