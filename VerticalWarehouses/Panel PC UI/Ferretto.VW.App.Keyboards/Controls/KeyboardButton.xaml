<UserControl x:Class="Ferretto.VW.App.Keyboards.Controls.KeyboardButton"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:converters="clr-namespace:Ferretto.VW.App.Keyboards.Converters"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:Ferretto.VW.App.Keyboards.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="450"
             d:DesignWidth="800"
             DataContext="{Binding Path=., RelativeSource={RelativeSource Mode=Self}}"
             PreviewMouseLeftButtonDown="UserControl_PreviewMouseLeftButtonDown"
             TouchDown="UserControl_TouchUp"
             mc:Ignorable="d">
  <UserControl.Resources>
    <Style TargetType="icons:PackIconFontAwesome">
      <Setter Property="Width" Value="24" />
      <Setter Property="Height" Value="24" />
    </Style>

    <converters:KeyboardCommandToContentConverter x:Key="KeyboardCommandToContentConverter" />
    <converters:NegateConverter x:Key="NegateConverter" />

    <Style x:Key="DefaultKeyboardButtonStyle"
           BasedOn="{StaticResource {x:Type Button}}"
           TargetType="Button">
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type Button}">
            <Border Width="{TemplateBinding Width}"
                    Height="{TemplateBinding Height}"
                    MinWidth="{TemplateBinding MinWidth}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="{DynamicResource PpcCornerRadius}"
                    Cursor="Hand"
                    FlowDirection="LeftToRight">
              <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>

      <Setter Property="MinWidth" Value="{DynamicResource PpcButtonHeight}" />
      <Setter Property="MinHeight" Value="{DynamicResource PpcButtonHeight}" />
      <Setter Property="Background" Value="{DynamicResource PpcButtonBackground}" />
      <Setter Property="Foreground" Value="{DynamicResource PpcButtonForeground}" />
      <Setter Property="FontSize" Value="{DynamicResource FontSize_Very_High}" />
      <Setter Property="BorderThickness" Value="{DynamicResource PpcBorderThickness}" />
      <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
      <Setter Property="VerticalAlignment" Value="Stretch" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Center" />
      <Setter Property="HorizontalContentAlignment" Value="Center" />

      <Style.Triggers>
        <Trigger Property="IsMouseOver" Value="True">
          <Setter Property="Background" Value="{DynamicResource KeyboardButtonBackgroundPressed}" />
          <Setter Property="Foreground" Value="{DynamicResource KeyboardButtonForegroundPressed}" />
          <Setter Property="Cursor" Value="Hand" />
        </Trigger>
        <Trigger Property="IsPressed" Value="True">
          <Setter Property="Background" Value="{DynamicResource KeyboardButtonBackgroundPressed}" />
          <Setter Property="Foreground" Value="{DynamicResource PpcButtonForeground}" />
          <Setter Property="Cursor" Value="Hand" />
        </Trigger>
        <Trigger Property="IsEnabled" Value="False">
          <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundDisabled}" />
          <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushDisabled}" />
          <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundDisabled}" />
        </Trigger>
      </Style.Triggers>
    </Style>

    <!--  accented overall style  -->
    <Style x:Key="AccentKeyboardButtonStyle"
           BasedOn="{StaticResource DefaultKeyboardButtonStyle}"
           TargetType="Button">
      <Setter Property="Background" Value="{DynamicResource AccentKeyboardButtonColor}" />
    </Style>

  </UserControl.Resources>
  <Button x:Name="Btn"
          Margin="{Binding Path=Padding, Converter={StaticResource NegateConverter}}"
          Padding="{Binding Path=Padding}"
          Focusable="False"
          Style="{StaticResource DefaultKeyboardButtonStyle}">
    <ContentControl Content="{Binding Path=KeyCommand, Converter={StaticResource KeyboardCommandToContentConverter}}" />
  </Button>
</UserControl>
