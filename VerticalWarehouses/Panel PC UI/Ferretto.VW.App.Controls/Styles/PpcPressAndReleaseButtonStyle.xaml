<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Ferretto.VW.App.Controls.Controls"
                    xmlns:converters="clr-namespace:Ferretto.VW.App.Controls.Converters"
                    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:res="clr-namespace:Ferretto.VW.App.Resources;assembly=Ferretto.VW.App.Resources"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <Style x:Key="PpcPressAndReleaseButtonStyle"
           TargetType="{x:Type controls:PpcPressAndReleaseButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:PpcPressAndReleaseButton}">
                    <ControlTemplate.Resources>
                        <BooleanToVisibilityConverter x:Key="BTVC" />
                        <converters:ReferenceToVisibilityConverter x:Key="RTVC" />
                        <converters:ReferenceToHorizontalAlignmentConverter x:Key="RTAC" />
                        <converters:ReferenceToVisibilityConverter x:Key="RTVIC"
                                                                   Invert="True" />
                    </ControlTemplate.Resources>
                    <Grid>
                        <Border Name="PpcButton_Border"
                                Width="{TemplateBinding Width}"
                                Height="{TemplateBinding Height}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource PpcCornerRadius}"
                                Cursor="Hand"
                                FlowDirection="LeftToRight">
                            <!--<Border.Effect>
                                <DropShadowEffect BlurRadius="6"
                                                  Opacity="0.5"
                                                  RenderingBias="Quality"
                                                  ShadowDepth="3"
                                                  Color="{DynamicResource VWAPP_ShadowEffect_Color}" />
                            </Border.Effect>-->
                        </Border>

                        <Border Margin="1"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{x:Null}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{DynamicResource PpcCornerRadius}">

                            <Grid x:Name="PpcButton_Grid"
                                  Margin="{DynamicResource PpcButtonBorderThicknessActive}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock x:Name="PpcButton_Text"
                                           Grid.Column="0"
                                           Margin="5"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="{DynamicResource FontSize_Normal}"
                                           Foreground="{TemplateBinding Foreground}"
                                           Text="{Binding Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:PpcPressAndReleaseButton}}}"
                                           TextWrapping="Wrap">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="TextAlignment" Value="Center" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Visibility, ElementName=PpcButton_Icon}"
                                                             Value="Visible">
                                                    <Setter Property="TextAlignment" Value="Left" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <icon:PackIconMaterial x:Name="PpcButton_Icon"
                                                       Grid.Column="1"
                                                       Width="24"
                                                       Height="24"
                                                       Margin="5"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"
                                                       Foreground="{TemplateBinding BorderBrush}"
                                                       Kind="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}"
                                                       Tag="{Binding Kind, RelativeSource={RelativeSource TemplatedParent}}">
                                    <icon:PackIconMaterial.Style>
                                        <Style TargetType="{x:Type icon:PackIconMaterial}">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <Trigger Property="Tag" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </icon:PackIconMaterial.Style>
                                </icon:PackIconMaterial>
                            </Grid>
                        </Border>
                    </Grid>

                    <!--<ControlTemplate.Triggers>
                        <Trigger Property="IsActive" Value="True">
                            <Setter TargetName="PpcButton_Border" Property="BorderThickness" Value="{DynamicResource PpcButtonBorderThicknessActive}" />
                            <Setter TargetName="PpcButton_Grid" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PpcButton_Border" Property="BorderThickness" Value="{DynamicResource PpcButtonBorderThicknessActive}" />
                            <Setter TargetName="PpcButton_Grid" Property="Margin" Value="0" />
                        </Trigger>
                    </ControlTemplate.Triggers>-->
                </ControlTemplate>

            </Setter.Value>
        </Setter>

        <Setter Property="Width" Value="{DynamicResource PpcButtonWidth}" />
        <Setter Property="Height" Value="{DynamicResource PpcButtonHeight}" />
        <Setter Property="Background" Value="{DynamicResource PpcButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource PpcButtonForeground}" />
        <Setter Property="FontSize" Value="{StaticResource FontSize_Small}" />
        <Setter Property="BorderThickness" Value="{DynamicResource PpcBorderThickness}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />

        <Style.Triggers>
            <!--<DataTrigger Binding="{Binding IsActive}"
                         Value="True">
                <Setter Property="BorderThickness" Value="{DynamicResource PpcButtonBorderThicknessActive}" />
            </DataTrigger>-->
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundPressed}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushPressed}" />
                <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundPressed}" />
                <!--<Setter Property="BorderThickness" Value="{DynamicResource PpcButtonBorderThicknessActive}" />-->
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushDisabled}" />
                <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundDisabled}" />
            </Trigger>
        </Style.Triggers>

    </Style>


</ResourceDictionary>
