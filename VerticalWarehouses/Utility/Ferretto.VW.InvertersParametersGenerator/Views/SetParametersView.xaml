<UserControl x:Class="Ferretto.VW.InvertersParametersGenerator.Views.SetParametersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:controls="clr-namespace:Ferretto.VW.InvertersParametersGenerator.Controls"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:res="clr-namespace:Ferretto.VW.InvertersParametersGenerator.Properties"
             xmlns:viewmodels="clr-namespace:Ferretto.VW.InvertersParametersGenerator.ViewModels"
             d:DataContext="{d:DesignInstance Type=viewmodels:ExportConfigurationViewModel,
                                              IsDesignTimeCreatable=False}"
             mc:Ignorable="d">

  <UserControl.Resources>

    <Color x:Key="VWAPP_DataGrid_CellStyle_HighlightBrushKey">#707173</Color>
    <Color x:Key="VWAPP_DataGrid_CellStyle_ControlBrushKey">#707173</Color>
    <Color x:Key="VWAPP_DataGrid_CellStyle_InactiveSelectionHighlightBrushKey">#707173</Color>
    <Color x:Key="VWAPP_DataGrid_CellStyle_HighlightTextBrushKey">#ffffff</Color>
    <Color x:Key="VWAPP_DataGrid_CellStyle_ControlTextBrushKey">#ffffff</Color>
    <Color x:Key="VWAPP_DataGrid_CellStyle_InactiveSelectionHighlightTextBrushKey">#ffffff</Color>
    <SolidColorBrush x:Key="VWAPP_DataGrid_CellStyle_HighlightMarkBrushKey"
                     Color="#00CDE2" />

    <Style x:Key="CellBorderStyle"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="1,0,0,0" />
      <Setter Property="Padding" Value="10,5" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="VerticalAlignment" Value="Stretch" />
      <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="FirstCellBorderStyle"
           BasedOn="{StaticResource CellBorderStyle}"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="0" />
    </Style>

    <Style x:Key="CellTextBlockStyle"
           TargetType="TextBlock">
      <Setter Property="VerticalAlignment" Value="Center" />
      <Setter Property="TextTrimming" Value="CharacterEllipsis" />
      <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Mode=Self}}" />
    </Style>

    <Style TargetType="{x:Type GridViewColumnHeader}">
      <Setter Property="Background" Value="{x:Null}" />
      <Setter Property="Foreground" Value="{DynamicResource FerrettoPureWhite}" />
      <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="BorderThickness" Value="0,0,0,1" />
      <Setter Property="Padding" Value="10,5" />
      <Setter Property="Margin" Value="-2,0" />
      <Setter Property="Height" Value="32" />
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
            <Border Background="Transparent"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <TextBlock x:Name="ContentHeader"
                         Width="{TemplateBinding Width}"
                         Padding="{TemplateBinding Padding}"
                         VerticalAlignment="Center"
                         Foreground="{TemplateBinding Foreground}"
                         Text="{TemplateBinding Content}"
                         TextAlignment="Center" />
            </Border>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>

    <Style x:Key="ListBoxItemBorder"
           TargetType="Border">
      <Setter Property="BorderThickness" Value="0,0,0,1" />
      <Setter Property="CornerRadius" Value="0" />
      <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>

    <Style TargetType="{x:Type ListView}">
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="ScrollViewer.PanningMode" Value="Both" />
      <Setter Property="Background" Value="{x:Null}" />
      <Setter Property="BorderBrush" Value="{DynamicResource FerrettoMediumGray}" />
      <Setter Property="BorderThickness" Value="1" />
      <Setter Property="ItemContainerStyle">
        <Setter.Value>
          <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="Margin" Value="0" />
            <Setter Property="Height" Value="100" />
            <Setter Property="Foreground" Value="{DynamicResource FerrettoLightGray}" />
            <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
            <Setter Property="FontSize" Value="{DynamicResource FontSize_Normal}" />
            <Setter Property="VerticalContentAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="Template">
              <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                  <Border Name="border"
                          Background="{TemplateBinding Background}"
                          BorderBrush="{DynamicResource FerrettoMediumGray}"
                          Style="{StaticResource ListBoxItemBorder}">
                    <Grid>
                      <GridViewRowPresenter />
                      <ProgressBar Margin="0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Stretch"
                                   Background="{TemplateBinding Background}"
                                   BorderBrush="{TemplateBinding BorderBrush}"
                                   Foreground="{DynamicResource PpcButtonForeground}"
                                   IsHitTestVisible="False"
                                   IsIndeterminate="True"
                                   Opacity="0.2">
                        <ProgressBar.Visibility>
                          <MultiBinding Converter="{StaticResource MBTUI}">
                            <Binding Path="DataContext.IsBusy"
                                     RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                     AncestorType=UserControl}" />
                            <Binding Path="IsSelected"
                                     RelativeSource="{RelativeSource Mode=FindAncestor,
                                                                     AncestorType=ListViewItem}" />
                          </MultiBinding>
                        </ProgressBar.Visibility>
                      </ProgressBar>
                    </Grid>
                  </Border>
                </ControlTemplate>
              </Setter.Value>
            </Setter>

            <Style.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsSelected" Value="True" />
                  <Condition Property="Selector.IsSelectionActive" Value="true" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FerrettoPureWhite}" />
                <Setter Property="Background" Value="{DynamicResource FerrettoMediumGray}" />
              </MultiTrigger>
              <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                  <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=Self}}" Value="True" />
                  <Condition Binding="{Binding Path=DataContext.IsBusy, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource PpcButtonBackgroundDisabled}" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrushDisabled}" />
                <Setter Property="Foreground" Value="{DynamicResource PpcButtonForegroundDisabled}" />
              </MultiDataTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsEnabled" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource FerrettoMediumGray}" />
              </MultiTrigger>
            </Style.Triggers>
          </Style>
        </Setter.Value>
      </Setter>
      <Setter Property="Template">
        <Setter.Value>
          <ControlTemplate TargetType="{x:Type ListView}">
            <Border Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="0"
                    SnapsToDevicePixels="true">
              <ScrollViewer Padding="{TemplateBinding Padding}"
                            Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
            <ControlTemplate.Triggers>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="IsGrouping" Value="true" />
                  <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
              </MultiTrigger>
            </ControlTemplate.Triggers>
          </ControlTemplate>
        </Setter.Value>
      </Setter>
    </Style>
  </UserControl.Resources>

  <Grid>
    <Grid.RowDefinitions>
      <RowDefinition Height="Auto" />
      <RowDefinition Height="*" />
      <RowDefinition Height="Auto" />
    </Grid.RowDefinitions>

    <TextBlock HorizontalAlignment="Left"
               VerticalAlignment="Top"
               FontSize="36"
               Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
               Text="{Binding Title}" />

    <Grid Name="ParametersTxtFilesGrid"
          Grid.Row="1"
          Margin="30"
          Visibility="{Binding IsParametersSet, Converter={StaticResource BTVIC}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <StackPanel Orientation="Horizontal">
        <TextBlock HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                   Text="{x:Static res:Resources.SearchPattern}"
                   Visibility="{Binding SelectedFile, Converter={StaticResource RTVIC}}" />

        <TextBlock Padding="10,0,20,0"
                   HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                   Visibility="{Binding SelectedFile, Converter={StaticResource RTVIC}}">
          <Run Text="'" />
          <Run Text="{Binding Pattern}" />
          <Run Text="'." />
        </TextBlock>

        <TextBlock HorizontalAlignment="Left"
                   VerticalAlignment="Top"
                   Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                   Text="{x:Static res:Resources.SelectFile}"
                   Visibility="{Binding SelectedFile, Converter={StaticResource RTVIC}}" />
      </StackPanel>

      <TextBlock HorizontalAlignment="Left"
                 VerticalAlignment="Top"
                 Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                 Text="{Binding SelectedFile.Name}"
                 Visibility="{Binding SelectedFile.Name, Converter={StaticResource RTVC}}" />

      <ListView Grid.Row="1"
                ItemsSource="{Binding ConfigurationFiles}"
                SelectedValue="{Binding SelectedFile, Mode=TwoWay}">
        <ListView.View>
          <GridView>
            <GridViewColumn Width="350"
                            Header="File">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Border Style="{StaticResource FirstCellBorderStyle}">
                    <TextBlock Style="{StaticResource CellTextBlockStyle}"
                               Text="{Binding Path=Name}" />
                  </Border>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
            <GridViewColumn Width="550">
              <GridViewColumn.CellTemplate>
                <DataTemplate>
                  <Border Style="{StaticResource CellBorderStyle}">
                    <TextBlock FontStyle="Italic"
                               Style="{StaticResource CellTextBlockStyle}"
                               Text="{Binding Path=FullName}"
                               TextWrapping="WrapWithOverflow" />
                  </Border>
                </DataTemplate>
              </GridViewColumn.CellTemplate>
            </GridViewColumn>
          </GridView>
        </ListView.View>
      </ListView>
    </Grid>

    <Grid Name="ParametersSetGrid"
          Grid.Row="1"
          Margin="30"
          Visibility="{Binding IsParametersSet, Converter={StaticResource BTVC}}">
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
      </Grid.RowDefinitions>

      <StackPanel Orientation="Horizontal">
        <TextBlock Margin="0,0,0,0"
                   HorizontalAlignment="Left"
                   Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                   Text="{Binding SelectedFile.Name}" />

        <TextBlock Margin="20,0,0,0"
                   Style="{StaticResource VWAPP_ViewTitleTextBlockStyle}"
                   Text="{Binding TotalParameters}" />
      </StackPanel>

      <DataGrid Name="DataGrid"
                Grid.Row="1"
                Height="430"
                AutoGenerateColumns="False"
                BorderThickness="0"
                CanUserReorderColumns="False"
                CanUserResizeColumns="False"
                CanUserResizeRows="False"
                CanUserSortColumns="False"
                FontSize="{StaticResource FontSize_High}"
                HeadersVisibility="Column"
                IsReadOnly="True"
                ItemsSource="{Binding InverterParameters}"
                RowHeight="30"
                ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                SelectionMode="Single"
                VerticalScrollBarVisibility="Auto">

        <DataGrid.Template>
          <ControlTemplate TargetType="{x:Type DataGrid}">
            <Border Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
              <ScrollViewer x:Name="DG_ScrollViewer"
                            Focusable="false">
                <ScrollViewer.Template>
                  <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                      </Grid.ColumnDefinitions>
                      <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                      </Grid.RowDefinitions>
                      <Button Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"
                              Command="{x:Static DataGrid.SelectAllCommand}"
                              Focusable="false"
                              Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle,
                                                                            TypeInTargetAssembly={x:Type DataGrid}}}"
                              Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                      <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                      Grid.Column="1"
                                                      Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                      <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                              Grid.Row="1"
                                              Grid.ColumnSpan="2"
                                              CanContentScroll="{TemplateBinding CanContentScroll}" />
                      <ScrollBar x:Name="PART_VerticalScrollBar"
                                 Grid.Row="1"
                                 Grid.Column="2"
                                 Maximum="{TemplateBinding ScrollableHeight}"
                                 Orientation="Vertical"
                                 Style="{DynamicResource MyScrollBar}"
                                 ViewportSize="{TemplateBinding ViewportHeight}"
                                 Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                 Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      <Grid Grid.Row="2"
                            Grid.Column="1">
                        <Grid.ColumnDefinitions>
                          <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                          <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Grid.Column="1"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   Orientation="Horizontal"
                                   Style="{DynamicResource MyScrollBar}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                      </Grid>
                    </Grid>
                  </ControlTemplate>
                </ScrollViewer.Template>
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
              </ScrollViewer>
            </Border>
          </ControlTemplate>
        </DataGrid.Template>

        <DataGrid.Columns>
          <DataGridTextColumn x:Name="Column1"
                              Width="0.5*"
                              Binding="{Binding Path=Code}"
                              Header="{x:Static res:Resources.InverterParametersId}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Height" Value="40" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="1,0,0,0" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.CellStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn x:Name="Column2"
                              Width="0.5*"
                              Binding="{Binding Path=DataSet}"
                              Header="{x:Static res:Resources.InverterParametersDataset}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource VWAPP_ViewBodyTextBlock_Foreground_Normal}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.CellStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn x:Name="Column3"
                              Width="0.7*"
                              Binding="{Binding Path=Type}"
                              Header="{x:Static res:Resources.InverterParametersType}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource VWAPP_ViewBodyTextBlock_Foreground_Normal}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.CellStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn x:Name="Column4"
                              Width="1*"
                              Binding="{Binding Path=StringValue}"
                              Header="{x:Static res:Resources.InverterParametersValue}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource VWAPP_ViewBodyTextBlock_Foreground_Normal}" />
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.CellStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
          <DataGridTextColumn x:Name="Column5"
                              Width="100"
                              Binding="{Binding Path=IsReadOnly}"
                              Header="{x:Static res:Resources.IsReadOnly}">
            <DataGridTextColumn.HeaderStyle>
              <Style TargetType="DataGridColumnHeader">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="Background" Value="{DynamicResource VWAPP_BACKGROUND}" />
                <Setter Property="Foreground" Value="{DynamicResource VWAPP_ViewBodyTextBlock_Foreground_Normal}" />
              </Style>
            </DataGridTextColumn.HeaderStyle>
            <DataGridTextColumn.CellStyle>
              <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="BorderBrush" Value="{DynamicResource PpcButtonBorderBrush}" />
              </Style>
            </DataGridTextColumn.CellStyle>
            <DataGridTextColumn.ElementStyle>
              <Style TargetType="TextBlock">
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
              </Style>
            </DataGridTextColumn.ElementStyle>
          </DataGridTextColumn>
        </DataGrid.Columns>
      </DataGrid>
    </Grid>

    <controls:PpcButton Grid.Row="2"
                        Width="130"
                        Height="60"
                        Margin="0,0,30,0"
                        HorizontalAlignment="Right"
                        Command="{Binding LoadFileCommand}"
                        Content="{x:Static res:Resources.Import}"
                        IsBusy="{Binding IsBusy}"
                        Visibility="{Binding IsParametersSet, Converter={StaticResource BTVIC}}" />
  </Grid>
</UserControl>
