//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ferretto.VW.MAS.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Elevator {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Elevator() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ferretto.VW.MAS.Resources.Elevator", typeof(Elevator).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A loading unit is already present on board of the elevator..
        /// </summary>
        public static string ALoadingUnitIsAlreadyOnBoardOfTheElevator {
            get {
                return ResourceManager.GetString("ALoadingUnitIsAlreadyOnBoardOfTheElevator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A loading unit is already present in the specified bay position..
        /// </summary>
        public static string ALoadingUnitIsAlreadyPresentInTheSpecifiedBayPosition {
            get {
                return ResourceManager.GetString("ALoadingUnitIsAlreadyPresentInTheSpecifiedBayPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The horizontal axis homing parameters are invalid.
        /// </summary>
        public static string HorizontalHomingParametersError {
            get {
                return ResourceManager.GetString("HorizontalHomingParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Movement distance cannot be zero..
        /// </summary>
        public static string MovementDistanceCannotBeZero {
            get {
                return ResourceManager.GetString("MovementDistanceCannotBeZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No loading unit is on board of the elevator..
        /// </summary>
        public static string NoLoadingUnitIsOnBoardOfTheElevator {
            get {
                return ResourceManager.GetString("NoLoadingUnitIsOnBoardOfTheElevator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No loading unit is present in the specified bay position..
        /// </summary>
        public static string NoLoadingUnitIsPresentInTheSpecifiedBayPosition {
            get {
                return ResourceManager.GetString("NoLoadingUnitIsPresentInTheSpecifiedBayPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No loading unit is present in the specified cell..
        /// </summary>
        public static string NoLoadingUnitIsPresentInTheSpecifiedCell {
            get {
                return ResourceManager.GetString("NoLoadingUnitIsPresentInTheSpecifiedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No loading unit is waiting to be extracted in the specified bay position..
        /// </summary>
        public static string NoMissionIsWaitingInTheSpecifiedBayPosition {
            get {
                return ResourceManager.GetString("NoMissionIsWaitingInTheSpecifiedBayPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical axis offset ({0}mm) not valid: must be in the range [{1}mm; {2}mm]..
        /// </summary>
        public static string OffsetOutOfBounds {
            get {
                return ResourceManager.GetString("OffsetOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target position ({0}mm) must be in the range [{1}mm; {2}mm]..
        /// </summary>
        public static string TargetPositionOutOfBounds {
            get {
                return ResourceManager.GetString("TargetPositionOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is already located opposite to the specified bay position..
        /// </summary>
        public static string TheElevatorIsAlreadyLocatedOppositeToTheSpecifiedBayPosition {
            get {
                return ResourceManager.GetString("TheElevatorIsAlreadyLocatedOppositeToTheSpecifiedBayPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is already located opposite to the specified cell..
        /// </summary>
        public static string TheElevatorIsAlreadyLocatedOppositeToTheSpecifiedCell {
            get {
                return ResourceManager.GetString("TheElevatorIsAlreadyLocatedOppositeToTheSpecifiedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is not empty, but the pawl is in zero position..
        /// </summary>
        public static string TheElevatorIsNotEmptyButThePawlIsInZeroPosition {
            get {
                return ResourceManager.GetString("TheElevatorIsNotEmptyButThePawlIsInZeroPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is not full, but the pawl is not in zero position..
        /// </summary>
        public static string TheElevatorIsNotFullButThePawlIsNotInZeroPosition {
            get {
                return ResourceManager.GetString("TheElevatorIsNotFullButThePawlIsNotInZeroPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is not located opposite to the specified bay position..
        /// </summary>
        public static string TheElevatorIsNotLocatedOppositeToTheSpecifiedBayPosition {
            get {
                return ResourceManager.GetString("TheElevatorIsNotLocatedOppositeToTheSpecifiedBayPosition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The elevator is not located opposite to the specified cell..
        /// </summary>
        public static string TheElevatorIsNotLocatedOppositeToTheSpecifiedCell {
            get {
                return ResourceManager.GetString("TheElevatorIsNotLocatedOppositeToTheSpecifiedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The loading unit does not fit in the specified cell..
        /// </summary>
        public static string TheLoadingUnitDoesNotFitInTheSpecifiedCell {
            get {
                return ResourceManager.GetString("TheLoadingUnitDoesNotFitInTheSpecifiedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The vertical compensation distance is out of bounds.
        /// </summary>
        public static string VerticalCompensationDistanceOutOfBounds {
            get {
                return ResourceManager.GetString("VerticalCompensationDistanceOutOfBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The vertical axis homing parameters are invalid.
        /// </summary>
        public static string VerticalHomingParametersError {
            get {
                return ResourceManager.GetString("VerticalHomingParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Vertical origin calibration must be performed before attempting to move the elevator to a given position..
        /// </summary>
        public static string VerticalOriginCalibrationMustBePerformed {
            get {
                return ResourceManager.GetString("VerticalOriginCalibrationMustBePerformed", resourceCulture);
            }
        }
    }
}
