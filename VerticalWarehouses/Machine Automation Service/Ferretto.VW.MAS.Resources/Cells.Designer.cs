//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Ferretto.VW.MAS.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Cells {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Cells() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Ferretto.VW.MAS.Resources.Cells", typeof(Cells).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NoEmptyCellsAvailable.
        /// </summary>
        public static string NoEmptyCellsAvailable {
            get {
                return ResourceManager.GetString("NoEmptyCellsAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cell already contains another loading unit..
        /// </summary>
        public static string TheCellAlreadyContainsAnotherLoadingUnit {
            get {
                return ResourceManager.GetString("TheCellAlreadyContainsAnotherLoadingUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cell is not free..
        /// </summary>
        public static string TheCellIsNotFree {
            get {
                return ResourceManager.GetString("TheCellIsNotFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cell is unexpectedly free..
        /// </summary>
        public static string TheCellIsUnexpectedlyFree {
            get {
                return ResourceManager.GetString("TheCellIsUnexpectedlyFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The cell unexpectedly contains another loading unit..
        /// </summary>
        public static string TheCellUnexpectedlyContainsAnotherLoadingUnit {
            get {
                return ResourceManager.GetString("TheCellUnexpectedlyContainsAnotherLoadingUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tray cannot be placed in front of a deactivated cell..
        /// </summary>
        public static string TheLoadingCannotBePlacedOppositeADeactivatedCell {
            get {
                return ResourceManager.GetString("TheLoadingCannotBePlacedOppositeADeactivatedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The loading unit cannot occupy a blocked cell..
        /// </summary>
        public static string TheLoadingCannotOccupyABlockedCell {
            get {
                return ResourceManager.GetString("TheLoadingCannotOccupyABlockedCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The loading unit is already located in another cell..
        /// </summary>
        public static string TheLoadingUnitIsAlreadyLocatedInAnotherCell {
            get {
                return ResourceManager.GetString("TheLoadingUnitIsAlreadyLocatedInAnotherCell", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified cell cannot fit the load unit.
        /// </summary>
        public static string TheSpecifiedCellCannotFitTheLoadUnit {
            get {
                return ResourceManager.GetString("TheSpecifiedCellCannotFitTheLoadUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified cell is not within the elevator&apos;s vertical bounds..
        /// </summary>
        public static string TheSpecifiedCellIsNotWithinTheElevatorVerticalBounds {
            get {
                return ResourceManager.GetString("TheSpecifiedCellIsNotWithinTheElevatorVerticalBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified height is not between the adjacent cells&apos; heights..
        /// </summary>
        public static string TheSpecifiedHeightIsNotBetweenTheAdjacentCellsHeights {
            get {
                return ResourceManager.GetString("TheSpecifiedHeightIsNotBetweenTheAdjacentCellsHeights", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Specified height is out of the elevator vertical bounds.
        /// </summary>
        public static string TheSpecifiedHeightIsNotWithinTheElevatorVerticalBounds {
            get {
                return ResourceManager.GetString("TheSpecifiedHeightIsNotWithinTheElevatorVerticalBounds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified height would cause the panel to overlap with other panels..
        /// </summary>
        public static string TheSpecifiedHeightWouldCauseThePanelToOverlapWithOtherPanels {
            get {
                return ResourceManager.GetString("TheSpecifiedHeightWouldCauseThePanelToOverlapWithOtherPanels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target cell is blocked..
        /// </summary>
        public static string TheTargetCellIsBlocked {
            get {
                return ResourceManager.GetString("TheTargetCellIsBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target cell is disabled..
        /// </summary>
        public static string TheTargetCellIsDeactivated {
            get {
                return ResourceManager.GetString("TheTargetCellIsDeactivated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target cell is space only, it cannot support a load unit..
        /// </summary>
        public static string TheTargetCellIsSpaceOnly {
            get {
                return ResourceManager.GetString("TheTargetCellIsSpaceOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target cell is unusable..
        /// </summary>
        public static string TheTargetCellIsUnusable {
            get {
                return ResourceManager.GetString("TheTargetCellIsUnusable", resourceCulture);
            }
        }
    }
}
