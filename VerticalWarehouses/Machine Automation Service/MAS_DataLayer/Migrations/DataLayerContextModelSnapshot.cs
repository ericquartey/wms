// <auto-generated />
using System;
using Ferretto.VW.MAS.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Ferretto.VW.MAS_DataLayer.Migrations
{
    [DbContext(typeof(DataLayerContext))]
    partial class DataLayerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.Cell", b =>
                {
                    b.Property<int>("CellId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Coord");

                    b.Property<int>("LoadingUnitId");

                    b.Property<int>("Priority");

                    b.Property<int>("Side");

                    b.Property<int>("Status");

                    b.Property<int>("WorkingStatus");

                    b.HasKey("CellId");

                    b.HasIndex("LoadingUnitId");

                    b.ToTable("Cells");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.ConfigurationValue", b =>
                {
                    b.Property<long>("CategoryName");

                    b.Property<long>("VarName");

                    b.Property<long>("VarType");

                    b.Property<string>("VarValue");

                    b.HasKey("CategoryName", "VarName");

                    b.ToTable("ConfigurationValues");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.FreeBlock", b =>
                {
                    b.Property<int>("FreeBlockId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BlockSize");

                    b.Property<int>("BookedCellsNumber");

                    b.Property<decimal>("Coord");

                    b.Property<int>("LoadingUnitId");

                    b.Property<int>("Priority");

                    b.Property<int>("Side");

                    b.Property<int>("StartCell");

                    b.HasKey("FreeBlockId");

                    b.HasIndex("LoadingUnitId");

                    b.ToTable("FreeBlocks");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.LoadingUnit", b =>
                {
                    b.Property<int>("LoadingUnitId")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("CellPosition");

                    b.Property<string>("Description");

                    b.Property<decimal>("Height");

                    b.Property<decimal>("MaxWeight");

                    b.Property<long>("Status");

                    b.Property<decimal>("Weight");

                    b.HasKey("LoadingUnitId");

                    b.ToTable("LoadingUnits");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.LogEntry", b =>
                {
                    b.Property<int>("LogEntryID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data");

                    b.Property<string>("Description");

                    b.Property<string>("Destination");

                    b.Property<string>("ErrorLevel");

                    b.Property<string>("Exception");

                    b.Property<string>("Level");

                    b.Property<string>("LoggerName");

                    b.Property<string>("Message");

                    b.Property<string>("Source");

                    b.Property<string>("Status");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<string>("Type");

                    b.HasKey("LogEntryID");

                    b.ToTable("LogEntries");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.MachineStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("TotalBeltCycles");

                    b.Property<int>("TotalMovedTrays");

                    b.Property<int>("TotalMovedTraysInBay1");

                    b.Property<int>("TotalMovedTraysInBay2");

                    b.Property<int>("TotalMovedTraysInBay3");

                    b.Property<int>("TotalShutter1Cycles");

                    b.Property<int>("TotalShutter2Cycles");

                    b.Property<int>("TotalShutter3Cycles");

                    b.Property<int>("TotalVerticalAxisCycles");

                    b.Property<double>("TotalVerticalAxisKilometers");

                    b.HasKey("Id");

                    b.ToTable("MachineStatistics");

                    b.HasData(
                        new { Id = 1, TotalBeltCycles = 0, TotalMovedTrays = 0, TotalMovedTraysInBay1 = 0, TotalMovedTraysInBay2 = 0, TotalMovedTraysInBay3 = 0, TotalShutter1Cycles = 0, TotalShutter2Cycles = 0, TotalShutter3Cycles = 0, TotalVerticalAxisCycles = 0, TotalVerticalAxisKilometers = 0.0 }
                    );
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.RuntimeValue", b =>
                {
                    b.Property<long>("CategoryName");

                    b.Property<long>("VarName");

                    b.Property<long>("VarType");

                    b.Property<string>("VarValue");

                    b.HasKey("CategoryName", "VarName");

                    b.ToTable("RuntimeValues");
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.Cell", b =>
                {
                    b.HasOne("Ferretto.VW.MAS.DataModels.LoadingUnit", "LoadingUnit")
                        .WithMany("Cells")
                        .HasForeignKey("LoadingUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Ferretto.VW.MAS.DataModels.FreeBlock", b =>
                {
                    b.HasOne("Ferretto.VW.MAS.DataModels.LoadingUnit", "LoadingUnit")
                        .WithMany("FreeBlocks")
                        .HasForeignKey("LoadingUnitId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
