<Window x:Class="Ferretto.VW.VerticalWarehousesApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Ferretto.VW.VerticalWarehousesApp"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="MainWindow"
        Width="1024"
        Height="768"
        Background="Gray"
        Loaded="VMLoaded"
        mc:Ignorable="d">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeDashArray="1 2"
                                   StrokeThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFF0F0F0" />
            <GradientStop Offset="1.0" Color="#FFE5E5E5" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border"
                         Color="#FFACACAC" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border"
                         Color="#FFABADB3" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"
                         Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFECF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border"
                         Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border"
                         Color="#FF7EB4EA" />
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFEBF4FC" />
            <GradientStop Offset="1.0" Color="#FFDCECFC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border"
                         Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"
                         Color="#FF000000" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAECFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border"
                         Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border"
                         Color="#FF569DE5" />
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Offset="0.0" Color="#FFDAEBFC" />
            <GradientStop Offset="1.0" Color="#FFC4E0FC" />
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border"
                         Color="#FF569DE5" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"
                         Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Background"
                         Color="#FFF0F0F0" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Border"
                         Color="#FFD9D9D9" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border"
                         Color="#FFBFBFBF" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border"
                         Color="Transparent" />
        <SolidColorBrush x:Key="ComboBox.Static.Glyph"
                         Color="#FF606060" />
        <Style x:Key="ComboBoxToggleButton"
               TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="ClickMode" Value="Press" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot"
                                Background="Transparent"
                                BorderBrush="{StaticResource ComboBox.Static.Border}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder"
                                    Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                    Margin="0"
                                    HorizontalAlignment="Right"
                                    BorderBrush="Transparent"
                                    BorderThickness="1"
                                    SnapsToDevicePixels="true">
                                <Path x:Name="arrow"
                                      Margin="0"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z"
                                      Fill="{StaticResource ComboBox.Static.Glyph}" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Static.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Static.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.MouseOver.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Pressed.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}" />
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="arrow" Property="Fill" Value="{StaticResource ComboBox.Disabled.Glyph}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Border}" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false" />
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="templateRoot" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Background}" />
                                <Setter TargetName="templateRoot" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Border}" />
                                <Setter TargetName="splitBorder" Property="Background" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}" />
                                <Setter TargetName="splitBorder" Property="BorderBrush" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate"
                         TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0"
                                      MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       Grid.ColumnSpan="2"
                       Margin="1"
                       AllowsTransparency="true"
                       IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow"
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   Color="Transparent">
                        <Border x:Name="dropDownBorder"
                                Background="Transparent"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <!--  "{DynamicResource {x:Static SystemColors.WindowBrushKey}}"  -->
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <ContentPresenter x:Name="contentPresenter"
                                  Margin="{TemplateBinding Padding}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Content="{TemplateBinding SelectionBoxItem}"
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"
                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                  IsHitTestVisible="false"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                    <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <SolidColorBrush x:Key="TextBox.Static.Background"
                         Color="#FFFFFFFF" />
        <Style x:Key="ComboBoxEditableTextBox"
               TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="MinWidth" Value="0" />
            <Setter Property="MinHeight" Value="0" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Background="Transparent"
                                      Focusable="false"
                                      HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Hidden" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxEditableTemplate"
                         TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot"
                  SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="0"
                                      MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup"
                       Grid.ColumnSpan="2"
                       AllowsTransparency="true"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Bottom"
                       PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <Themes:SystemDropShadowChrome x:Name="shadow"
                                                   MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                   MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                                   Color="Transparent">
                        <Border x:Name="dropDownBorder"
                                Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid"
                                      RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas"
                                            Width="0"
                                            Height="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Top">
                                        <Rectangle x:Name="opaqueRect"
                                                   Width="{Binding ActualWidth, ElementName=dropDownBorder}"
                                                   Height="{Binding ActualHeight, ElementName=dropDownBorder}"
                                                   Fill="{Binding Background, ElementName=dropDownBorder}" />
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Themes:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton"
                              Grid.ColumnSpan="2"
                              Background="{TemplateBinding Background}"
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" />
                <Border x:Name="border"
                        Margin="{TemplateBinding BorderThickness}"
                        Background="{StaticResource TextBox.Static.Background}">
                    <TextBox x:Name="PART_EditableTextBox"
                             Margin="{TemplateBinding Padding}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                             IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}"
                             Style="{StaticResource ComboBoxEditableTextBox}" />
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="true">
                    <Setter TargetName="shadow" Property="Margin" Value="0,0,5,5" />
                    <Setter TargetName="shadow" Property="Color" Value="#71000000" />
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter TargetName="dropDownBorder" Property="Height" Value="95" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true" />
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                </MultiTrigger>
                <Trigger SourceName="DropDownScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
                    <Setter TargetName="opaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}" />
                    <Setter TargetName="opaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="ComboBoxMainWindowStyle"
               TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}" />
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="Padding" Value="6,3,5,3" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="ScrollViewer.PanningMode" Value="Both" />
            <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}" />
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false" />
                    <Setter Property="Padding" Value="2" />
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Border Height="100"
                Margin="2"
                HorizontalAlignment="Stretch"
                BorderBrush="White"
                BorderThickness="2"
                DockPanel.Dock="Top">
            <StackPanel FlowDirection="RightToLeft"
                        Orientation="Horizontal">
                <Border Width="200"
                        Margin="2"
                        BorderBrush="White"
                        BorderThickness="1">
                    <DockPanel>
                        <Button Width="170"
                                HorizontalAlignment="Stretch"
                                Background="Transparent"
                                BorderThickness="0"
                                Click="OpenUserLogInPopUp">
                            <TextBlock FontSize="30"
                                       Foreground="White"
                                       Text="Login" />
                        </Button>
                        <Rectangle x:Name="UserLoggedRect"
                                   Width="20"
                                   Height="20"
                                   Margin="5"
                                   HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   DockPanel.Dock="Left"
                                   Fill="Red"
                                   Visibility="Visible" />
                    </DockPanel>
                </Border>
                <Border Width="200"
                        Margin="2"
                        Background="Transparent"
                        BorderBrush="White"
                        BorderThickness="1">
                    <ComboBox HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Background="Transparent"
                              BorderThickness="0"
                              FontSize="30"
                              Foreground="White"
                              Style="{DynamicResource ComboBoxMainWindowStyle}">
                        <ComboBoxItem HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="Man"
                                      Foreground="White"
                                      IsSelected="True" />
                        <ComboBoxItem HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="Auto"
                                      Foreground="White" />
                    </ComboBox>
                </Border>
                <Border Width="200"
                        Margin="2"
                        BorderBrush="White"
                        BorderThickness="1">
                    <ComboBox HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              Background="Transparent"
                              BorderThickness="0"
                              FontSize="30"
                              Foreground="White"
                              Style="{DynamicResource ComboBoxMainWindowStyle}">
                        <ComboBoxItem HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="Off"
                                      Foreground="White"
                                      IsSelected="True" />
                        <ComboBoxItem HorizontalContentAlignment="Center"
                                      VerticalContentAlignment="Center"
                                      Content="On"
                                      Foreground="White" />
                    </ComboBox>
                </Border>
                <Border Width="390"
                        Margin="2"
                        BorderBrush="White"
                        BorderThickness="1">
                    <Image Source="/Assets/ferrettologo_768x162.jpg"
                           Stretch="Fill" />
                </Border>
            </StackPanel>
        </Border>
        <Border Width="200"
                Margin="2"
                BorderBrush="White"
                BorderThickness="2"
                DockPanel.Dock="Left">
            <ScrollViewer VerticalScrollBarVisibility="Hidden">
                <StackPanel x:Name="ButtonRegionStackPanel">
                    <Border Height="100"
                            Margin="5"
                            BorderBrush="White"
                            BorderThickness="1"
                            IsEnabled="True">
                        <Button Background="Transparent"
                                BorderThickness="0"
                                Click="ButtonNavigateToTestConnectionPage"
                                Content="Connection Test"
                                FontSize="20"
                                Foreground="White" />
                    </Border>
                    <Border Height="100"
                            Margin="5"
                            BorderBrush="White"
                            BorderThickness="1"
                            IsEnabled="True">
                        <Button Background="Transparent"
                                BorderThickness="0"
                                Click="ButtonNavigateToCompartmentationPage"
                                Content="Compartmentation"
                                FontSize="20"
                                Foreground="White" />
                    </Border>
                    <Border Height="100"
                            Margin="5"
                            BorderBrush="White"
                            BorderThickness="1"
                            IsEnabled="True">
                        <Button Background="Transparent"
                                BorderThickness="0"
                                Click="ButtonNavigateToManualPage"
                                Content="Manual"
                                FontSize="20"
                                Foreground="White" />
                    </Border>
                </StackPanel>
            </ScrollViewer>
        </Border>
        <Border Width="800"
                Margin="2"
                BorderBrush="White"
                BorderThickness="2">
            <Frame x:Name="_NavigationRegion"
                   Margin="2"
                   HorizontalAlignment="Stretch"
                   VerticalAlignment="Stretch"
                   NavigationUIVisibility="Hidden" />
        </Border>


        <Popup x:Name="UserLoginPopup"
               Width="500"
               Height="300"
               IsOpen="False"
               Placement="Center">
            <Border Background="LightCyan"
                    BorderBrush="Yellow"
                    BorderThickness="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="80" />
                        <RowDefinition />
                        <RowDefinition Height="50" />
                    </Grid.RowDefinitions>
                    <TextBlock VerticalAlignment="Center"
                               FontSize="30"
                               TextAlignment="Center"><Run Text="USER LOG IN" /></TextBlock>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Row="0"
                                   Grid.Column="0"
                                   Margin="5"
                                   VerticalAlignment="Center"
                                   FontSize="25"
                                   Foreground="Black"
                                   TextAlignment="Center"><Run Text="USER:" /></TextBlock>
                        <TextBox Grid.Row="0"
                                 Grid.Column="1"
                                 Margin="5"
                                 VerticalAlignment="Center"
                                 FontSize="25"
                                 Foreground="Black"
                                 TextAlignment="Center" />
                        <TextBlock Grid.Row="1"
                                   Grid.Column="0"
                                   Margin="5"
                                   VerticalAlignment="Center"
                                   FontSize="25"
                                   Foreground="Black"
                                   TextAlignment="Center"><Run Text="PASSWORD:" /></TextBlock>
                        <TextBox Grid.Row="1"
                                 Grid.Column="1"
                                 Margin="5"
                                 VerticalAlignment="Center"
                                 FontSize="25"
                                 Foreground="Black"
                                 TextAlignment="Center" />
                    </Grid>
                    <Border Grid.Row="2"
                            Width="200"
                            Height="45"
                            Margin="5,0,5,0"
                            BorderBrush="Yellow"
                            BorderThickness="2">
                        <Button HorizontalAlignment="Stretch"
                                Background="Aqua"
                                BorderThickness="0"
                                Click="CloseUserLogInPopUp"
                                Content="LOG IN" />
                    </Border>
                </Grid>
            </Border>
        </Popup>
    </DockPanel>
</Window>

