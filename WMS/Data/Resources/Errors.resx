<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format
		that is mostly human readable. The generation and parsing of the
		various data types are done through the TypeConverter classes
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple
		name/value pairs.

		Each data row contains a name, and value. The row also contains a
		type or mimetype. Type corresponds to a .NET class that support
		text/value conversion through the TypeConverter architecture.
		Classes that don't support this are serialized and stored with the
		mimetype set.

		The mimetype is used for serialized objects, and tells the
		ResXResourceReader how to depersist the object. This is currently not
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format
		that the ResXResourceWriter will generate, however the reader can
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ValueOfMustBeStrictlyPositive" xml:space="preserve">
    <value>Value of '{0}' must be strictly positive.</value>
  </data>
  <data name="ValueOfMustBePositive" xml:space="preserve">
    <value>Value of '{0}' must be positive.</value>
  </data>
  <data name="PropertyDoesNotExistOnEntity" xml:space="preserve">
    <value>Property '{0}' does not exist on entity '{1}'.</value>
  </data>
  <data name="TheSpecifiedPropertyIsNotFound" xml:space="preserve">
    <value>The specified property '{0}' is not found.</value>
  </data>
  <data name="NoBayWithTheIdExists" xml:space="preserve">
    <value>No bay with the id {0} exists.</value>
  </data>
  <data name="CompartmentPositionAndSizeMustBeSpecified" xml:space="preserve">
    <value>Compartment position and size must be specified.</value>
  </data>
  <data name="CouldNotGetContentTypeForFile" xml:space="preserve">
    <value>Could not get content type for file '{0}'.</value>
  </data>
  <data name="NewMaxCapacityMustBeEqualOrGreaterThanCurrent" xml:space="preserve">
    <value>New max capacity {0} must be equal or greater than current max capacity {1}.</value>
  </data>
  <data name="OnlyPickAndPutRequestsAreSupported" xml:space="preserve">
    <value>Only pick and put requests are supported.</value>
  </data>
  <data name="UnableToInterpretEnumerationValueFor" xml:space="preserve">
    <value>Unable to interpret enumeration value for '{0}'.</value>
  </data>
  <data name="TheListTypeIsNotSupported" xml:space="preserve">
    <value>The list type '{0}' is not supported.</value>
  </data>
  <data name="UnableToExecuteTheListRowBecauseNoRowExists" xml:space="preserve">
    <value>Unable to execute the row because no row with id={0} exists.</value>
  </data>
  <data name="UnableToSuspendTheListRowBecauseNoRowExists" xml:space="preserve">
    <value>Unable to suspend the row because no row with id={0} exists.</value>
  </data>
  <data name="UnableToExecuteTheListRowBecauseOfTypeNotSupported" xml:space="preserve">
    <value>Unable to execute the list row (id={0}). The rows of type '{1}' are not supported.</value>
  </data>
  <data name="UnableToExecuteTheListRowWithDescription" xml:space="preserve">
    <value>Unable to execute the list row (id={0}). {1}.</value>
  </data>
  <data name="CannotProcessSchedulerRequest" xml:space="preserve">
    <value>Cannot process scheduler request id={0}.</value>
  </data>
  <data name="PickMissionsCannotBeCreatedForSchedulerOperationType" xml:space="preserve">
    <value>Pick missions cannot be created for scheduler operation type '{0}'.</value>
  </data>
  <data name="PutMissionsCannotBeCreatedForSchedulerOperationType" xml:space="preserve">
    <value>Put missions cannot be created for scheduler operation type '{0}'.</value>
  </data>
  <data name="CannotCreatePickMissionFromRequestThatDoesNotSpecifyTargetBay" xml:space="preserve">
    <value>Cannot create a pick mission from a request that does not specify the target bay.</value>
  </data>
  <data name="NoMissionWithIdExists" xml:space="preserve">
    <value>No mission with id '{0}' exists.</value>
  </data>
  <data name="ValueRepresentsAnInvalidQuantity" xml:space="preserve">
    <value>Value '{0}' represents an invalid quantity. Dispatched mission quantity cannot be negative or zero.</value>
  </data>
  <data name="CompletionIsNotSupportedForMissionType" xml:space="preserve">
    <value>Completion is not supported for mission type '{0}'.</value>
  </data>
  <data name="OnlyLoadingUnitWithdrawalOperationsAreAllowed" xml:space="preserve">
    <value>Only loading unit withdrawal operations are allowed.</value>
  </data>
  <data name="AbortionIsNotSupportedForMissionType" xml:space="preserve">
    <value>Abortion is not supported for mission type '{0}'.</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseItHasNoAssociatedCompartment" xml:space="preserve">
    <value>Unable to complete the specified mission because it has no associated compartment.</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseItHasNoAssociatedItem" xml:space="preserve">
    <value>Unable to complete the specified mission because it has no associated item.</value>
  </data>
  <data name="ActualPickedQuantityCannotBeGreaterThanTheRemainingQuantityToDispatch" xml:space="preserve">
    <value>Actual picked quantity ({0}) cannot be greater than the remaining quantity to dispatch ({1}).</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseOfActualPutQuantity" xml:space="preserve">
    <value>Unable to complete the specified mission. Actual put quantity ({0}) cannot be negative or zero.</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseOfAssociatedCompartmentNotRetrieved" xml:space="preserve">
    <value>Unable to complete the specified mission. The associated compartment could not be retrieved.</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseOfAssociatedLoadingUnitNotRetrieved" xml:space="preserve">
    <value>Unable to complete the specified mission. The associated loading unit could not be retrieved.</value>
  </data>
  <data name="TheMethodArgumentShouldNotBeNull" xml:space="preserve">
    <value>The method argument {0} should not be null.</value>
  </data>
  <data name="UnableToCompleteTheSpecifiedMissionBecauseItHasNoAssociatedLoadingUnit" xml:space="preserve">
    <value>Unable to complete the specified mission because it has no associated loading unit.</value>
  </data>
  <data name="ItemRequestHasMissingMandatoryFields" xml:space="preserve">
    <value>Item request has missing mandatory fields.</value>
  </data>
  <data name="LoadingUnitRequestHasMissingMandatoryFields" xml:space="preserve">
    <value>Loading unit request has missing mandatory fields.</value>
  </data>
  <data name="TheSpecifiedSchedulerRequestTypeIsNotSupported" xml:space="preserve">
    <value>The specified scheduler request type is not supported.</value>
  </data>
  <data name="RequestedQuantityMustBePositive" xml:space="preserve">
    <value>Requested quantity must be positive.</value>
  </data>
  <data name="WhenRegistrationNumberIsSpecifiedTheRequestedQuantityMustBeOne" xml:space="preserve">
    <value>When registration number is specified, the requested quantity must be 1.</value>
  </data>
  <data name="TheSpecifiedItemDoesNotExist" xml:space="preserve">
    <value>The specified item does not exist.</value>
  </data>
  <data name="NotEnoughAvailableCompartmentsToServeTheRequest" xml:space="preserve">
    <value>Not enough available compartments to serve the request.</value>
  </data>
  <data name="ThisRegistrationNumberIsAlreadyPresentForThisItem" xml:space="preserve">
    <value>This Registration Number is already present for this Item.</value>
  </data>
  <data name="CompartmentXPositionIsNotSpecified" xml:space="preserve">
    <value>Compartment's X position is not specified.</value>
  </data>
  <data name="CompartmentYPositionIsNotSpecified" xml:space="preserve">
    <value>Compartment's Y position is not specified.</value>
  </data>
  <data name="CompartmentSizeIsNotSpecified" xml:space="preserve">
    <value>Compartment size is not specified.</value>
  </data>
  <data name="CompartmentStockGreaterThanMaxCapacity" xml:space="preserve">
    <value>Item stock in the compartment cannot be greater that compartment's maximum capacity.</value>
  </data>
  <data name="QuantityMustBeOneIfRegistrationNumber" xml:space="preserve">
    <value>Quantity must be equal to 1 if Registration Number is specified.</value>
  </data>
  <data name="CompartmentStockCannotBeZeroWhenItemPairingIsNotFixed" xml:space="preserve">
    <value>Stock cannot be zero when the item pairing is not fixed.</value>
  </data>
  <data name="DuplicateCompartmentType" xml:space="preserve">
    <value>A compartment with the same features already exists.</value>
  </data>
  <data name="CompartmentSetCannotBeInsertedInLoadingUnit" xml:space="preserve">
    <value>Specified set of compartments cannot be inserted in the loading unit.</value>
  </data>
  <data name="NoEntityExists" xml:space="preserve">
    <value>No entity with the specified id={0} exists.</value>
  </data>
</root>