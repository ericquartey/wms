<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxmvvminternal="clr-namespace:DevExpress.Mvvm.UI.Interactivity.Internal;assembly=DevExpress.Xpf.Core.v18.2"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls">

    <Color x:Key="Grey">#FF293133</Color>
    <SolidColorBrush x:Key="ArrowGrey"
                     Color="{StaticResource Grey}" />


    <wms:BoolToVisibilityConverter x:Key="BTVC" />

    <!--  Static Resources  -->
    <sys:Double x:Key="HeaderTouchHeight">44</sys:Double>
    <sys:Double x:Key="ExpandButtonTouchSize">34</sys:Double>
    <sys:Double x:Key="ItemTouchOffset">35</sys:Double>
    <sys:Double x:Key="ExpandButtonContainerTouchMinWidth">35</sys:Double>
    <Thickness x:Key="HeaderTouchMargin">12,0,0,0</Thickness>
    <Thickness x:Key="GlyphTouchMargin">8,0,0,0</Thickness>
    <Thickness x:Key="CollapsedItemRightTouchMargin">4,8,0,8</Thickness>
    <Thickness x:Key="LeftExpanderTouchMargin">1,3,0,3</Thickness>
    <Thickness x:Key="RightExpanderTouchMargin">12,3,-11,3</Thickness>

    <Thickness x:Key="PopupContentMargin">3,3,3,3</Thickness>
    <Thickness x:Key="PopupScrollingContentMargin">3,3,0,3</Thickness>

    <sys:Double x:Key="SearchControlButtonTouchSize">34</sys:Double>

    <sys:Double x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemRotateAngle}">-90</sys:Double>
    <sys:Double x:Key="{dxat:AccordionThemeKeys ResourceKey=PopupDefaultWidth}">200</sys:Double>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.03"
                                  Value="0" />
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.03"
                                     Value="False" />
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.2"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,1.0,.4,1.0"
                                  KeyTime="0:0:0.15"
                                  Value="0" />
            <SplineDoubleKeyFrame KeySpline="1.0,.0,1.0,.0"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.15"
                                     Value="True" />
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>
    <dxmvvm:ObjectToObjectConverter x:Key="scrollBarVisibilityConverter"
                                    DefaultTarget="Auto">
        <dxmvvm:MapItem Source="False"
                        Target="Hidden" />
    </dxmvvm:ObjectToObjectConverter>

    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolConverter"
                                    DefaultTarget="False">
        <dxmvvm:MapItem Source="Glyph"
                        Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolInvertedConverter"
                                    DefaultTarget="True">
        <dxmvvm:MapItem Source="Glyph"
                        Target="False" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="contentAndGlyphViewModeToBoolConverter"
                                    DefaultTarget="False">
        <dxmvvm:MapItem Source="ContentAndGlyph"
                        Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <Style x:Key="glyphPresenterStyle"
           TargetType="ContentPresenter">
        <Setter Property="Content" Value="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplate" Value="{Binding GlyphTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding GlyphTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style x:Key="decoratorGlyphPresenterStyle"
           BasedOn="{StaticResource glyphPresenterStyle}"
           TargetType="ContentPresenter">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Glyph, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}" />
                    <Condition Binding="{Binding Path=ShowDefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Content" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.DefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <!--  Static Resources  -->


    <dxmvvm:ObjectToObjectConverter x:Key="collapseItemConverter"
                                    DefaultTarget="False">
        <dxmvvm:MapItem Source="Container"
                        Target="True" />
    </dxmvvm:ObjectToObjectConverter>


    <!--  COLOR RESOURCES  -->
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDisabledForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFocusedForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}"
                     Color="#FF0173C7" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}"
                     Color="#FF0173C7" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDisabledForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFocusedForeground}"
                     Color="#FF0173C7" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground}"
                     Color="#FF0173C7" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground}"
                     Color="#FF0173C7" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=Background}"
                     Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=BorderBrush}"
                     Color="#FFE6E6E6" />
    <SolidColorBrush x:Key="{dxat:AccordionItemThemeKeys ResourceKey=TextForeground}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlNullTextForeground}"
                     Opacity="0.62"
                     Color="#FFABABAB" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlClearButtonFill}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=SearchControlSearchButtonFill}"
                     Color="#FF444444" />
    <SolidColorBrush x:Key="{dxat:AccordionThemeKeys ResourceKey=HeaderForeground}"
                     Color="#FF444444" />
    <!--  COLOR RESOURCES  -->


    <!--  ACCORDION EXPAND BUTTON  -->
    <dx:EditorStringIdConverter x:Key="EditorStringIdConverter" />
    <dxan:AccordionItemConverter x:Key="accordionItemConverter" />

    <Style x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}"
           TargetType="dxa:AccordionExpandButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}" />
        <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="IsChecked" Value="{Binding Path=IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Command" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.Commands.ChangeItemExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource accordionItemConverter}}" />
        <Setter Property="ItemType" Value="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" />
        <Style.Triggers>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}" />
                <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="{StaticResource ExpandButtonTouchSize}" />
                <Setter Property="Height" Value="{StaticResource ExpandButtonTouchSize}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  ACCORDION EXPAND BUTTON  -->


    <Style BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Accordion.AccordionItem,
                                                                ThemeName=Office2016White}}"
           TargetType="{x:Type dxa:AccordionItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="GlyphTemplate" Value="{StaticResource AccordionItemDefaultGlyphTemplate}" />
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontSize}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontWeight}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxa:AccordionItem}">
                    <ContentControl x:Name="PART_RootContentControl"
                                    Background="Red"
                                    BorderThickness="0"
                                    FocusVisualStyle="{x:Null}"
                                    Focusable="False"
                                    Foreground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}">
                        <dxmvvm:Interaction.Behaviors>
                            <dxa:AccordionItemForegroundBehavior Foreground="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 ItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}"
                                                                 ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                 RootItemDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground}}"
                                                                 TextDefaultForeground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground}}" />
                        </dxmvvm:Interaction.Behaviors>
                        <Grid x:Name="PART_ItemContainer">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition>
                                    <dxmvvm:Interaction.Behaviors>
                                        <dxa:AccordionItemOffsetBehavior IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}"
                                                                         ItemLevel="{Binding ItemLevel, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         RemoveOffset="{Binding Path=(dxa:AccordionView.CurrentView).IsSingleRootItemViewMode, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         RootItemDisplayMode="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.RootItemDisplayMode, RelativeSource={RelativeSource TemplatedParent}}"
                                                                         TouchOffset="{StaticResource ItemTouchOffset}"
                                                                         Offset="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemOffset}}" />
                                    </dxmvvm:Interaction.Behaviors>
                                </ColumnDefinition>
                                <ColumnDefinition x:Name="HeaderColumn"
                                                  Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="HeaderRow"
                                               Height="Auto"
                                               MinHeight="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHeight}}" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_HeaderContainer"
                                  Grid.Column="1"
                                  Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderContainerMargin}}">
                                <dxa:AccordionItemBackgroundControl x:Name="PART_BackgroundControl"
                                                                    Focusable="False"
                                                                    ItemState="Default"
                                                                    ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" />

                                <Grid x:Name="PART_HeaderInternalContainer"
                                      Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderMargin}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="LeftExpandButtonColumn"
                                                          Width="Auto" />
                                        <ColumnDefinition Width="Auto" />

                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />

                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition x:Name="RightExpandButtonColumn"
                                                          Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <dxa:AccordionExpandButton x:Name="PART_ExpandButton"
                                                               Grid.RowSpan="2"
                                                               Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}" />
                                    <ContentPresenter x:Name="PART_Glyph"
                                                      Grid.Row="1"
                                                      Grid.Column="1"
                                                      Style="{StaticResource glyphPresenterStyle}">
                                        <dxmvvm:Interaction.Behaviors>
                                            <dxa:GlyphMarginBehavior GlyphPosition="{Binding ActualGlyphPosition, RelativeSource={RelativeSource TemplatedParent}}"
                                                                     GlyphTouchMargin="{StaticResource GlyphTouchMargin}"
                                                                     HasGlyph="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                                                                     HeaderElementsMargin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                                                     IsTouchEnabled="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}" />
                                        </dxmvvm:Interaction.Behaviors>
                                    </ContentPresenter>
                                    <Border x:Name="PART_Header"
                                            Grid.Row="1"
                                            Grid.Column="0"
                                            Grid.ColumnSpan="8"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Background="{TemplateBinding Background}"
                                            SnapsToDevicePixels="True">

                                        <ContentPresenter x:Name="PART_HeaderContent"
                                                          Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          ContentSource="Header"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter.Resources>
                                                <Style x:Key="{x:Type TextBlock}"
                                                       TargetType="TextBlock">
                                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </Border>
                                    <Border x:Name="PART_RightBorder"
                                            Grid.RowSpan="2"
                                            Grid.Column="7"
                                            Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                            BorderThickness="0" />
                                </Grid>
                            </Grid>
                            <dxan:AccordionExpander x:Name="PART_Expander"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    CollapseStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.CollapseStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                                    ExpandStoryboard="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.ExpandStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                                    IsExpanded="True"
                                                    Duration="0">
                                <ItemsPresenter x:Name="ItemsHost" />
                            </dxan:AccordionExpander>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <!--#region Misc-->
                        <Trigger Property="AllowAnimation" Value="false">
                            <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
                            <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_HeaderContainer" Property="Opacity" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=DisabledItemOpacity}}" />
                        </Trigger>
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderMargin}}" />
                            <Setter TargetName="PART_Expander" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemContainerMargin}}" />
                            <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter TargetName="PART_HeaderContent" Property="Margin" Value="{StaticResource HeaderTouchMargin}" />
                            <Setter TargetName="PART_RightBorder" Property="Margin" Value="{StaticResource HeaderTouchMargin}" />
                        </Trigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter TargetName="PART_HeaderContent" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="PART_HeaderContent" Property="VerticalAlignment" Value="Stretch" />
                            <Setter TargetName="PART_HeaderContent" Property="Margin" Value="0" />
                            <Setter TargetName="PART_Header" Property="Margin" Value="0" />
                            <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="0" />
                            <Setter TargetName="PART_RightBorder" Property="Margin" Value="0" />
                            <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region Expand Collapse-->
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="PART_Expander" Property="IsExpanded" Value="False" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Expander" Property="IsExpanded" Value="True" />
                            <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
                            <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="IsExpanded" Value="true" />
                                <Condition SourceName="PART_Expander" Property="Expanding" Value="false" />
                                <Condition Property="AllowAnimation" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Expander" Property="AnimationProgress" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="AnimationProgress" Value="0" />
                                <Condition Property="AllowAnimation" Value="true" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="IsExpanded" Value="false" />
                                <Condition Property="AllowAnimation" Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <!--#endregion-->
                        <!--#region Glyph-->
                        <Trigger Property="ActualGlyphPosition" Value="Left">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Right">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="5" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Top">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <!--#endregion-->
                        <!--#region Header row-->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="{StaticResource HeaderTouchHeight}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="{StaticResource HeaderTouchHeight}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemType" Value="RootItem" />
                                <Condition Property="dx:ThemeManager.IsTouchEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight}}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="0" />
                            <Setter TargetName="HeaderRow" Property="Height" Value="0" />
                            <Setter TargetName="PART_Expander" Property="Margin" Value="0" />
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region Expand buttons visibility setters-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Margin" Value="{StaticResource LeftExpanderTouchMargin}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ExpandButton" Property="Grid.Column" Value="6" />
                            <Setter TargetName="PART_ExpandButton" Property="IsRightExpandButton" Value="True" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Margin" Value="{StaticResource RightExpanderTouchMargin}" />
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region ExpandButtonContainer-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="{StaticResource ExpandButtonContainerTouchMinWidth}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <Condition Binding="{Binding Path=(dx:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="{StaticResource ExpandButtonContainerTouchMinWidth}" />
                        </MultiDataTrigger>
                        <!--#endregion-->
                        <!--#region Foreground & States-->
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Selected" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="SelectedInactive" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True" />
                                <Condition Property="ActualHighlightOnHover" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <!--Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground}}" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True" />
                                <Condition Property="ActualHighlightOnHover" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <!--<Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground}}" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />-->
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="ActualHighlightOnPress" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="ActualHighlightOnPress" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{StaticResource ArrowGrey}" />
                        </MultiTrigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Default" />
                        </Trigger>
                        <!--#endregion-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingStackPanel.IsVirtualizing" Value="true">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <dxan:AccordionVirtualizingPanel />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Binding="{Binding Path=GlyphTemplateSelector, RelativeSource={RelativeSource Self}, Converter={dxmvvm:ObjectToBooleanConverter}}"
                         Value="True">
                <Setter Property="GlyphTemplate" Value="{x:Null}" />
            </DataTrigger>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontWeight}}" />
                <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontSize}}" />
            </Trigger>
            <Trigger Property="ItemType" Value="Wrapper">
                <Setter Property="GlyphPosition" Value="None" />
                <Setter Property="HighlightOnHover" Value="False" />
                <Setter Property="HighlightOnPress" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Trigger>
            <Trigger Property="ItemVisibilityMode" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>





    <DataTemplate x:Key="HeaderAccordingItemTemplate">
        <StackPanel Orientation="Horizontal">
            <dxe:ToggleSwitch ToggleSwitchHeight="20"
                              ToggleSwitchWidth="30"
                              Visibility="{Binding IsToggleVisible, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}, Converter={StaticResource BTVC}}" />
            <TextBlock FontSize="14"
                       FontWeight="Medium"
                       Foreground="{StaticResource ArrowGrey}"
                       Text="{Binding TitleHeader, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}}" />
        </StackPanel>
    </DataTemplate>
    <Style BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Accordion.AccordionItem,
                                                                ThemeName=Office2016White}}"
           TargetType="wms:AccordionItem">
        <Setter Property="HeaderTemplate" Value="{StaticResource HeaderAccordingItemTemplate}" />
    </Style>
</ResourceDictionary>
