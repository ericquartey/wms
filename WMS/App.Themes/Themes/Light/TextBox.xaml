<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls">

    <wms:BoolToTextWrappingConverter x:Key="BTTWC" />
    <wms:PropertyDescriptionConverter x:Key="DNC"
                                      Control="{x:Type wms:TextBox}"
                                      Property="{x:Static wms:TextBox.TextProperty}" />

    <Style BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.TextEdit,
                                                                ThemeName=Office2016White}}"
           TargetType="{x:Type wms:TextBox}">
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplateStyle}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type wms:TextBox}">
                    <Grid x:Name="GridTextBox">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <Label Style="{DynamicResource ControlLabelStyle}">
                            <Label.Content>
                                <MultiBinding Converter="{StaticResource DNC}">
                                    <Binding RelativeSource="{RelativeSource Self}" />
                                    <Binding Path="DataContext"
                                             RelativeSource="{RelativeSource Self}" />
                                </MultiBinding>
                            </Label.Content>
                        </Label>

                        <dxe:TextEdit x:Name="InnerTextBox"
                                 Grid.Row="1"
                                 dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                                 VerticalContentAlignment="Top"
                                 VerticalScrollBarVisibility="Auto"                                 
                                 AcceptsReturn="{TemplateBinding IsMultiline}"
                                 Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 TextWrapping="{TemplateBinding IsMultiline,
                                                                Converter={StaticResource BTTWC}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="InnerTextBox" Property="FocusManager.FocusedElement" Value="{Binding ElementName=InnerTextBox}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <dxn:RenderTemplate x:Key="{dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}">
        <dxn:RenderPanel Name="PART_Root">
            <dxn:RenderPanel Name="PART_Border">
                <dxn:RenderBorder Background="#FFFFFFFF"
                                  BorderBrush="#7F5C5C5C"
                                  BorderThickness="1" />
            </dxn:RenderPanel>
        </dxn:RenderPanel>
        <dxn:RenderTemplate.Triggers>
            <dxn:RenderTrigger DependencyProperty="{x:Static dx:ThemeManager.IsTouchEnabledProperty}"
                               ValueSource="TemplatedParent"
                               Value="True">
                <dxn:RenderSetter TargetName="PART_Root"
                                  Property="MinWidth"
                                  Value="44" />
                <dxn:RenderSetter TargetName="PART_Root"
                                  Property="MinHeight"
                                  Value="44" />
            </dxn:RenderTrigger>
        </dxn:RenderTemplate.Triggers>
    </dxn:RenderTemplate>

    <ControlTemplate x:Key="{dxet:BaseEditThemeKey ResourceKey=TextEditBorderTemplate,
                                                   ThemeName=Office2016White}"
                     TargetType="ContentControl">
        <Grid>
            <dxn:Chrome RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderTemplate}}" />
            <ContentPresenter Margin="{StaticResource ResourceKey={dxet:InplaceBaseEditThemeKey ResourceKey=TextEditBorderThickness}}" />
            <dxn:Chrome dxeh:ControlHelper.ShowFocusedState="{Binding Path=(dxeh:ControlHelper.ShowFocusedState), RelativeSource={RelativeSource TemplatedParent}}"
                        IsHitTestVisible="False"
                        RenderTemplate="{StaticResource {dxet:InplaceBaseEditThemeKey ResourceKey=HoverBorderTemplate}}" />
            <Border Name="MouseOverBorder"
                    BorderThickness="1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="MouseOverBorder" Property="BorderBrush" Value="{DynamicResource CommonSecondaryMedium}" />
            </Trigger>
            <Trigger Property="dxe:BaseEdit.IsKeyboardFocusWithin" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Visibility" Value="Visible" />
                <Setter TargetName="MouseOverBorder" Property="BorderBrush" Value="{DynamicResource CommonSecondaryDark}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
