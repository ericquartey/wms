<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxa="http://schemas.devexpress.com/winfx/2008/xaml/accordion"
                    xmlns:dxan="http://schemas.devexpress.com/winfx/2008/xaml/accordion/internal"
                    xmlns:dxat="http://schemas.devexpress.com/winfx/2008/xaml/accordion/themekeys"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls">

    <wms:BoolToVisibilityConverter x:Key="BTVC" />

    <!--  RESOURCES DICTIONARY  -->
    <sys:Double x:Key="HeaderTouchHeight">44</sys:Double>
    <sys:Double x:Key="ExpandButtonTouchSize">34</sys:Double>
    <sys:Double x:Key="ItemTouchOffset">35</sys:Double>
    <sys:Double x:Key="ExpandButtonContainerTouchMinWidth">35</sys:Double>
    <Thickness x:Key="HeaderTouchMargin">12,0,0,0</Thickness>
    <Thickness x:Key="GlyphTouchMargin">8,0,0,0</Thickness>
    <Thickness x:Key="CollapsedItemRightTouchMargin">4,8,0,8</Thickness>
    <Thickness x:Key="LeftExpanderTouchMargin">1,3,0,3</Thickness>
    <Thickness x:Key="RightExpanderTouchMargin">12,3,-11,3</Thickness>

    <Thickness x:Key="PopupContentMargin">3,3,3,3</Thickness>
    <Thickness x:Key="PopupScrollingContentMargin">3,3,0,3</Thickness>

    <sys:Double x:Key="SearchControlButtonTouchSize">34</sys:Double>

    <sys:Double x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ItemRotateAngle}">-90</sys:Double>
    <sys:Double x:Key="{dxat:AccordionThemeKeys ResourceKey=PopupDefaultWidth}">200</sys:Double>

    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=ExpandAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,.8,.8,.4"
                                  KeyTime="0:0:0.03"
                                  Value="0" />
            <SplineDoubleKeyFrame KeySpline=".8,.4,.4,.8"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.03"
                                     Value="False" />
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>
    <Storyboard x:Key="{dxat:AccordionThemeKeys ResourceKey=CollapseAccordionStoryboard}">
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="AnimationProgress">
            <SplineDoubleKeyFrame KeySpline=".2,.8,.2,.8"
                                  KeyTime="0:0:0.2"
                                  Value="0" />
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
            <SplineDoubleKeyFrame KeySpline=".4,1.0,.4,1.0"
                                  KeyTime="0:0:0.15"
                                  Value="0" />
            <SplineDoubleKeyFrame KeySpline="1.0,.0,1.0,.0"
                                  KeyTime="0:0:0.3"
                                  Value="1" />
        </DoubleAnimationUsingKeyFrames>
        <BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsContentCollapsed">
            <DiscreteBooleanKeyFrame KeyTime="0:0:0.15"
                                     Value="True" />
        </BooleanAnimationUsingKeyFrames>
    </Storyboard>
    <dxmvvm:ObjectToObjectConverter x:Key="scrollBarVisibilityConverter"
                                    DefaultTarget="Auto">
        <dxmvvm:MapItem Source="False"
                        Target="Hidden" />
    </dxmvvm:ObjectToObjectConverter>

    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolConverter"
                                    DefaultTarget="False">
        <dxmvvm:MapItem Source="Glyph"
                        Target="True" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="glyphViewModeToBoolInvertedConverter"
                                    DefaultTarget="True">
        <dxmvvm:MapItem Source="Glyph"
                        Target="False" />
    </dxmvvm:ObjectToObjectConverter>
    <dxmvvm:ObjectToObjectConverter x:Key="contentAndGlyphViewModeToBoolConverter"
                                    DefaultTarget="False">
        <dxmvvm:MapItem Source="ContentAndGlyph"
                        Target="True" />
    </dxmvvm:ObjectToObjectConverter>

    <Style x:Key="glyphPresenterStyle"
           TargetType="ContentPresenter">
        <Setter Property="Content" Value="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplate" Value="{Binding GlyphTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="ContentTemplateSelector" Value="{Binding GlyphTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>

    <Style x:Key="decoratorGlyphPresenterStyle"
           BasedOn="{StaticResource glyphPresenterStyle}"
           TargetType="ContentPresenter">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=Glyph, RelativeSource={RelativeSource TemplatedParent}}" Value="{x:Null}" />
                    <Condition Binding="{Binding Path=ShowDefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Content" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.DefaultGlyph, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <DataTemplate x:Key="AccordionItemDefaultGlyphTemplate">
        <dxt:DXImage x:Name="glyph"
                     Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                     SnapsToDevicePixels="True"
                     Source="{Binding}" />
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding}"
                         Value="{x:Null}">
                <Setter TargetName="glyph" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>
    <!--  RESOURCES DICTIONARY  -->

    <!--  ACCORDION EXPAND BUTTON  -->
    <dxan:AccordionItemConverter x:Key="accordionItemConverter" />
    <!--  x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}"  -->
    <Style x:Key="Btn1"
           TargetType="dxa:AccordionExpandButton">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}" />
        <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemExpandButtonSize}}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate}}" />
        <Setter Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderDefaultForeground}}" />
        <Setter Property="Foreground" Value="Red" />
        <Setter Property="Visibility" Value="Visible" />
        <!--<Setter Property="Background" Value="Red" />-->
        <Setter Property="IsChecked" Value="{Binding Path=IsExpanded, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Command" Value="{Binding Path=(dxa:AccordionView.CurrentView).Accordion.Commands.ChangeItemExpanded, RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="CommandParameter" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource accordionItemConverter}}" />
        <Setter Property="ItemType" Value="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}" />
        <Style.Triggers>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="Width" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}" />
                <Setter Property="Height" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemExpandButtonSize}}" />
            </Trigger>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter Property="Width" Value="{StaticResource ExpandButtonTouchSize}" />
                <Setter Property="Height" Value="{StaticResource ExpandButtonTouchSize}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  CONTROL TEMPLATE  -->
    <dxmvvm:ObjectToObjectConverter x:Key="FlipHorizontalConverter"
                                    DefaultTarget="1">
        <dxmvvm:MapItem Source="True"
                        Target="-1" />
    </dxmvvm:ObjectToObjectConverter>
    <ControlTemplate x:Key="{dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonTemplate}"
                     TargetType="dxa:AccordionExpandButton">
        <Grid x:Name="Root"
              Background="Transparent">
            <Border x:Name="RootItemHover"
                    Background="#FFCDE6F7"
                    Opacity="0" />
            <Border x:Name="RootItemPressed"
                    Background="#FFB1D6F0"
                    Opacity="0" />
            <dxa:ExpandButtonContentPresenter x:Name="IsUnchecked"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}">
                <dxa:ExpandButtonContentPresenter.ItemContent>
                    <Path x:Name="ItemContentCollapse"
                          Width="4"
                          Height="8"
                          Data="F1 M 22,13.9999L 22,24L 27,19L 22,13.9999 Z"
                          Fill="{TemplateBinding Foreground}"
                          RenderTransformOrigin="0.5,0.5"
                          Stretch="Fill">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}" />
                        </Path.RenderTransform>
                    </Path>
                    <!--<Grid x:Name="ItemContentCollapse"
                              Grid.ColumnSpan="1"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*" />
                                <ColumnDefinition Width="0.3*"
                                                  MinWidth="16" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Glyph1"
                                              Grid.ColumnSpan="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Content>
                                    <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>-->
                </dxa:ExpandButtonContentPresenter.ItemContent>
                <dxa:ExpandButtonContentPresenter.RootItemContent>

                    <Path x:Name="RootItemContentCollapse"
                          Width="7"
                          Height="6"
                          Data="F1 M 0,1.52588e-005L 1.22465e-016,2.99998L 4,7L 8,3L 8,1.52588e-005L 4,4.00002L 0,1.52588e-005 Z "
                          Fill="{TemplateBinding Foreground}"
                          Stretch="Fill" />

                    <!--<Grid x:Name="RootItemContentCollapse"
                              Grid.ColumnSpan="1"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*" />
                                <ColumnDefinition Width="0.3*"
                                                  MinWidth="16" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Glyph2"
                                              Grid.ColumnSpan="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Content>
                                    <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>-->

                </dxa:ExpandButtonContentPresenter.RootItemContent>
            </dxa:ExpandButtonContentPresenter>
            <dxa:ExpandButtonContentPresenter x:Name="IsChecked"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              Focusable="False"
                                              ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                              Visibility="Hidden">
                <dxa:ExpandButtonContentPresenter.ItemContent>
                    <Path x:Name="ItemContentExpand"
                          Width="6"
                          Height="6"
                          Data="F1 M 13.0677,23.9948L 13.0677,19.0358L 8.06719,24.0363L 13.0677,23.9948 Z"
                          Fill="{TemplateBinding Foreground}"
                          RenderTransformOrigin="0.5,0.5"
                          Stretch="Fill">
                        <Path.RenderTransform>
                            <ScaleTransform ScaleX="{Binding IsRightExpandButton, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource FlipHorizontalConverter}}" />
                        </Path.RenderTransform>
                    </Path>
                    <!--<Grid x:Name="ItemContentExpand"
                              Grid.ColumnSpan="1"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*" />
                                <ColumnDefinition Width="0.3*"
                                                  MinWidth="16" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Glyph3"
                                              Grid.ColumnSpan="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Content>
                                    <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>-->

                </dxa:ExpandButtonContentPresenter.ItemContent>
                <dxa:ExpandButtonContentPresenter.RootItemContent>

                    <Path x:Name="RootItemContentExpand"
                          Width="7"
                          Height="6"
                          Data="F1 M 8,7.00002L 8,4.00006L 12,4.57764e-005L 16,4.00005L 16,7.00005L 12,3.00005L 8,7.00002 Z "
                          Fill="{TemplateBinding Foreground}"
                          Stretch="Fill" />

                    <!--<Grid x:Name="RootItemContentExpand"
                              Grid.ColumnSpan="1"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.7*" />
                                <ColumnDefinition Width="0.3*"
                                                  MinWidth="16" />
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Glyph4"
                                              Grid.ColumnSpan="2"
                                              HorizontalAlignment="Center"
                                              VerticalAlignment="Center"
                                              ContentTemplate="{TemplateBinding ContentTemplate}">
                                <ContentPresenter.Content>
                                    <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                                </ContentPresenter.Content>
                            </ContentPresenter>
                        </Grid>-->

                </dxa:ExpandButtonContentPresenter.RootItemContent>
            </dxa:ExpandButtonContentPresenter>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CheckStates">
                    <VisualState x:Name="Unchecked" />
                    <VisualState x:Name="Checked">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsUnchecked"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Collapsed</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="IsChecked"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Duration="0">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Indeterminate" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="ItemState" Value="Default" />
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RootItemHover" Property="Opacity" Value="1" />
                <Setter TargetName="RootItemContentExpand" Property="Fill" Value="#FF1B293E" />
                <Setter TargetName="RootItemContentCollapse" Property="Fill" Value="#FF1B293E" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ItemType" Value="RootItem" />
                    <Condition Property="IsPressed" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="RootItemPressed" Property="Opacity" Value="1" />
                <Setter TargetName="RootItemContentExpand" Property="Fill" Value="#FF1B293E" />
                <Setter TargetName="RootItemContentCollapse" Property="Fill" Value="#FF1B293E" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--  CONTROL TEMPLATE  -->
    <!--  ACCORDION EXPAND BUTTON  -->


    <!--  ACCORDION ITEM  -->
    <Style TargetType="{x:Type dxa:AccordionItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="GlyphTemplate">
            <Setter.Value>
                <DataTemplate>
                    <dxt:DXImage x:Name="glyph"
                                 Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin}}"
                                 IgnoreUseLayoutRoundingCheck="False"
                                 SnapsToDevicePixels="True"
                                 Source="{Binding}"
                                 UseLayoutRounding="True" />
                    <DataTemplate.Triggers>
                        <DataTrigger Binding="{Binding}"
                                     Value="{x:Null}">
                            <Setter TargetName="glyph" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground, ThemeName=Office2016White}}" />
        <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontSize, ThemeName=Office2016White}}" />
        <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderFontWeight, ThemeName=Office2016White}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type dxa:AccordionItem}">
                    <ContentControl x:Name="PART_RootContentControl"
                                    dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;24;22"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    FocusVisualStyle="{x:Null}"
                                    Focusable="False"
                                    Foreground="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=TextForeground,
                                                                                              ThemeName=Office2016White}}">
                        <Grid x:Name="PART_ItemContainer"
                              dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;28;26">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0" />
                                <ColumnDefinition x:Name="HeaderColumn"
                                                  Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="HeaderRow"
                                               Height="Auto"
                                               MinHeight="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHeight,
                                                                                                        ThemeName=Office2016White}}" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid x:Name="PART_HeaderContainer"
                                  Grid.Column="1"
                                  Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderContainerMargin,
                                                                                        ThemeName=Office2016White}}"
                                  dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;41;30">
                                <dxa:AccordionItemBackgroundControl x:Name="PART_BackgroundControl"
                                                                    Focusable="False"
                                                                    ItemState="Default"
                                                                    ItemType="{Binding ItemType, RelativeSource={RelativeSource TemplatedParent}}"
                                                                    Template="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemBackgroundTemplate,
                                                                                                                            ThemeName=Office2016White}}" />
                                <Grid x:Name="PART_HeaderInternalContainer"
                                      Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderMargin,
                                                                                            ThemeName=Office2016White}}"
                                      dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;43;34">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition x:Name="LeftExpandButtonColumn"
                                                          Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition x:Name="RightExpandButtonColumn"
                                                          Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <dxa:AccordionExpandButton x:Name="PART_ExpandButton"
                                                               Grid.RowSpan="2"
                                                              Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}" />
                                    <!--
                                        Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}"
                                        Style="{DynamicResource AccordionExpanderButton1}"
                                        Visibility="{Binding IsExpandButtonVisible, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ctrls:Accordion}}, Converter={StaticResource BTVC}}"
                                        Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle}}"
                                        Style="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpanderButtonStyle,
                                        ThemeName=Office2016White}}"
                                    -->
                                    <dxe:ToggleSwitch x:Name="ToggleSwitch"
                                                      Grid.RowSpan="2"
                                                      Grid.Column="1"
                                                      Visibility="{Binding IsToggleVisible, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}, Converter={StaticResource BTVC}}" />

                                    <ContentPresenter x:Name="PART_Glyph"
                                                      Grid.Row="1"
                                                      Grid.Column="2"
                                                      dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;61;38">
                                        <ContentPresenter.Style>
                                            <Style TargetType="{x:Type ContentPresenter}">
                                                <Setter Property="Content" Value="{Binding Glyph, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Setter Property="ContentTemplate" Value="{Binding GlyphTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Setter Property="ContentTemplateSelector" Value="{Binding GlyphTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" />
                                                <Setter Property="VerticalAlignment" Value="Center" />
                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </Style>
                                        </ContentPresenter.Style>
                                    </ContentPresenter>
                                    <dxt:DXBorder x:Name="PART_Header"
                                                  Grid.Row="1"
                                                  Grid.Column="3"
                                                  Grid.ColumnSpan="3"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Stretch"
                                                  dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;66;38"
                                                  Background="{TemplateBinding Background}"
                                                  EnableDPICorrection="True"
                                                  SnapsToDevicePixels="True">
                                        <ContentPresenter x:Name="PART_HeaderContent"
                                                          Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin,
                                                                                                                ThemeName=Office2016White}}"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                          dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;67;42"
                                                          Content="{TemplateBinding Header}"
                                                          ContentSource="Header"
                                                          ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                                          ContentTemplate="{TemplateBinding HeaderTemplate}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                                            <ContentPresenter.Resources>
                                                <Style x:Key="{x:Type TextBlock}"
                                                       TargetType="{x:Type TextBlock}">
                                                    <Setter Property="TextTrimming" Value="CharacterEllipsis" />
                                                </Style>
                                            </ContentPresenter.Resources>
                                        </ContentPresenter>
                                    </dxt:DXBorder>
                                    <dxt:DXBorder x:Name="PART_RightBorder"
                                                  Grid.RowSpan="2"
                                                  Grid.Column="8"
                                                  Margin="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=HeaderElementsMargin,
                                                                                                        ThemeName=Office2016White}}"
                                                  dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;75;38"
                                                  BorderThickness="0"
                                                  EnableDPICorrection="True" />
                                </Grid>
                            </Grid>
                            <dxan:AccordionExpander x:Name="PART_Expander"
                                                    Grid.Row="1"
                                                    Grid.Column="1"
                                                    AnimationProgress="1"
                                                    IsExpanded="True"
                                                    Duration="0">
                                <!--
                                    CollapseStoryboard="{Binding (dxa:AccordionView.CurrentView).Accordion.CollapseStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                    ExpandStoryboard="{Binding (dxa:AccordionView.CurrentView).Accordion.ExpandStoryboard, RelativeSource={RelativeSource TemplatedParent}}"
                                -->
                                <ItemsPresenter x:Name="ItemsHost"
                                                dxt:BlendHelper2.ThemeInfo="DevExpress.Xpf.Accordion\Generic\AccordionItem.xaml;79;34" />
                            </dxan:AccordionExpander>
                        </Grid>
                    </ContentControl>
                    <ControlTemplate.Triggers>
                        <Trigger Property="AllowAnimation" Value="False">
                            <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
                            <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_HeaderContainer" Property="Opacity" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=DisabledItemOpacity, ThemeName=Office2016White}}" />
                        </Trigger>
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderMargin, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_Expander" Property="Margin" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemContainerMargin, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="dxt:ThemeManager.IsTouchEnabled" Value="True">
                            <Setter TargetName="PART_HeaderContent" Property="Margin" Value="12,0,0,0" />
                            <Setter TargetName="PART_RightBorder" Property="Margin" Value="12,0,0,0" />
                        </Trigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter TargetName="PART_HeaderContent" Property="HorizontalAlignment" Value="Stretch" />
                            <Setter TargetName="PART_HeaderContent" Property="VerticalAlignment" Value="Stretch" />
                            <Setter TargetName="PART_HeaderContent" Property="Margin" Value="0" />
                            <Setter TargetName="PART_Header" Property="Margin" Value="0" />
                            <Setter TargetName="PART_HeaderInternalContainer" Property="Margin" Value="0" />
                            <Setter TargetName="PART_RightBorder" Property="Margin" Value="0" />
                            <Setter TargetName="PART_HeaderContainer" Property="Margin" Value="0" />
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="False">
                            <Setter TargetName="PART_Expander" Property="IsExpanded" Value="False" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_Expander" Property="IsExpanded" Value="True" />
                            <Setter TargetName="PART_Expander" Property="ExpandStoryboard" Value="{x:Null}" />
                            <Setter TargetName="PART_Expander" Property="CollapseStoryboard" Value="{x:Null}" />
                        </MultiDataTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="IsExpanded" Value="True" />
                                <Condition SourceName="PART_Expander" Property="Expanding" Value="False" />
                                <Condition Property="AllowAnimation" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Expander" Property="AnimationProgress" Value="1" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="AnimationProgress" Value="0" />
                                <Condition Property="AllowAnimation" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="PART_Expander" Property="IsExpanded" Value="False" />
                                <Condition Property="AllowAnimation" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
                        </MultiTrigger>
                        <Trigger Property="ActualGlyphPosition" Value="Left">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Right">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="5" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="1" />
                        </Trigger>
                        <Trigger Property="ActualGlyphPosition" Value="Top">
                            <Setter TargetName="PART_Glyph" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Column" Value="3" />
                            <Setter TargetName="PART_Glyph" Property="Grid.Row" Value="0" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dxt:ThemeManager.IsTouchEnabled" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="44" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="dxt:ThemeManager.IsTouchEnabled" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="44" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ItemType" Value="RootItem" />
                                <Condition Property="dxt:ThemeManager.IsTouchEnabled" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHeight, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ItemVisibilityMode, RelativeSource={RelativeSource Self}}" Value="ShowSubItems" />
                                <Condition Binding="{Binding ItemLevel, RelativeSource={RelativeSource Self}}" Value="0" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="HeaderRow" Property="MinHeight" Value="0" />
                            <Setter TargetName="HeaderRow" Property="Height" Value="0" />
                            <Setter TargetName="PART_Expander" Property="Margin" Value="0" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <!--<Condition Binding="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type ctrls:Accordion}}}" Value="True" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}}"
                                     Value="False">
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}}"
                                     Value="True">
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Margin" Value="1,3,0,3" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                            <Setter TargetName="PART_ExpandButton" Property="Grid.Column" Value="6" />
                            <Setter TargetName="PART_ExpandButton" Property="IsRightExpandButton" Value="True" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding HasItems, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="Margin" Value="12,3,-11,3" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth, ThemeName=Office2016White}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Left" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="LeftExpandButtonColumn" Property="MinWidth" Value="35" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="False" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ExpandButtonContainerMinWidth, ThemeName=Office2016White}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding ActualExpandButtonPosition, RelativeSource={RelativeSource Self}}" Value="Right" />
                                <!--<Condition Binding="{Binding (dxt:ThemeManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="RightExpandButtonColumn" Property="MinWidth" Value="35" />
                        </MultiDataTrigger>
                        <Trigger Property="ItemType" Value="RootItem">
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderDefaultForeground, ThemeName=Office2016White}}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Selected" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Selected" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="SelectedInactive" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="SelectedInactive" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderSelectedInactiveForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True" />
                                <Condition Property="IsSelectionActive" Value="False" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderSelectedInactiveForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True" />
                                <Condition Property="ActualHighlightOnHover" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderHoverForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOverHeader" Value="True" />
                                <Condition Property="ActualHighlightOnHover" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderHoverForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Hover" />
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Hover" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="ActualHighlightOnPress" Value="True" />
                                <Condition Property="ItemType" Value="SubItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=ItemHeaderPressedForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="True" />
                                <Condition Property="ActualHighlightOnPress" Value="True" />
                                <Condition Property="ItemType" Value="RootItem" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ExpandButton" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Pressed" />
                            <Setter TargetName="PART_RootContentControl" Property="Tag" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground, ThemeName=Office2016White}}" />
                            <Setter TargetName="PART_ExpandButton" Property="Foreground" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderPressedForeground, ThemeName=Office2016White}}" />
                        </MultiTrigger>
                        <Trigger Property="ItemType" Value="Wrapper">
                            <Setter TargetName="PART_BackgroundControl" Property="ItemState" Value="Default" />
                        </Trigger>
                        <!--Trigger Property="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type ctrls:Accordion}}}" Value="False">
                                <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Collapsed" />
                            </>
                            <Trigger Property="{Binding IsExpandButtonVisible, RelativeSource={RelativeSource AncestorType={x:Type ctrls:Accordion}}}" Value="True">
                                <Setter TargetName="PART_ExpandButton" Property="Visibility" Value="Visible" />
                            </Trigger-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <dxan:AccordionVirtualizingPanel IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <DataTrigger Value="True">
                <DataTrigger.Binding>
                    <Binding Path="GlyphTemplateSelector"
                             RelativeSource="{RelativeSource Self}">
                        <Binding.Converter>
                            <dxmvvm:ObjectToBooleanConverter Inverse="False" />
                        </Binding.Converter>
                    </Binding>
                </DataTrigger.Binding>
                <Setter Property="GlyphTemplate" Value="{x:Null}" />
            </DataTrigger>
            <Trigger Property="ItemType" Value="RootItem">
                <Setter Property="FontWeight" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontWeight, ThemeName=Office2016White}}" />
                <Setter Property="FontSize" Value="{DynamicResource {dxat:AccordionItemThemeKeys ResourceKey=RootItemHeaderFontSize, ThemeName=Office2016White}}" />
            </Trigger>
            <Trigger Property="ItemType" Value="Wrapper">
                <Setter Property="GlyphPosition" Value="None" />
                <Setter Property="HighlightOnHover" Value="False" />
                <Setter Property="HighlightOnPress" Value="False" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Focusable" Value="False" />
            </Trigger>
            <Trigger Property="ItemVisibilityMode" Value="Collapsed">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--  ACCORDION ITEM  -->

    <DataTemplate x:Key="HeaderAccordingItemTemplate">
        <StackPanel Orientation="Horizontal">
            <dxe:ToggleSwitch ToggleSwitchHeight="20"
                              ToggleSwitchWidth="30"
                              Visibility="{Binding IsToggleVisible, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type wms:AccordionItem}}, Converter={StaticResource BTVC}}" />
            <TextBlock FontSize="12"
                       FontWeight="Bold"
                       Text="CIAO" />
        </StackPanel>
    </DataTemplate>

    <Style BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Accordion.AccordionItem,
                                                                ThemeName=Office2016White}}"
           TargetType="wms:AccordionItem">
        <!--<Setter Property="Style" Value="{DynamicResource AccordionItemStyle1}"/>-->
        <Setter Property="HeaderTemplate" Value="{StaticResource HeaderAccordingItemTemplate}" />
        <!--<Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="wms:AccordionItem">
        -->
        <!--<dxa:AccordionItem x:Name="AccordionItem"
                                       ExpandButtonPosition="Left"
                                       FontSize="12"
                                       FontWeight="Bold"
                                       Header="{TemplateBinding Header}"

                                       Style="{DynamicResource AccordionItemStyle1}">-->
        <!--
                    <ContentPresenter x:Name="CONTENT_PRESENTER" />
        -->
        <!--</dxa:AccordionItem>-->
        <!--
                </ControlTemplate>
            </Setter.Value>
        </Setter>-->
    </Style>




    <!--<Grid x:Name="Grid">
        <dxa:AccordionControl x:Name="AccordionControl"
                              Margin="0,20,0,0"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              BorderThickness="0"
                              Foreground="Black"
                              RootItemExpandButtonPosition="Left">-->

    <!--<wms:InfoText>CIAO</wms:InfoText>
    -->
    <!--<wms:TextBox>HELLO</wms:TextBox>-->
    <!--
                <TextBox>HALLO</TextBox>-->
    <!--<dxa:AccordionItem x:Name="AccordionItem2"
                               ExpandButtonPosition="Left"
                               FontSize="12"
                               Header="Transmission type"
                               ShowInCollapsedMode="True"
                               Style="{DynamicResource AccordionItemStyle1}">
                <TextBox>CIAO</TextBox>
            </dxa:AccordionItem>-->
    <!--  /dxa:AccordionControl>  -->

</ResourceDictionary>
