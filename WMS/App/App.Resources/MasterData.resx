<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Compartments" xml:space="preserve">
    <value>Compartments</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="PhysicalInformation" xml:space="preserve">
    <value>Physical Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="WarehousingInformation" xml:space="preserve">
    <value>Warehousing Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="InstantPick" xml:space="preserve">
    <value>Instant Pick</value>
    <comment>Command - Pick the selected Item from the warehouse</comment>
  </data>
  <data name="ItemAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All Items</comment>
  </data>
  <data name="ItemClassA" xml:space="preserve">
    <value>Class A</value>
    <comment>Filter - Items with class A</comment>
  </data>
  <data name="ItemFIFO" xml:space="preserve">
    <value>FIFO</value>
    <comment>Filter - Items with FIFO policy</comment>
  </data>
  <data name="ItemSavedSuccessfully" xml:space="preserve">
    <value>Item saved sucessfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="CompartmentAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All Compartments</comment>
  </data>
  <data name="CompartmentSavedSuccessfully" xml:space="preserve">
    <value>Compartment saved sucessfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="CompartmentInformation" xml:space="preserve">
    <value>Compartment Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="CompartmentPosition" xml:space="preserve">
    <value>Position</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="ContentInformation" xml:space="preserve">
    <value>Content Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="CurrentItemInformation" xml:space="preserve">
    <value>Current Item Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="LoadingUnitSavedSuccessfully" xml:space="preserve">
    <value>Loading Unit saved sucessfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="LoadingUnitAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All Loading Units</comment>
  </data>
  <data name="ItemIsAllocatedInNoCompartment" xml:space="preserve">
    <value>This item is not allocated in any compartments.</value>
  </data>
  <data name="CompartmentTypeHasNoItems" xml:space="preserve">
    <value>This compartment type is not associated to any item.</value>
  </data>
  <data name="CurrentCellInformation" xml:space="preserve">
    <value>Current Cell Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="LoadingUnitInformation" xml:space="preserve">
    <value>Loading Unit Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="CellAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All Cells</comment>
  </data>
  <data name="LoadingUnitWithNoCompartment" xml:space="preserve">
    <value>This loading unit has no compartments.</value>
  </data>
  <data name="CellSavedSuccessfully" xml:space="preserve">
    <value>Cell saved successfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="CellInformation" xml:space="preserve">
    <value>Cell Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="CellLocationInformation" xml:space="preserve">
    <value>Cell Location Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="LoadingUnits" xml:space="preserve">
    <value>Loading Units</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="CellWithNoLoadingUnits" xml:space="preserve">
    <value>This cell has no loading units.</value>
  </data>
  <data name="PickOptions" xml:space="preserve">
    <value>Pick Options</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="RunItemPick" xml:space="preserve">
    <value>Run Item Pick</value>
    <comment>Action</comment>
  </data>
  <data name="ItemPickCommenced" xml:space="preserve">
    <value>Item pick commenced.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="BulkAddCompartment" xml:space="preserve">
    <value>Bulk Add</value>
  </data>
  <data name="AddCompartment" xml:space="preserve">
    <value>Add Compartment</value>
  </data>
  <data name="EditCompartment" xml:space="preserve">
    <value>Edit Compartment</value>
  </data>
  <data name="ItemListAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All ItemLists</comment>
  </data>
  <data name="ItemListStatusCompleted" xml:space="preserve">
    <value>Completed Status</value>
  </data>
  <data name="ItemListStatusWaiting" xml:space="preserve">
    <value>Waiting Status</value>
  </data>
  <data name="ItemListsTypePick" xml:space="preserve">
    <value>Picking Lists</value>
  </data>
  <data name="ItemListsAllTypePick" xml:space="preserve">
    <value>All Picking Lists</value>
  </data>
  <data name="CompartmentsLayoutOverview" xml:space="preserve">
    <value>Layout Overview</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="AdvancedDetails" xml:space="preserve">
    <value>Advanced Details</value>
  </data>
  <data name="ItemListsTypeInventory" xml:space="preserve">
    <value>Inventory Lists</value>
  </data>
  <data name="ItemListsAllTypeInventory" xml:space="preserve">
    <value>All Inventory Lists</value>
  </data>
  <data name="ItemListsTypePut" xml:space="preserve">
    <value>Put Lists</value>
  </data>
  <data name="ItemListsAllTypePut" xml:space="preserve">
    <value>All Put Lists</value>
  </data>
  <data name="LoadingUnitAreaManual" xml:space="preserve">
    <value>Manual Area</value>
    <comment>Filter - All Loading Units in Manual Area</comment>
  </data>
  <data name="LoadingUnitAreaVertimag" xml:space="preserve">
    <value>Vertimag Area</value>
    <comment>Filter - All Loading Units in Vertimag Area</comment>
  </data>
  <data name="LoadingUnitStatusAvailable" xml:space="preserve">
    <value>Available Status</value>
    <comment>Filter - Available Loading Units</comment>
  </data>
  <data name="LoadingUnitStatusBlocked" xml:space="preserve">
    <value>Blocked Status</value>
    <comment>Filter - Blocked Loading Units</comment>
  </data>
  <data name="LoadingUnitStatusUsed" xml:space="preserve">
    <value>Used Status</value>
    <comment>Filter - Used Loading Units</comment>
  </data>
  <data name="CellClassA" xml:space="preserve">
    <value>Class A</value>
    <comment>Filter - Class A Cells</comment>
  </data>
  <data name="CellStatusEmpty" xml:space="preserve">
    <value>Empty Status</value>
  </data>
  <data name="CellStatusFull" xml:space="preserve">
    <value>Full Status</value>
  </data>
  <data name="CompartmentStatusAvailable" xml:space="preserve">
    <value>Available Status</value>
  </data>
  <data name="CompartmentStatusAwaiting" xml:space="preserve">
    <value>Awaiting Verification Status</value>
  </data>
  <data name="CompartmentStatusBlocked" xml:space="preserve">
    <value>Blocked Status</value>
  </data>
  <data name="CompartmentStatusExpired" xml:space="preserve">
    <value>Expired Status</value>
  </data>
  <data name="ItemListViewStatusCompletedDescription" xml:space="preserve">
    <value>Get all lists with status completed</value>
    <comment>Filter Description</comment>
  </data>
  <data name="ItemListViewStatusWaitingDescription" xml:space="preserve">
    <value>Get all lists with status waiting</value>
    <comment>Filter Description</comment>
  </data>
  <data name="ItemListViewTypeInventoryDescription" xml:space="preserve">
    <value>Get all lists of type inventory</value>
    <comment>Filter Description</comment>
  </data>
  <data name="ItemListViewTypePickDescription" xml:space="preserve">
    <value>Get all lists of type pick</value>
    <comment>Filter Description</comment>
  </data>
  <data name="ItemListViewTypePutDescription" xml:space="preserve">
    <value>Get all lists of type put</value>
    <comment>Filter Description</comment>
  </data>
  <data name="CompartmentDeletedSuccessfully" xml:space="preserve">
    <value>Compartment deleted successfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="Compartment" xml:space="preserve">
    <value>Compartment</value>
  </data>
  <data name="EditLoadingUnit" xml:space="preserve">
    <value>Edit Loading Unit</value>
  </data>
  <data name="ItemDeletedSuccessfully" xml:space="preserve">
    <value>Item deleted sucessfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="LoadingUnitDeletedSuccessfully" xml:space="preserve">
    <value>Loading unit was deleted successfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="LoadingUnitWithdrawCommenced" xml:space="preserve">
    <value>Loading Unit withdrawal commenced.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="RunLoadingUnitWithdraw" xml:space="preserve">
    <value>Run Loading Unit Withdraw</value>
  </data>
  <data name="QuantityInformation" xml:space="preserve">
    <value>Quantity Information</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="RunItemPut" xml:space="preserve">
    <value>Run Item Put</value>
    <comment>Action</comment>
  </data>
  <data name="InstantPut" xml:space="preserve">
    <value>Instant Put</value>
    <comment>Command - Put the selected Item from the warehouse</comment>
  </data>
  <data name="PutOptions" xml:space="preserve">
    <value>Put Options</value>
    <comment>Label - Grouping</comment>
  </data>
  <data name="AdvancedPick" xml:space="preserve">
    <value>Advanced Pick</value>
  </data>
  <data name="AdvancedPut" xml:space="preserve">
    <value>Advanced Put</value>
  </data>
  <data name="Withdraw" xml:space="preserve">
    <value>Withdraw</value>
    <comment>Action</comment>
  </data>
  <data name="ItemPutCommenced" xml:space="preserve">
    <value>Item put commenced.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="LoadingUnitEditForItemSubTitle" xml:space="preserve">
    <value>Edit Loading Unit {0} for Item {1}</value>
    <comment>Title</comment>
  </data>
  <data name="LoadingUnitEditSubTitle" xml:space="preserve">
    <value>Edit Loading Unit {0}</value>
    <comment>Title</comment>
  </data>
  <data name="AssociateArea" xml:space="preserve">
    <value>Associate</value>
    <comment>Action</comment>
  </data>
  <data name="UnassociateArea" xml:space="preserve">
    <value>Unassociate</value>
    <comment>Action</comment>
  </data>
  <data name="AreaAssociationDeletedSuccessfully" xml:space="preserve">
    <value>Area association successfully deleted.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="Areas" xml:space="preserve">
    <value>Areas</value>
  </data>
  <data name="AvailableAreas" xml:space="preserve">
    <value>Available Areas</value>
  </data>
  <data name="NoAvailableAreas" xml:space="preserve">
    <value>No Available Areas</value>
  </data>
  <data name="AreaAssociationCreatedSuccessfully" xml:space="preserve">
    <value>Area association successfully created.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="AssociateACompartmentTypeToThisItem" xml:space="preserve">
    <value>Associate a Compartment Type to this Item</value>
  </data>
  <data name="CreateANewCompartment" xml:space="preserve">
    <value>Create a New Compartment</value>
  </data>
  <data name="ChooseHowYouWantToAssociateACompartmentTypeToThisItem" xml:space="preserve">
    <value>Choose how you want to associate a Compartment Type to this Item</value>
  </data>
  <data name="AssociateACompartmentType" xml:space="preserve">
    <value>Associate a Compartment Type</value>
  </data>
  <data name="AssociatedItems" xml:space="preserve">
    <value>Associated Items</value>
  </data>
  <data name="CompartmentTypeAssociateNewItem" xml:space="preserve">
    <value>Associate New Item</value>
  </data>
  <data name="CompartmentTypeRemoveAssociation" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="CompartmentTypeDeletedSuccesfully" xml:space="preserve">
    <value>Compartment Type deleted succesfully.</value>
  </data>
  <data name="CompartmentTypeAll" xml:space="preserve">
    <value>All</value>
    <comment>Filter - All Compartments</comment>
  </data>
  <data name="CompartmentTypeNotUsedType" xml:space="preserve">
    <value>Not used types</value>
  </data>
  <data name="AssociationCompartmentTypeCreatedSuccessfully" xml:space="preserve">
    <value>Item association successfully created.</value>
  </data>
  <data name="AssociationCompartmentTypeDeletedSuccessfully" xml:space="preserve">
    <value>Item association successfully deleted.</value>
  </data>
  <data name="ItemCompartmentTypesSavedSuccessfully" xml:space="preserve">
    <value>Item Compartment Types saved sucessfully.</value>
    <comment>Notification - Successful operation</comment>
  </data>
  <data name="ChooseExistingTypesToAssociateCurrentItemAndMaximumCapacity" xml:space="preserve">
    <value>Choose which existing types to associate with current Item, and specify the maximum capacity</value>
    <comment>Wizard - second step -</comment>
  </data>
  <data name="NoUnassociateItemCompartmentTypesAvailable" xml:space="preserve">
    <value>No Unassociate Compartment Types available</value>
  </data>
  <data name="MinStep" xml:space="preserve">
    <value>(Min. Step: {0})</value>
  </data>
  <data name="ChooseTheLoadingUnitCreateNewCompartmentType" xml:space="preserve">
    <value>Choose the Loading Unit where you want to create a new Compartment Type</value>
    <comment>Wizard - ChooseLoadingUnitStepView -</comment>
  </data>
  <data name="NoLoadingUnitsAvailable" xml:space="preserve">
    <value>No Loading Units available.</value>
    <comment>Wizard  - ChooseLoadingUnitStepView  -</comment>
  </data>
  <data name="LayoutOverview" xml:space="preserve">
    <value>Layout Overview</value>
    <comment>Wizard  - ChooseLoadingUnitStepView  -</comment>
  </data>
  <data name="CreateNewCompartementDesiredCompartmentType" xml:space="preserve">
    <value>Create a new Compartment of the desired Compartment Type</value>
    <comment>Wizard - CompartmentEditStepView -</comment>
  </data>
</root>