<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
                    xmlns:dxbt="http://schemas.devexpress.com/winfx/2008/xaml/bars/themekeys"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxef="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxei="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxep="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxmvvmi="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxtEx="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:help="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls">

    <dx:BoolToVisibilityInverseConverter x:Key="inverseBoolToVisibilityConverter" />
    <dx:BoolToVisibilityConverter x:Key="boolToVisibilityConverter" />
    <dx:EmbeddedResourceImageConverter x:Key="EmbeddedResourceImageConverter" />
    <SolidColorBrush x:Key="ImageEditToolSeparatorBackground"
                     Color="#FFDADADA" />

    <SolidColorBrush x:Key="MenuBackground"
                     Color="#4d5a7c" />

    <sys:Double x:Key="{dxet:CameraControlThemeKey ResourceKey=SettingsMinWidth}">280</sys:Double>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=Template}"
                     TargetType="{x:Type dxe:ImageEdit}">
        <wms:BusyIndicator Grid.Row="2"
                           Grid.ColumnSpan="2"
                           IsBusy="{Binding Path=IsLoading, RelativeSource={RelativeSource TemplatedParent}}">
            <Grid x:Name="PART_Root">
                <!--ONLY SL
            <Grid.Resources>
                <ControlTemplate x:Key="EmptyBorderTemplate" TargetType="ContentControl">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="EnabledStates">
                    <VisualState x:Name="Enabled"/>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="0" Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0.35"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ReadOnlyStates">
                    <VisualState x:Name="Editable"/>
                    <VisualState x:Name="ReadOnly"/>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            ONLY SL-->
                <ContentControl x:Name="Border"
                                HorizontalContentAlignment="Stretch"
                                VerticalContentAlignment="Stretch"
                                dx:FocusHelper2.Focusable="False"
                                help:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Template="{TemplateBinding ActualBorderTemplate}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <dxep:ErrorControl x:Name="PART_ErrorPresenter"
                                           Grid.Column="0" />
                        <dxep:EditorControl x:Name="PART_Content"
                                            Grid.Column="1"
                                            Padding="{TemplateBinding Padding}"
                                            Foreground="{TemplateBinding Foreground}"
                                            Template="{TemplateBinding ActualEditorControlTemplate}" />
                    </Grid>
                </ContentControl>
            </Grid>
        </wms:BusyIndicator>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=MenuTemplate}"
                     TargetType="{x:Type ContentControl}">
        <StackPanel x:Name="PART_MenuContent"
                    Orientation="Horizontal">
            <!--  BEGIN WPF  -->
            <dxep:ImageEditLoadToolButton />
            <dxep:ImageEditClearToolButton />
            <dxep:ImageEditCutToolButton Visibility="Collapsed" />
            <dxep:ImageEditCopyToolButton Visibility="Collapsed" />
            <dxep:ImageEditPasteToolButton Visibility="Collapsed" />
            <dxep:ImageEditToolSeparator Visibility="Collapsed" />
            <dxep:ImageEditSaveToolButton Visibility="Collapsed" />
            <!--<dxep:ImageEditTakePictureButton Visibility="Collapsed" />-->
            <!--  END WPF  -->
            <!--ONLY SL
                <dxe:ImageEditClearToolButton />
                <dxe:ImageEditLoadToolButton />
                ONLY SL-->
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=MenuTemplate}"
                     TargetType="{x:Type ContentControl}">
        <StackPanel x:Name="PART_MenuContent"
                    Orientation="Horizontal">
            <!--  BEGIN WPF  -->
            <dxep:ImageEditLoadToolButton />
            <dxep:ImageEditClearToolButton />
            <dxep:ImageEditCutToolButton Visibility="Collapsed" />
            <dxep:ImageEditCopyToolButton Visibility="Collapsed" />
            <dxep:ImageEditPasteToolButton Visibility="Collapsed" />
            <dxep:ImageEditToolSeparator Visibility="Collapsed" />
            <dxep:ImageEditSaveToolButton Visibility="Collapsed" />
            <!--<dxep:ImageEditTakePictureButton Visibility="Collapsed" />-->
            <!--  END WPF  -->
            <!--ONLY SL
            <dxe:ImageEditClearToolButton />
            <dxe:ImageEditLoadToolButton />
            ONLY SL-->
            <dxep:ImageEditToolSeparator />
            <dxep:PopupImageEditOKToolButton />
            <dxep:PopupImageEditCancelToolButton />
        </StackPanel>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:PopupImageEditThemeKey ResourceKey=PopupContentTemplate}"
                     TargetType="{x:Type ContentControl}">
        <Grid SnapsToDevicePixels="True">
            <dxep:ImageEdit x:Name="PART_PopupContent"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Effect="{Binding Path=Tag.ImageEffect, RelativeSource={RelativeSource TemplatedParent}}"
                            Foreground="{Binding Path=Tag.Foreground, RelativeSource={RelativeSource TemplatedParent}}"
                            ShowBorder="False"
                            Stretch="{Binding Path=Tag.Stretch, RelativeSource={RelativeSource TemplatedParent}}" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditTemplate}">
        <Grid x:Name="PART_Container"
              Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Image x:Name="PART_Editor"
                   Effect="{Binding Path=(dxe:BaseEdit.OwnerEdit).ImageEffect, RelativeSource={RelativeSource TemplatedParent}}"
                   Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, RelativeSource={RelativeSource TemplatedParent}}"
                   Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" />
            <ContentControl dx:FocusHelper2.Focusable="False"
                            Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).EmptyContentTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                            Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).HasImage, Converter={StaticResource inverseBoolToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="PART_InplaceMenu"
                    Grid.Row="1"
                    Padding="8,2,0,2"
                    Background="{StaticResource MenuBackground}"
                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
            <dxep:FlyoutControl x:Name="PART_MenuFlyout"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                AnimationDuration="00:00:00.1"
                                Background="Transparent"
                                BorderThickness="0"
                                OpenOnHover="True"
                                PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}">
                <dxep:FlyoutControl.Settings>
                    <dxep:FlyInSettings />
                </dxep:FlyoutControl.Settings>
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvmi:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            EventName="Opening"
                                            PassEventArgsToCommand="True" />
                </dxmvvmi:Interaction.Behaviors>
                <ContentControl Focusable="False"
                                Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <ContentControl Focusable="False"
                                    Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </ContentControl>
            </dxep:FlyoutControl>
        </Grid>
    </ControlTemplate>


    <ControlTemplate x:Key="{dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}">
        <Grid x:Name="PART_Container"
              Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Image Name="PART_Editor"
                   Margin="{Binding Path=(dxe:BaseEdit.OwnerEdit).Padding, RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="False"
                   Source="{Binding Path=(dxe:BaseEdit.OwnerEdit).Source, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                   Stretch="{Binding Path=(dxe:BaseEdit.OwnerEdit).Stretch, RelativeSource={RelativeSource TemplatedParent}}" />
            <Border x:Name="PART_InplaceMenu"
                    Grid.Row="1"
                    Padding="8,2,0,2"
                    Background="{StaticResource MenuBackground}"
                    Visibility="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).InplaceMenuVisibility, RelativeSource={RelativeSource TemplatedParent}}">
                <ContentControl Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
            </Border>
            <dxep:FlyoutControl x:Name="PART_MenuFlyout"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Bottom"
                                AnimationDuration="00:00:00.1"
                                Background="Transparent"
                                BorderThickness="0"
                                OpenOnHover="True"
                                PlacementTarget="{Binding Path=(dxe:BaseEdit.OwnerEdit), RelativeSource={RelativeSource TemplatedParent}}">
                <dxep:FlyoutControl.Settings>
                    <dxep:FlyInSettings />
                </dxep:FlyoutControl.Settings>
                <dxmvvmi:Interaction.Behaviors>
                    <dxmvvmi:EventToCommand Command="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).CanShowMenuPopupCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                            EventName="Opening"
                                            PassEventArgsToCommand="True" />
                </dxmvvmi:Interaction.Behaviors>
                <ContentControl Focusable="False"
                                Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuContainerTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                    <ContentControl Focusable="False"
                                    Template="{Binding Path=(dxe:BaseEdit.OwnerEdit).MenuTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </ContentControl>
            </dxep:FlyoutControl>
        </Grid>
    </ControlTemplate>

    <Style BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.Editors.ImageEditToolButton,
                                                                ThemeName=Office2016White}}"
           TargetType="{x:Type dxe:ImageEditToolButton}">
        <Style.Setters>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="dx:FocusHelper2.Focusable" Value="False" />
            <Setter Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonTemplate}}" />
            <Setter Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=ToolButtonPalette}}" />
        </Style.Setters>
    </Style>


    <Style TargetType="{x:Type wms:WmsImageEdit}">
        <Setter Property="MinHeight" Value="200" />
        <Setter Property="MinWidth" Value="190" />
        <Setter Property="ShowMenuMode" Value="Always" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Template" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=Template}}" />
        <Setter Property="EditTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EditTemplate}}" />
        <Setter Property="DisplayTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EditTemplate}}" />
        <Setter Property="EmptyContentTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EmptyContentTemplate}}" />
        <Setter Property="MenuTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=MenuTemplate}}" />
        <Setter Property="MenuContainerTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=MenuPopupTemplate}}" />
        <Style.Triggers>
            <Trigger Property="EditMode" Value="InplaceActive">
                <Setter Property="EditTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}}" />
            </Trigger>
            <Trigger Property="EditMode" Value="InplaceInactive">
                <Setter Property="DisplayTemplate" Value="{DynamicResource {dxet:ImageEditThemeKey ResourceKey=EditInplaceTemplate}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
