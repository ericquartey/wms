<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxeh="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
                    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls"
                    mc:Ignorable="cs">

    <wms:PropertyDescriptionConverter x:Key="DNC"
                                      Control="{x:Type wms:SpinEdit}"
                                      Property="{x:Static wms:SpinEdit.EditValueProperty}" />

    <Style TargetType="wms:SpinEdit">
        <Setter Property="ShowError" Value="False" />
        <Setter Property="EditValueType" Value="{x:Type sys:Int32}" />
        <Setter Property="Validation.ErrorTemplate" Value="{DynamicResource ValidationErrorTemplateStyle}" />
        <Setter Property="Template" Value="{DynamicResource SpinEditButtonEditStyle}" />
        <Setter Property="MaskType" Value="Numeric" />
        <Setter Property="Mask" Value="N0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="AllowNullInput" Value="True" />
        <Setter Property="MinValue" Value="0" />
    </Style>

    <ControlTemplate x:Key="SpinEditButtonEditStyle"
                     TargetType="{x:Type dxe:ButtonEdit}">
        <ContentControl x:Name="PART_Root"
                        Grid.Row="1"
                        MaxHeight="44"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        dx:FocusHelper2.Focusable="False"
                        dxeh:ControlHelper.ShowFocusedState="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource TemplatedParent}}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Template="{TemplateBinding ActualBorderTemplate}">
            <Grid x:Name="ButtonEditGrid"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <dxe:ErrorControl x:Name="PART_ErrorPresenter" />
                <dxe:ButtonsControl x:Name="PART_LeftButtons"
                                    Grid.Column="1"
                                    ItemsSource="{TemplateBinding LeftButtons}">
                    <dxe:ButtonsControl.Visibility>
                        <Binding Path="ActualShowLeftButtons"
                                 RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:BoolToVisibilityConverter />
                            </Binding.Converter>
                        </Binding>
                    </dxe:ButtonsControl.Visibility>
                </dxe:ButtonsControl>
                <dxe:EditorControl x:Name="PART_Content"
                                   Grid.Column="2"
                                   VerticalAlignment="Stretch"
                                   HorizontalContentAlignment="Right"
                                   dx:FocusHelper2.Focusable="False"
                                   Template="{TemplateBinding ActualEditorControlTemplate}" />
                <dxe:ButtonsControl x:Name="PART_RightButtons"
                                    Grid.Column="3"
                                    ItemsSource="{TemplateBinding RightButtons}">
                    <dxe:ButtonsControl.Visibility>
                        <Binding Path="ActualShowRightButtons"
                                 RelativeSource="{RelativeSource TemplatedParent}">
                            <Binding.Converter>
                                <dx:BoolToVisibilityConverter />
                            </Binding.Converter>
                        </Binding>
                    </dxe:ButtonsControl.Visibility>
                </dxe:ButtonsControl>
            </Grid>
        </ContentControl>
        <ControlTemplate.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="true" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Content" Property="Template" Value="{Binding Path=EditTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(dxe:BaseEdit.OwnerEdit).(dxe:ActualPropertyProvider.Properties).IsTextEditable, RelativeSource={RelativeSource Self}}" Value="false" />
                    <Condition Binding="{Binding Path=EditMode, RelativeSource={RelativeSource Self}}" Value="Standalone" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter TargetName="PART_Content" Property="Template" Value="{Binding Path=EditNonEditableTemplate, RelativeSource={RelativeSource TemplatedParent}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=ShowBorder, RelativeSource={RelativeSource Self}}"
                         Value="true">
                <Setter TargetName="PART_ErrorPresenter" Property="dx:WpfSvgPalette.Palette" Value="{DynamicResource {dxet:InplaceBaseEditThemeKey ResourceKey=ValidationErrorSvgPalette}}" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinDownButtonTemplate,
                                                  ThemeName=Office2016White}"
                     TargetType="{x:Type ButtonBase}">
        <Grid x:Name="Grid1"
              MinWidth="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto">
                    <!--  BEGIN WPF  -->
                    <ColumnDefinition.SharedSizeGroup>
                        <sys:String>ComboBoxButton</sys:String>
                    </ColumnDefinition.SharedSizeGroup>
                    <!--  END WPF  -->
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="DefaultState"
                    cs:Name="Border_0004"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1,0,1,1"
                    Opacity="0" />
            <Border x:Name="HoverState"
                    cs:Name="Border_0005"
                    Background="{DynamicResource CommonSecondaryUltralight}"
                    BorderBrush="Transparent"
                    BorderThickness="1,0,1,1"
                    Opacity="0" />
            <Border x:Name="PressedState"
                    cs:Name="Border_0006"
                    Background="{DynamicResource CommonSecondaryLight}"
                    BorderBrush="Transparent"
                    BorderThickness="1,0,1,1"
                    Opacity="0" />
            <Grid x:Name="Arrow"
                  Grid.ColumnSpan="1"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="0.3*"
                                      MinWidth="16" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Glyph"
                                  Grid.ColumnSpan="2"
                                  Margin="0,0,0,1"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentTemplate="{TemplateBinding ContentTemplate}">
                    <ContentPresenter.Content>
                        <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                    </ContentPresenter.Content>
                </ContentPresenter>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Glyph"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="Grid1" Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{dxet:ButtonsThemeKey ResourceKey=SpinUpButtonTemplate,
                                                  ThemeName=Office2016White}"
                     TargetType="{x:Type ButtonBase}">
        <Grid x:Name="Grid1"
              MinWidth="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto">
                    <!--  BEGIN WPF  -->
                    <ColumnDefinition.SharedSizeGroup>
                        <sys:String>ComboBoxButton</sys:String>
                    </ColumnDefinition.SharedSizeGroup>
                    <!--  END WPF  -->
                </ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Border x:Name="DefaultState"
                    cs:Name="Border_0007"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="1,1,1,0"
                    Opacity="0" />
            <Border x:Name="HoverState"
                    cs:Name="Border_0008"
                    Background="{DynamicResource CommonSecondaryUltralight}"
                    BorderBrush="Transparent"
                    BorderThickness="1,1,1,0"
                    Opacity="0" />
            <Border x:Name="PressedState"
                    cs:Name="Border_0009"
                    Background="{DynamicResource CommonSecondaryLight}"
                    BorderBrush="Transparent"
                    BorderThickness="1,1,1,0"
                    Opacity="0" />
            <Grid x:Name="Arrow"
                  Grid.ColumnSpan="1"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.7*" />
                    <ColumnDefinition Width="0.3*"
                                      MinWidth="16" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Glyph"
                                  Grid.ColumnSpan="2"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  ContentTemplate="{TemplateBinding ContentTemplate}">
                    <ContentPresenter.Content>
                        <SolidColorBrush Color="{DynamicResource {dxet:SpinEditThemeKey ResourceKey=ArrowBrushColor}}" />
                    </ContentPresenter.Content>
                </ContentPresenter>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="DefaultState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="HoverState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0"
                                             Duration="0" />
                            <DoubleAnimation Storyboard.TargetName="PressedState"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="Glyph"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0.35"
                                             Duration="0" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="dx:ThemeManager.IsTouchEnabled" Value="True">
                <Setter TargetName="Grid1" Property="MinWidth" Value="44" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>
