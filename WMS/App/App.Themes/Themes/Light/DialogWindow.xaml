<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:cs="colorscheme_ignorable_uri"
                    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
                    xmlns:dxcn="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
                    xmlns:dxdst="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
                    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
                    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
                    xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
                    xmlns:dxwuii="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
                    xmlns:dxwuit="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/themekeys"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:wms="clr-namespace:Ferretto.Common.Controls;assembly=Ferretto.Common.Controls"
                    mc:Ignorable="cs">

    <dxmvvm:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <Style x:Key="textBoxStyle"
           TargetType="TextBox">
        <Setter Property="FontWeight" Value="Light" />
        <Setter Property="MaxWidth" Value="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsReadOnlyCaretVisible" Value="False" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="Transparent" />
    </Style>
    <Style x:Key="titleStyle"
           BasedOn="{StaticResource textBoxStyle}"
           TargetType="TextBox">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="ButtonDialogUIStyle"
           TargetType="{x:Type Button}">
        <Setter Property="Foreground" Value="{DynamicResource FontColor}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="Margin" Value="0,0,20,20" />
        <Setter Property="FontFamily" Value="{DynamicResource FontSmall}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Red">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="DXMessageBoxTemplate"
                     TargetType="{x:Type dxwui:WinUIMessageBox}">
        <Border Background="Red">
            <Grid MinWidth="350"
                  VerticalAlignment="Center"
                  Background="Red">
                <Grid Margin="0,8"
                      HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBox Background="Red"
                             Foreground="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=TitleForeground}}"
                             Style="{StaticResource titleStyle}"
                             Text="{TemplateBinding Caption}" />
                    <Grid Grid.Row="1"
                          Margin="0,18,0,0"
                          HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <dx:DXImage x:Name="PART_MessageBoxImage"
                                    Width="48"
                                    Height="48"
                                    Margin="-6,-1,4,-4"
                                    VerticalAlignment="Top"
                                    SnapsToDevicePixels="True"
                                    Source="{Binding Path=ImageSource, RelativeSource={RelativeSource TemplatedParent}}"
                                    Stretch="UniformToFill" />
                        <TextBox Grid.Column="1"
                                 VerticalAlignment="Center"
                                 FontSize="18"
                                 Foreground="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Foreground}}"
                                 Style="{StaticResource textBoxStyle}"
                                 Text="{TemplateBinding Text}"
                                 TextWrapping="Wrap" />
                    </Grid>
                    <Grid Grid.Row="2"
                          Margin="0,18,0,0"
                          HorizontalAlignment="Right">
                        <Grid x:Name="okGrid"
                              Visibility="Collapsed">
                            <Button x:Name="PART_OkButton"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Ok}"
                                    Style="{StaticResource ButtonDialogUIStyle}" />
                        </Grid>
                        <Grid x:Name="okCancelGrid"
                              Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_OkButton1"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Ok}"
                                    Style="{StaticResource ButtonDialogUIStyle}" />
                            <Button x:Name="PART_CancelButton"
                                    Grid.Column="1"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Cancel}"
                                    Style="{StaticResource ButtonDialogUIStyle}" />
                        </Grid>
                        <Grid x:Name="yesNoGrid"
                              Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_YesButton"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Yes}"
                                    Style="{DynamicResource ButtonDialogUIStyle}" />
                            <Button x:Name="PART_NoButton"
                                    Grid.Column="1"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=No}"
                                    Style="{DynamicResource ButtonDialogUIStyle}" />
                        </Grid>
                        <Grid x:Name="yesNoCancelGrid"
                              Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button x:Name="PART_YesButton1"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Yes}"
                                    Style="{DynamicResource ButtonDialogUIStyle}" />
                            <Button x:Name="PART_NoButton1"
                                    Grid.Column="1"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=No}"
                                    Style="{DynamicResource ButtonDialogUIStyle}" />
                            <Button x:Name="PART_CancelButton1"
                                    Grid.Column="2"
                                    MinWidth="65"
                                    Margin="6,0,0,0"
                                    Content="{dx:DXMessageBoxStringId StringId=Cancel}"
                                    Style="{DynamicResource ButtonDialogUIStyle}" />
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="group1">
                    <VisualState x:Name="OK">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="okGrid"
                                                           Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="OKCancel">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="okCancelGrid"
                                                           Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="YesNo">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="yesNoGrid"
                                                           Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>

                    <VisualState x:Name="YesNoCancel">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames dxcn:ValueSetter.Visibility="Visible"
                                                           Storyboard.TargetName="yesNoCancelGrid"
                                                           Storyboard.TargetProperty="Visibility" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
        </Border>
    </ControlTemplate>

    <!--
        x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.WinUIMessageBox}"
        BasedOn="{StaticResource {dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.WinUIMessageBox,
        ThemeName=Office2016White}}"
    -->
    <Style TargetType="dxwui:WinUIMessageBox">
        <Setter Property="Template" Value="{StaticResource DXMessageBoxTemplate}" />
    </Style>


    <ControlTemplate x:Key="WinUIDialogWindowTemplate"
                     TargetType="{x:Type dx:DXDialogWindow}">
        <Grid x:Name="Root_Grid">
            <Grid.Resources>
                <Label x:Key="DefaultDXDialogContent" />
                <dxwuii:WindowStorage x:Key="windowStorage"
                                      Window="{Binding RelativeSource={RelativeSource TemplatedParent}}" />
            </Grid.Resources>
            <AdornerDecorator x:Name="PART_WindowAdornerDecorator"
                              ClipToBounds="True">
                <Border Background="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=Background}}">
                    <!--  Shadow background on over e footer  -->

                    <ContentPresenter x:Name="PART_RootContentPresenter"
                                      ContentTemplate="{Binding Window.ActualWindowTemplate, Source={StaticResource windowStorage}}"
                                      DataContext="{Binding Window.DataContext, Source={StaticResource windowStorage}}">
                        <ContentPresenter.Content>
                            <Grid>
                                <Grid.Resources>
                                    <dxmvvm:BooleanToObjectConverter x:Key="DialogFooterMarginConverter">
                                        <dxmvvm:BooleanToObjectConverter.TrueValue>
                                            <Thickness>6,12,12,12</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.TrueValue>
                                        <dxmvvm:BooleanToObjectConverter.FalseValue>
                                            <Thickness>0</Thickness>
                                        </dxmvvm:BooleanToObjectConverter.FalseValue>
                                    </dxmvvm:BooleanToObjectConverter>
                                </Grid.Resources>
                                <Border MinWidth="350"
                                        VerticalAlignment="Center"
                                        Background="{DynamicResource CommonBackground}"
                                        BorderBrush="{Binding Window.BorderBrush, Source={StaticResource windowStorage}}"
                                        BorderThickness="{Binding Window.BorderThickness, Source={StaticResource windowStorage}}">
                                    <!--
                                        Content of dialog
                                        Background="{Binding Window.Background, Source={StaticResource windowStorage}}"
                                    -->
                                    <Grid Margin="0,8"
                                          HorizontalAlignment="Center">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ContentControl x:Name="PART_Title"
                                                        Content="{Binding Window.Title, Source={StaticResource windowStorage}}"
                                                        Focusable="False"
                                                        Style="{Binding Window.TitleStyle, Source={StaticResource windowStorage}}"
                                                        Visibility="{Binding Window.ShowTitle, Source={StaticResource windowStorage}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                                        <dx:DXWindowBackgroundPanel x:Name="PART_ContainerContent"
                                                                    Grid.Row="1"
                                                                    MaxWidth="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}"
                                                                    Margin="0,18,0,0"
                                                                    HorizontalAlignment="{Binding Window.HorizontalContentAlignment, Source={StaticResource windowStorage}}"
                                                                    VerticalAlignment="{Binding Window.VerticalContentAlignment, Source={StaticResource windowStorage}}"
                                                                    Background="{x:Null}">
                                            <dx:DXWindowBackgroundPanel.ContentTemplate>
                                                <Binding Path="Window.ContentTemplate"
                                                         Source="{StaticResource windowStorage}" />
                                            </dx:DXWindowBackgroundPanel.ContentTemplate>
                                            <dx:DXWindowBackgroundPanel.Content>
                                                <PriorityBinding>
                                                    <Binding Path="Window.Content"
                                                             Source="{StaticResource windowStorage}" />
                                                    <Binding Source="{StaticResource DefaultDXDialogContent}" />
                                                </PriorityBinding>
                                            </dx:DXWindowBackgroundPanel.Content>
                                        </dx:DXWindowBackgroundPanel>
                                        <ItemsControl x:Name="Footer"
                                                      Grid.Row="2"
                                                      Focusable="False"
                                                      ItemsPanel="{Binding Window.CommandButtonsPanel, Source={StaticResource windowStorage}}"
                                                      ItemsSource="{Binding Window.CommandButtons, Source={StaticResource windowStorage}}" />
                                        <ContentPresenter Grid.Row="2"
                                                          Margin="{Binding HasFooterButtons, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource DialogFooterMarginConverter}}"
                                                          Content="{Binding ActualFooter, RelativeSource={RelativeSource TemplatedParent}}" />
                                    </Grid>
                                </Border>
                            </Grid>
                        </ContentPresenter.Content>
                    </ContentPresenter>
                </Border>
            </AdornerDecorator>
        </Grid>
    </ControlTemplate>
    <!--  x:Key="{dxdst:DefaultStyleThemeKey FullName=DevExpress.Xpf.WindowsUI.WinUIDialogWindow}"  -->
    <Style TargetType="dxwui:WinUIDialogWindow">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Background" Value="{DynamicResource {dxwuit:MessageBoxElementsThemeKey ResourceKey=WindowBackground}}" />
        <Setter Property="Template" Value="{StaticResource WinUIDialogWindowTemplate}" />
        <Setter Property="CommandButtonStyle">
            <Setter.Value>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=System.Windows.Controls.Button}"
                       TargetType="Button">
                    <Setter Property="MinWidth" Value="65" />
                    <Setter Property="MinHeight" Value="22" />
                    <Setter Property="Margin" Value="6,0,0,0" />
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="CommandButtonsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Margin="0,18,0,0"
                                HorizontalAlignment="Right"
                                Focusable="False"
                                Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TitleStyle">
            <Setter.Value>
                <Style x:Key="{dxdst:DefaultStyleThemeKey FullName=ContentControl}"
                       TargetType="ContentControl">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="VerticalContentAlignment" Value="Stretch" />
                    <Setter Property="IsTabStop" Value="False" />
                    <Setter Property="Focusable" Value="False" />
                    <Setter Property="ContentTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <TextBox Focusable="False"
                                         IsTabStop="False"
                                         Style="{StaticResource titleStyle}"
                                         Text="{Binding Mode=OneWay}" />
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--SPECIFICTHEME TouchlineDark
        <Setter Property="TextElement.FontSize" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontSize}}" />
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource {dxdst:FloatingContainerThemeKey ResourceKey=GlobalFontFamily}}" />
        <Setter Property="Control.Foreground" Value="{DynamicResource {dxdst:ThemeColorsThemeKey ResourceKey=WhiteForegroundColor}}" /> SPECIFICTHEME-->
        <Style.Triggers>
            <Trigger Property="HasContent" Value="False">
                <Setter Property="Template" Value="{StaticResource WinUIDialogWindowTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
